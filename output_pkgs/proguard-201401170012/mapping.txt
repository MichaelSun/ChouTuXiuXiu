android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.c:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.am:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.an:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ap:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aq:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ar:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.as:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.at:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.au:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.av:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.aw:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ax:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ay:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.az:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bc:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bd:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.be:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bf:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bg:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bh:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bi:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bj:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bk:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bl:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bn:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bo:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean hasOpaqueBackground(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    boolean isEdgeTouched(int) -> d
    boolean isEdgeTouched(int,int) -> c
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> e
    int getEdgesTouched(int,int) -> f
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    java.lang.String DEFAULT_TYPE_KEY -> DEFAULT_TYPE_KEY
    int DEFAULT_PARSER_FEATURE -> DEFAULT_PARSER_FEATURE
    java.lang.String DEFFAULT_DATE_FORMAT -> DEFFAULT_DATE_FORMAT
    int DEFAULT_GENERATE_FEATURE -> DEFAULT_GENERATE_FEATURE
    java.lang.String VERSION -> VERSION
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,int) -> parse
    java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,int) -> parse
    java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    int handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> handleResovleTask
    java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(byte[],int,int,java.nio.charset.CharsetDecoder,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void writeJSONString(java.lang.Appendable) -> writeJSONString
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.lang.Object relatedArray -> relatedArray
    java.lang.reflect.Type componentType -> componentType
    java.lang.Object getRelatedArray() -> getRelatedArray
    void setRelatedArray(java.lang.Object) -> setRelatedArray
    java.lang.reflect.Type getComponentType() -> getComponentType
    void setComponentType(java.lang.reflect.Type) -> setComponentType
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(int) -> getBoolean
    boolean getBooleanValue(int) -> getBooleanValue
    java.lang.Byte getByte(int) -> getByte
    byte getByteValue(int) -> getByteValue
    java.lang.Short getShort(int) -> getShort
    short getShortValue(int) -> getShortValue
    java.lang.Integer getInteger(int) -> getInteger
    int getIntValue(int) -> getIntValue
    java.lang.Long getLong(int) -> getLong
    long getLongValue(int) -> getLongValue
    java.lang.Float getFloat(int) -> getFloat
    float getFloatValue(int) -> getFloatValue
    java.lang.Double getDouble(int) -> getDouble
    double getDoubleValue(int) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    java.lang.String getString(int) -> getString
    java.util.Date getDate(int) -> getDate
    java.sql.Date getSqlDate(int) -> getSqlDate
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.alibaba.fastjson.JSONAware:
    java.lang.String toJSONString() -> toJSONString
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBooleanValue(java.lang.String) -> getBooleanValue
    java.lang.Byte getByte(java.lang.String) -> getByte
    byte getByteValue(java.lang.String) -> getByteValue
    java.lang.Short getShort(java.lang.String) -> getShort
    short getShortValue(java.lang.String) -> getShortValue
    java.lang.Integer getInteger(java.lang.String) -> getInteger
    int getIntValue(java.lang.String) -> getIntValue
    java.lang.Long getLong(java.lang.String) -> getLong
    long getLongValue(java.lang.String) -> getLongValue
    java.lang.Float getFloat(java.lang.String) -> getFloat
    float getFloatValue(java.lang.String) -> getFloatValue
    java.lang.Double getDouble(java.lang.String) -> getDouble
    double getDoubleValue(java.lang.String) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void startArray() -> startArray
    void endArray() -> endArray
    void startStructure() -> startStructure
    void endStructure() -> endStructure
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.Integer readInteger() -> readInteger
    java.lang.Long readLong() -> readLong
    java.lang.String readString() -> readString
    java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    java.lang.Object readObject(java.lang.Class) -> readObject
    void readObject(java.lang.Object) -> readObject
    java.lang.Object readObject() -> readObject
    java.lang.Object readObject(java.util.Map) -> readObject
    void readBefore() -> readBefore
    void readAfter() -> readAfter
com.alibaba.fastjson.JSONStreamAware -> com.alibaba.fastjson.JSONStreamAware:
    void writeJSONString(java.lang.Appendable) -> writeJSONString
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    int StartObject -> StartObject
    int PropertyKey -> PropertyKey
    int PropertyValue -> PropertyValue
    int StartArray -> StartArray
    int ArrayValue -> ArrayValue
    com.alibaba.fastjson.JSONStreamContext parent -> parent
    int state -> state
    com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    int getState() -> getState
    void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    com.alibaba.fastjson.serializer.SerializeWriter writer -> writer
    com.alibaba.fastjson.serializer.JSONSerializer serializer -> serializer
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void writeKey(java.lang.String) -> writeKey
    void writeValue(java.lang.Object) -> writeValue
    void writeObject(java.lang.String) -> writeObject
    void writeObject(java.lang.Object) -> writeObject
    void startArray() -> startArray
    void beginStructure() -> beginStructure
    void endArray() -> endArray
    void endStructure() -> endStructure
    void beforeWrite() -> beforeWrite
    void afterWriter() -> afterWriter
    void flush() -> flush
    void close() -> close
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type LIST_STRING -> LIST_STRING
    java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
com.alibaba.fastjson.annotation.JSONCreator -> com.alibaba.fastjson.annotation.JSONCreator:
com.alibaba.fastjson.annotation.JSONField -> com.alibaba.fastjson.annotation.JSONField:
    java.lang.String name() -> name
    java.lang.String format() -> format
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    com.alibaba.fastjson.parser.Feature[] parseFeatures() -> parseFeatures
com.alibaba.fastjson.annotation.JSONType -> com.alibaba.fastjson.annotation.JSONType:
    boolean asm() -> asm
    java.lang.String[] orders() -> orders
    java.lang.String[] ignores() -> ignores
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    boolean alphabetic() -> alphabetic
    java.lang.Class mappingTo() -> mappingTo
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
com.alibaba.fastjson.parser.CharTypes -> com.alibaba.fastjson.parser.CharTypes:
    char[] digits -> digits
    boolean[] firstIdentifierFlags -> firstIdentifierFlags
    boolean[] identifierFlags -> identifierFlags
    boolean[] specicalFlags_doubleQuotes -> specicalFlags_doubleQuotes
    boolean[] specicalFlags_singleQuotes -> specicalFlags_singleQuotes
    char[] replaceChars -> replaceChars
    char[] ASCII_CHARS -> ASCII_CHARS
    boolean isSpecial_doubleQuotes(char) -> isSpecial_doubleQuotes
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    java.lang.Object input -> input
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig config -> config
    java.util.Set primitiveClasses -> primitiveClasses
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    com.alibaba.fastjson.parser.JSONLexer lexer -> lexer
    com.alibaba.fastjson.parser.ParseContext context -> context
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> contextArray
    int contextArrayIndex -> contextArrayIndex
    java.util.List resolveTaskList -> resolveTaskList
    int NONE -> NONE
    int NeedToResolve -> NeedToResolve
    int TypeNameRedirect -> TypeNameRedirect
    int resolveStatus -> resolveStatus
    java.lang.String getDateFomartPattern() -> getDateFomartPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    java.lang.String getInput() -> getInput
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    java.lang.Object parseObject(java.lang.Class) -> parseObject
    java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    java.util.List parseArray(java.lang.Class) -> parseArray
    void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    void parseObject(java.lang.Object) -> parseObject
    java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    int getResolveStatus() -> getResolveStatus
    void setResolveStatus(int) -> setResolveStatus
    java.lang.Object getObject(java.lang.String) -> getObject
    void checkListResolve(java.util.Collection) -> checkListResolve
    void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    java.lang.Object parseObject(java.util.Map) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    void parseArray(java.util.Collection) -> parseArray
    void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.util.List getResolveTaskList() -> getResolveTaskList
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    void popContext() -> popContext
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    java.lang.Object parse() -> parse
    java.lang.Object parseKey() -> parseKey
    java.lang.Object parse(java.lang.Object) -> parse
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    void accept(int) -> accept
    void accept(int,int) -> accept
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    com.alibaba.fastjson.parser.ParseContext context -> context
    java.lang.String referenceValue -> referenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> fieldDeserializer
    com.alibaba.fastjson.parser.ParseContext ownerContext -> ownerContext
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.lang.String getReferenceValue() -> getReferenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> AutoCloseSource
    com.alibaba.fastjson.parser.Feature AllowComment -> AllowComment
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> AllowUnQuotedFieldNames
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> AllowSingleQuotes
    com.alibaba.fastjson.parser.Feature InternFieldNames -> InternFieldNames
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> AllowISO8601DateFormat
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> AllowArbitraryCommas
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> UseBigDecimal
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> IgnoreNotMatch
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> SortFeidFastMatch
    com.alibaba.fastjson.parser.Feature DisableASM -> DisableASM
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> InitStringFieldAsEmpty
    int mask -> mask
    com.alibaba.fastjson.parser.Feature[] $VALUES -> $VALUES
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
com.alibaba.fastjson.parser.JSONLexer -> com.alibaba.fastjson.parser.JSONLexer:
    byte EOI -> EOI
    int token -> token
    int pos -> pos
    int features -> features
    char ch -> ch
    int bp -> bp
    int eofPos -> eofPos
    char[] sbuf -> sbuf
    int sp -> sp
    int np -> np
    boolean hasSpecial -> hasSpecial
    java.util.Calendar calendar -> calendar
    java.lang.ThreadLocal SBUF_REF_LOCAL -> SBUF_REF_LOCAL
    com.alibaba.fastjson.parser.Keywords keywods -> keywods
    char[] typeFieldName -> typeFieldName
    boolean[] whitespaceFlags -> whitespaceFlags
    long MULTMIN_RADIX_TEN -> MULTMIN_RADIX_TEN
    long N_MULTMAX_RADIX_TEN -> N_MULTMAX_RADIX_TEN
    int INT_MULTMIN_RADIX_TEN -> INT_MULTMIN_RADIX_TEN
    int INT_N_MULTMAX_RADIX_TEN -> INT_N_MULTMAX_RADIX_TEN
    int[] digits -> digits
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    void nextIdent() -> nextIdent
    void nextTokenWithColon() -> nextTokenWithColon
    int token() -> token
    java.lang.String tokenName() -> tokenName
    int pos() -> pos
    int getBufferPosition() -> getBufferPosition
    java.lang.Number integerValue() -> integerValue
    void nextTokenWithColon(int) -> nextTokenWithColon
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    java.lang.String numberString() -> numberString
    boolean isEOF() -> isEOF
    char getCurrent() -> getCurrent
    char charAt(int) -> charAt
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    void copyTo(int,int,char[]) -> copyTo
    void scanString() -> scanString
    java.util.Calendar getCalendar() -> getCalendar
    int intValue() -> intValue
    byte[] bytesValue() -> bytesValue
    void close() -> close
    boolean isRef() -> isRef
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    void scanTrue() -> scanTrue
    void scanTreeSet() -> scanTreeSet
    void scanNullOrNew() -> scanNullOrNew
    void scanFalse() -> scanFalse
    void scanIdent() -> scanIdent
    java.lang.String stringVal() -> stringVal
    boolean isBlankInput() -> isBlankInput
    void skipWhitespace() -> skipWhitespace
    void scanStringSingleQuote() -> scanStringSingleQuote
    void scanSet() -> scanSet
    void putChar(char) -> putChar
    void scanNumber() -> scanNumber
    long longValue() -> longValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number numberValue() -> numberValue
    boolean isWhitespace(char) -> isWhitespace
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    int BUF_INIT_LEN -> BUF_INIT_LEN
    java.lang.ThreadLocal BUF_REF_LOCAL -> BUF_REF_LOCAL
    java.io.Reader reader -> reader
    char[] buf -> buf
    int bufLength -> bufLength
    char charAt(int) -> charAt
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String numberString() -> numberString
    void close() -> close
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    java.lang.String text -> text
    int ISO8601_LEN_0 -> ISO8601_LEN_0
    int ISO8601_LEN_1 -> ISO8601_LEN_1
    int ISO8601_LEN_2 -> ISO8601_LEN_2
    char charAt(int) -> charAt
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    boolean checkTime(char,char,char,char,char,char) -> checkTime
    void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    int ERROR -> ERROR
    int LITERAL_INT -> LITERAL_INT
    int LITERAL_FLOAT -> LITERAL_FLOAT
    int LITERAL_STRING -> LITERAL_STRING
    int LITERAL_ISO8601_DATE -> LITERAL_ISO8601_DATE
    int TRUE -> TRUE
    int FALSE -> FALSE
    int NULL -> NULL
    int NEW -> NEW
    int LPAREN -> LPAREN
    int RPAREN -> RPAREN
    int LBRACE -> LBRACE
    int RBRACE -> RBRACE
    int LBRACKET -> LBRACKET
    int RBRACKET -> RBRACKET
    int COMMA -> COMMA
    int COLON -> COLON
    int IDENTIFIER -> IDENTIFIER
    int FIELD_NAME -> FIELD_NAME
    int EOF -> EOF
    int SET -> SET
    int TREE_SET -> TREE_SET
    java.lang.String name(int) -> name
com.alibaba.fastjson.parser.JavaBeanMapping -> com.alibaba.fastjson.parser.JavaBeanMapping:
    com.alibaba.fastjson.parser.JavaBeanMapping instance -> instance
    com.alibaba.fastjson.parser.JavaBeanMapping getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.parser.Keywords -> com.alibaba.fastjson.parser.Keywords:
    java.util.Map keywords -> keywords
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> DEFAULT_KEYWORDS
    java.lang.Integer getKeyword(java.lang.String) -> getKeyword
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    java.lang.Object object -> object
    com.alibaba.fastjson.parser.ParseContext parent -> parent
    java.lang.Object fieldName -> fieldName
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getType() -> getType
    void setType(java.lang.reflect.Type) -> setType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    java.util.Set primitiveClasses -> primitiveClasses
    com.alibaba.fastjson.parser.ParserConfig global -> global
    com.alibaba.fastjson.util.IdentityHashMap derializers -> derializers
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    boolean isPrimitive(java.lang.Class) -> isPrimitive
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_BUCKET_LENTH -> MAX_BUCKET_LENTH
    int MAX_SIZE -> MAX_SIZE
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> buckets
    java.lang.String[] symbols -> symbols
    char[][] symbols_char -> symbols_char
    int indexMask -> indexMask
    int size -> size
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    int size() -> size
    int hash(char[],int,int) -> hash
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> hashCode
    char[] characters -> characters
    byte[] bytes -> bytes
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> next
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    java.lang.reflect.Type itemType -> itemType
    int itemFastMatchToken -> itemFastMatchToken
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> deserializer
    int getFastMatchToken() -> getFastMatchToken
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer -> com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanDeserializer:
    com.alibaba.fastjson.parser.deserializer.BooleanDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CalendarDeserializer -> com.alibaba.fastjson.parser.deserializer.CalendarDeserializer:
    com.alibaba.fastjson.parser.deserializer.CalendarDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharacterDeserializer -> com.alibaba.fastjson.parser.deserializer.CharacterDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharacterDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharsetDeserializer -> com.alibaba.fastjson.parser.deserializer.CharsetDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharsetDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer:
    java.util.Collection collection -> collection
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    java.lang.Class enumClass -> enumClass
    java.util.Map ordinalMap -> ordinalMap
    java.util.Map nameMap -> nameMap
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.Class clazz -> clazz
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
    void setValue(java.lang.Object,boolean) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    void setValue(java.lang.Object,long) -> setValue
    void setValue(java.lang.Object,java.lang.String) -> setValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.FileDeserializer -> com.alibaba.fastjson.parser.deserializer.FileDeserializer:
    com.alibaba.fastjson.parser.deserializer.FileDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FloatDeserializer -> com.alibaba.fastjson.parser.deserializer.FloatDeserializer:
    com.alibaba.fastjson.parser.deserializer.FloatDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.IntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    java.util.Map feildDeserializerMap -> feildDeserializerMap
    java.util.List fieldDeserializers -> fieldDeserializers
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    int index -> index
    java.util.List list -> list
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.LocaleDeserializer -> com.alibaba.fastjson.parser.deserializer.LocaleDeserializer:
    com.alibaba.fastjson.parser.deserializer.LocaleDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongDeserializer -> com.alibaba.fastjson.parser.deserializer.LongDeserializer:
    com.alibaba.fastjson.parser.deserializer.LongDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.util.Map createMap(java.lang.reflect.Type) -> createMap
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    java.lang.String key -> key
    java.util.Map map -> map
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.ObjectDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.PatternDeserializer -> com.alibaba.fastjson.parser.deserializer.PatternDeserializer:
    com.alibaba.fastjson.parser.deserializer.PatternDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer -> com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer:
    com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringDeserializer -> com.alibaba.fastjson.parser.deserializer.StringDeserializer:
    com.alibaba.fastjson.parser.deserializer.StringDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URIDeserializer -> com.alibaba.fastjson.parser.deserializer.URIDeserializer:
    com.alibaba.fastjson.parser.deserializer.URIDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URLDeserializer -> com.alibaba.fastjson.parser.deserializer.URLDeserializer:
    com.alibaba.fastjson.parser.deserializer.URLDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.UUIDDeserializer -> com.alibaba.fastjson.parser.deserializer.UUIDDeserializer:
    com.alibaba.fastjson.parser.deserializer.UUIDDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AppendableSerializer -> com.alibaba.fastjson.serializer.AppendableSerializer:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    java.lang.Class componentType -> componentType
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> compObjectSerializer
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.alibaba.fastjson.serializer.AtomicBooleanSerializer:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer -> com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.alibaba.fastjson.serializer.AtomicIntegerSerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongArraySerializer -> com.alibaba.fastjson.serializer.AtomicLongArraySerializer:
    com.alibaba.fastjson.serializer.AtomicLongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.alibaba.fastjson.serializer.AtomicLongSerializer:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigDecimalSerializer -> com.alibaba.fastjson.serializer.BigDecimalSerializer:
    com.alibaba.fastjson.serializer.BigDecimalSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigIntegerSerializer -> com.alibaba.fastjson.serializer.BigIntegerSerializer:
    com.alibaba.fastjson.serializer.BigIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanSerializer -> com.alibaba.fastjson.serializer.BooleanSerializer:
    com.alibaba.fastjson.serializer.BooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteSerializer -> com.alibaba.fastjson.serializer.ByteSerializer:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarSerializer -> com.alibaba.fastjson.serializer.CalendarSerializer:
    com.alibaba.fastjson.serializer.CalendarSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterSerializer -> com.alibaba.fastjson.serializer.CharacterSerializer:
    com.alibaba.fastjson.serializer.CharacterSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    com.alibaba.fastjson.serializer.DateSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> instance
    java.text.DecimalFormat decimalFormat -> decimalFormat
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.String double_quoted_fieldPrefix -> double_quoted_fieldPrefix
    java.lang.String single_quoted_fieldPrefix -> single_quoted_fieldPrefix
    java.lang.String un_quoted_fieldPrefix -> un_quoted_fieldPrefix
    boolean writeNull -> writeNull
    boolean isWriteNull() -> isWriteNull
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
    java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.FileSerializer -> com.alibaba.fastjson.serializer.FileSerializer:
    com.alibaba.fastjson.serializer.FileSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatSerializer -> com.alibaba.fastjson.serializer.FloatSerializer:
    com.alibaba.fastjson.serializer.FloatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetAddressSerializer -> com.alibaba.fastjson.serializer.InetAddressSerializer:
    com.alibaba.fastjson.serializer.InetAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetSocketAddressSerializer -> com.alibaba.fastjson.serializer.InetSocketAddressSerializer:
    com.alibaba.fastjson.serializer.InetSocketAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerSerializer -> com.alibaba.fastjson.serializer.IntegerSerializer:
    com.alibaba.fastjson.serializer.IntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    com.alibaba.fastjson.serializer.SerializeConfig config -> config
    com.alibaba.fastjson.serializer.SerializeWriter out -> out
    java.util.List propertyFilters -> propertyFilters
    java.util.List valueFilters -> valueFilters
    java.util.List nameFilters -> nameFilters
    java.util.List propertyPreFilters -> propertyPreFilters
    int indentCount -> indentCount
    java.lang.String indent -> indent
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    java.util.IdentityHashMap references -> references
    com.alibaba.fastjson.serializer.SerialContext context -> context
    java.lang.String getDateFormatPattern() -> getDateFormatPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> setContext
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    boolean containsReference(java.lang.Object) -> containsReference
    void writeReference(java.lang.Object) -> writeReference
    java.util.List getValueFilters() -> getValueFilters
    java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    int getIndentCount() -> getIndentCount
    void incrementIndent() -> incrementIndent
    void decrementIdent() -> decrementIdent
    void println() -> println
    java.util.List getNameFilters() -> getNameFilters
    java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    java.util.List getPropertyFilters() -> getPropertyFilters
    java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void writeNull() -> writeNull
    com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    void write(java.io.Writer,java.lang.Object) -> write
    void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    void write(java.lang.Object) -> write
    void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> writeWithFieldName
    void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
    void write(java.lang.String) -> write
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    void close() -> close
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry[] buckets -> buckets
    int indexMask -> indexMask
    boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    int hashCode -> hashCode
    java.lang.Object object -> object
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry next -> next
com.alibaba.fastjson.serializer.JSONSerializerMap -> com.alibaba.fastjson.serializer.JSONSerializerMap:
    boolean put(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> put
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> getters
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> sortedGetters
    com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    com.alibaba.fastjson.serializer.ListSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongSerializer -> com.alibaba.fastjson.serializer.LongSerializer:
    com.alibaba.fastjson.serializer.LongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    com.alibaba.fastjson.serializer.MapSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NameFilter -> com.alibaba.fastjson.serializer.NameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> fieldSerializer
    java.lang.Class runtimeFieldClass -> runtimeFieldClass
    java.lang.String format -> format
    boolean writeNumberAsZero -> writeNumberAsZero
    boolean writeNullStringAsEmpty -> writeNullStringAsEmpty
    boolean writeNullBooleanAsFalse -> writeNullBooleanAsFalse
    boolean writeNullListAsEmpty -> writeNullListAsEmpty
    boolean writeEnumUsingToString -> writeEnumUsingToString
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectSerializer -> com.alibaba.fastjson.serializer.ObjectSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternSerializer -> com.alibaba.fastjson.serializer.PatternSerializer:
    com.alibaba.fastjson.serializer.PatternSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PropertyFilter -> com.alibaba.fastjson.serializer.PropertyFilter:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.alibaba.fastjson.serializer.PropertyPreFilter:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.ReferenceSerializer -> com.alibaba.fastjson.serializer.ReferenceSerializer:
    com.alibaba.fastjson.serializer.ReferenceSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    com.alibaba.fastjson.serializer.SerialContext parent -> parent
    java.lang.Object object -> object
    java.lang.Object fieldName -> fieldName
    com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    java.lang.Object getObject() -> getObject
    java.lang.Object getFieldName() -> getFieldName
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerialWriterStringEncoder -> com.alibaba.fastjson.serializer.SerialWriterStringEncoder:
    java.nio.charset.CharsetEncoder encoder -> encoder
    byte[] encode(char[],int,int) -> encode
    java.nio.charset.CharsetEncoder getEncoder() -> getEncoder
    byte[] encode(char[],int,int,byte[]) -> encode
    int scale(int,float) -> scale
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> globalInstance
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.serializer.SerializeFilter -> com.alibaba.fastjson.serializer.SerializeFilter:
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    char[] buf -> buf
    int count -> count
    java.lang.ThreadLocal bufLocal -> bufLocal
    int features -> features
    java.io.Writer writer -> writer
    int getBufferLength() -> getBufferLength
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void write(int) -> write
    void write(char) -> write
    void write(char[],int,int) -> write
    void expandCapacity(int) -> expandCapacity
    void write(java.lang.String,int,int) -> write
    void writeTo(java.io.Writer) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    void reset() -> reset
    char[] toCharArray() -> toCharArray
    byte[] toBytes(java.lang.String) -> toBytes
    int size() -> size
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> writeInt
    void writeByteArray(byte[]) -> writeByteArray
    void writeIntAndChar(int,char) -> writeIntAndChar
    void writeLongAndChar(long,char) -> writeLongAndChar
    void writeLong(long) -> writeLong
    void writeNull() -> writeNull
    void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    void write(boolean) -> write
    void writeString(java.lang.String,char) -> writeString
    void writeString(java.lang.String) -> writeString
    void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(java.lang.String,boolean) -> writeFieldName
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> QuoteFieldNames
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> UseSingleQuotes
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> WriteMapNullValue
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> WriteEnumUsingToString
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> UseISO8601DateFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> WriteNullListAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> WriteNullStringAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> WriteNullNumberAsZero
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> WriteNullBooleanAsFalse
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> SkipTransientField
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> SortField
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> WriteTabAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> PrettyFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> WriteClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> WriteSlashAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> BrowserCompatible
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> WriteDateUseDateFormat
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> NotWriteRootClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> DisableCheckSpecialChar
    int mask -> mask
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> $VALUES
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ShortSerializer -> com.alibaba.fastjson.serializer.ShortSerializer:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    java.lang.String pattern -> pattern
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    java.lang.Class clazz -> clazz
    java.util.Set includes -> includes
    java.util.Set excludes -> excludes
    java.lang.Class getClazz() -> getClazz
    java.util.Set getIncludes() -> getIncludes
    java.util.Set getExcludes() -> getExcludes
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.StringSerializer -> com.alibaba.fastjson.serializer.StringSerializer:
    com.alibaba.fastjson.serializer.StringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
com.alibaba.fastjson.serializer.TimeZoneSerializer -> com.alibaba.fastjson.serializer.TimeZoneSerializer:
    com.alibaba.fastjson.serializer.TimeZoneSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ToStringSerializer -> com.alibaba.fastjson.serializer.ToStringSerializer:
    com.alibaba.fastjson.serializer.ToStringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ValueFilter -> com.alibaba.fastjson.serializer.ValueFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    char[] CA -> CA
    int[] IA -> IA
    byte[] decodeFast(char[],int,int) -> decodeFast
    byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor defaultConstructor -> defaultConstructor
    java.lang.reflect.Constructor creatorConstructor -> creatorConstructor
    java.lang.reflect.Method factoryMethod -> factoryMethod
    java.util.List fieldList -> fieldList
    java.lang.Class getClazz() -> getClazz
    java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
    java.util.List getFieldList() -> getFieldList
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> getField
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.reflect.Field field -> field
    java.lang.Class fieldClass -> fieldClass
    java.lang.reflect.Type fieldType -> fieldType
    java.lang.Class declaringClass -> declaringClass
    boolean getOnly -> getOnly
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    java.lang.String toString() -> toString
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    void setAccessible(boolean) -> setAccessible
    boolean isGetOnly() -> isGetOnly
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    char[] digits -> digits
    char[] DigitTens -> DigitTens
    char[] DigitOnes -> DigitOnes
    int[] sizeTable -> sizeTable
    void close(java.io.Closeable) -> close
    int stringSize(long) -> stringSize
    void getChars(long,int,char[]) -> getChars
    void getChars(int,int,char[]) -> getChars
    void getChars(byte,int,char[]) -> getChars
    int stringSize(int) -> stringSize
    void decode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decode
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> buckets
    int indexMask -> indexMask
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> next
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.ThreadLocalCache -> com.alibaba.fastjson.util.ThreadLocalCache:
    int CHARS_CACH_INIT_SIZE -> CHARS_CACH_INIT_SIZE
    int CHARS_CACH_MAX_SIZE -> CHARS_CACH_MAX_SIZE
    java.lang.ThreadLocal charsBufLocal -> charsBufLocal
    int BYTES_CACH_INIT_SIZE -> BYTES_CACH_INIT_SIZE
    int BYTeS_CACH_MAX_SIZE -> BYTeS_CACH_MAX_SIZE
    java.lang.ThreadLocal bytesBufLocal -> bytesBufLocal
    void clearChars() -> clearChars
    char[] getChars(int) -> getChars
    char[] allocate(int) -> allocate
    int getAllocateLength(int,int,int) -> getAllocateLength
    void clearBytes() -> clearBytes
    byte[] getBytes(int) -> getBytes
    byte[] allocateBytes(int) -> allocateBytes
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    java.util.concurrent.ConcurrentMap mappings -> mappings
    java.util.Map methodsMap -> methodsMap
    java.lang.String castToString(java.lang.Object) -> castToString
    java.lang.Byte castToByte(java.lang.Object) -> castToByte
    java.lang.Character castToChar(java.lang.Object) -> castToChar
    java.lang.Short castToShort(java.lang.Object) -> castToShort
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    java.util.Date castToDate(java.lang.Object) -> castToDate
    java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    java.lang.Long castToLong(java.lang.Object) -> castToLong
    java.lang.Integer castToInt(java.lang.Object) -> castToInt
    byte[] castToBytes(java.lang.Object) -> castToBytes
    java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    void addBaseClassMappings() -> addBaseClassMappings
    void clearClassMapping() -> clearClassMapping
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.reflect.Method[] getAllMethods(java.lang.Class) -> getAllMethods
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
com.almeros.android.multitouch.gesturedetector.BaseGestureDetector -> com.a.a.a.a.a:
    android.content.Context mContext -> a
    boolean mGestureInProgress -> b
    android.view.MotionEvent mPrevEvent -> c
    android.view.MotionEvent mCurrEvent -> d
    float mCurrPressure -> e
    float mPrevPressure -> f
    long mTimeDelta -> g
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void handleStartProgressEvent(int,android.view.MotionEvent) -> a
    void handleInProgressEvent(int,android.view.MotionEvent) -> b
    void updateStateByEvent(android.view.MotionEvent) -> b
    void resetState() -> a
com.almeros.android.multitouch.gesturedetector.MoveGestureDetector -> com.a.a.a.a.b:
    android.graphics.PointF FOCUS_DELTA_ZERO -> h
    com.almeros.android.multitouch.gesturedetector.MoveGestureDetector$OnMoveGestureListener mListener -> i
    android.graphics.PointF mCurrFocusInternal -> j
    android.graphics.PointF mPrevFocusInternal -> k
    android.graphics.PointF mFocusExternal -> l
    android.graphics.PointF mFocusDeltaExternal -> m
    void handleStartProgressEvent(int,android.view.MotionEvent) -> a
    void handleInProgressEvent(int,android.view.MotionEvent) -> b
    void updateStateByEvent(android.view.MotionEvent) -> b
    android.graphics.PointF determineFocalPoint(android.view.MotionEvent) -> c
    android.graphics.PointF getFocusDelta() -> b
com.almeros.android.multitouch.gesturedetector.MoveGestureDetector$OnMoveGestureListener -> com.a.a.a.a.c:
    boolean onMove(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> a
    boolean onMoveBegin(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> b
    void onMoveEnd(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> c
com.almeros.android.multitouch.gesturedetector.MoveGestureDetector$SimpleOnMoveGestureListener -> com.a.a.a.a.d:
    boolean onMove(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> a
    boolean onMoveBegin(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> b
    void onMoveEnd(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> c
com.avos.avoscloud.AVACL -> com.avos.avoscloud.AVACL:
    java.util.Map permissionsById -> permissionsById
    java.lang.String readTag -> readTag
    java.lang.String writeTag -> writeTag
    java.lang.String publicTag -> publicTag
    java.util.Map mapForKey(java.lang.String,boolean) -> mapForKey
    void allowRead(boolean,java.lang.String) -> allowRead
    boolean isReadAllowed(java.lang.String) -> isReadAllowed
    void allowWrite(boolean,java.lang.String) -> allowWrite
    boolean isWriteAllowed(java.lang.String) -> isWriteAllowed
    boolean getPublicReadAccess() -> getPublicReadAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    boolean getReadAccess(com.avos.avoscloud.AVUser) -> getReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    java.lang.String roleName(java.lang.String) -> roleName
    boolean getRoleReadAccess(com.avos.avoscloud.AVRole) -> getRoleReadAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    boolean getRoleWriteAccess(com.avos.avoscloud.AVRole) -> getRoleWriteAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    boolean getWriteAccess(com.avos.avoscloud.AVUser) -> getWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setDefaultACL(com.avos.avoscloud.AVACL,boolean) -> setDefaultACL
    com.avos.avoscloud.AVACL parseACLWithPublicAccess(boolean,boolean) -> parseACLWithPublicAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    void setReadAccess(com.avos.avoscloud.AVUser,boolean) -> setReadAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    void setRoleReadAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    void setRoleWriteAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void setWriteAccess(com.avos.avoscloud.AVUser,boolean) -> setWriteAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    java.util.Map getPermissionsById() -> getPermissionsById
    java.util.Map getACLMap() -> getACLMap
com.avos.avoscloud.AVAnalytics -> com.avos.avoscloud.AVAnalytics:
    java.lang.String TAG -> TAG
    java.lang.String endPoint -> endPoint
    java.lang.String appOpen -> appOpen
    java.lang.String appOpenWithPush -> appOpenWithPush
    java.lang.String defaultChannel -> defaultChannel
    com.avos.avoscloud.AnalyticsImpl impl -> impl
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void setDefaultReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setDefaultReportPolicy
    void trackPushOpened(android.content.Intent) -> trackPushOpened
    void setAppChannel(java.lang.String) -> setAppChannel
    java.util.Map statisticsDictionary(java.lang.String,java.util.Map) -> statisticsDictionary
    void postAnalytics(java.util.Map) -> postAnalytics
    void start(android.content.Context) -> start
    void onFragmentStart(java.lang.String) -> onFragmentStart
    void onFragmentEnd(java.lang.String) -> onFragmentEnd
    void setAutoLocation(boolean) -> setAutoLocation
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setDebugMode(boolean) -> setDebugMode
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void debugDump(android.content.Context) -> debugDump
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.HashMap) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.HashMap,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,java.util.HashMap,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    java.lang.String getConfigParams(android.content.Context,java.lang.String,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setGender(android.content.Context,java.lang.String) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String,java.lang.String) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
    void setReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void setOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setOnlineConfigureListener
com.avos.avoscloud.AVAnalytics$1 -> com.avos.avoscloud.AVAnalytics$1:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVAnonymousUtils -> com.avos.avoscloud.AVAnonymousUtils:
    java.lang.String anonymousAuthData() -> anonymousAuthData
    boolean isLinked(com.avos.avoscloud.AVUser) -> isLinked
    void logIn(com.avos.avoscloud.LogInCallback) -> logIn
com.avos.avoscloud.AVAnonymousUtils$1 -> com.avos.avoscloud.AVAnonymousUtils$1:
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVBroadcastReceiver -> com.avos.avoscloud.AVBroadcastReceiver:
    java.lang.String LOGTAG -> LOGTAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avoscloud.AVCacheManager -> com.avos.avoscloud.AVCacheManager:
    com.avos.avoscloud.AVCacheManager instance -> instance
    java.io.File keyValueCacheDir() -> keyValueCacheDir
    java.io.File getCacheFile(java.lang.String) -> getCacheFile
    com.avos.avoscloud.AVCacheManager sharedInstance() -> sharedInstance
    boolean hasCache(java.lang.String) -> hasCache
    void get(java.lang.String,long,com.avos.avoscloud.GenericObjectCallback) -> get
    void delete(java.lang.String) -> delete
    void save(java.lang.String,java.lang.String) -> save
    boolean haveCache(java.lang.String) -> haveCache
    boolean clearAllCache() -> clearAllCache
    boolean clearCacheMoreThanOneDay() -> clearCacheMoreThanOneDay
    boolean clearCacheMoreThanDays(int) -> clearCacheMoreThanDays
com.avos.avoscloud.AVCallback -> com.avos.avoscloud.AVCallback:
    void internalDone(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone
    boolean mustRunOnUIThread() -> mustRunOnUIThread
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.AVCallback$1 -> com.avos.avoscloud.AVCallback$1:
    java.lang.Object val$t -> val$t
    com.avos.avoscloud.AVException val$parseException -> val$parseException
    com.avos.avoscloud.AVCallback this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVClassName -> com.avos.avoscloud.AVClassName:
    java.lang.String value() -> value
com.avos.avoscloud.AVCloud -> com.avos.avoscloud.AVCloud:
    void setProductionMode(boolean) -> setProductionMode
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.avos.avoscloud.FunctionCallback) -> callFunctionInBackground
    java.lang.Object convertCloudResponse(java.lang.String) -> convertCloudResponse
com.avos.avoscloud.AVCloud$1 -> com.avos.avoscloud.AVCloud$1:
    java.util.concurrent.atomic.AtomicReference val$reference -> val$reference
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCloud$2 -> com.avos.avoscloud.AVCloud$2:
    com.avos.avoscloud.FunctionCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVConstants -> com.avos.avoscloud.AVConstants:
    java.lang.String AV_PUSH_SERVICE_NOTIFICATION_MSG -> AV_PUSH_SERVICE_NOTIFICATION_MSG
    java.lang.String AV_PUSH_SERVICE_APPLICATION_ID -> AV_PUSH_SERVICE_APPLICATION_ID
    java.lang.String AV_PUSH_SERVICE_DEFAULT_CALLBACK -> AV_PUSH_SERVICE_DEFAULT_CALLBACK
    java.lang.String AV_PUSH_SERVICE_ACTION_MESSAGE -> AV_PUSH_SERVICE_ACTION_MESSAGE
    java.lang.String AV_PUSH_SERVICE_SETTINGS_KEY -> AV_PUSH_SERVICE_SETTINGS_KEY
com.avos.avoscloud.AVDefaultNotificationReceiver -> com.avos.avoscloud.AVDefaultNotificationReceiver:
    java.lang.String LOGTAG -> LOGTAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avoscloud.AVDuration -> com.avos.avoscloud.AVDuration:
    long createTimeStamp -> createTimeStamp
    long resumeTimeStamp -> resumeTimeStamp
    long duration -> duration
    boolean stopped -> stopped
    boolean internalDebug -> internalDebug
    long getCreateTimeStamp() -> getCreateTimeStamp
    long getDuration() -> getDuration
    void start() -> start
    void stop() -> stop
    boolean isStopped() -> isStopped
    void resume() -> resume
    void pause() -> pause
    void setDuration(long) -> setDuration
    void addDuration(long) -> addDuration
    void sync() -> sync
    long currentTS() -> currentTS
com.avos.avoscloud.AVErrorUtils -> com.avos.avoscloud.AVErrorUtils:
    int CIRCLE_REFERENCE -> CIRCLE_REFERENCE
    int MISSING_OBJECTID -> MISSING_OBJECTID
    com.avos.avoscloud.AVException createException(java.lang.String) -> createException
    com.avos.avoscloud.AVException createException(java.lang.Throwable,java.lang.String) -> createException
    int errorCode(java.lang.String) -> errorCode
    com.avos.avoscloud.AVException createException(int,java.lang.String) -> createException
    com.avos.avoscloud.AVException circleException() -> circleException
com.avos.avoscloud.AVException -> com.avos.avoscloud.AVException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int USER_ID_MISMATCH -> USER_ID_MISMATCH
    int USERNAME_PASSWORD_MISMATCH -> USERNAME_PASSWORD_MISMATCH
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int RATE_LIMITED -> RATE_LIMITED
    int UNKNOWN -> UNKNOWN
    int getCode() -> getCode
com.avos.avoscloud.AVExceptionHolder -> com.avos.avoscloud.AVExceptionHolder:
    java.lang.ThreadLocal local -> local
    void add(com.avos.avoscloud.AVException) -> add
    boolean exists() -> exists
    com.avos.avoscloud.AVException remove() -> remove
com.avos.avoscloud.AVExceptionHolder$1 -> com.avos.avoscloud.AVExceptionHolder$1:
    com.avos.avoscloud.AVException initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVFile -> com.avos.avoscloud.AVFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    byte[] data -> data
    com.avos.avoscloud.AVUploader uploader -> uploader
    com.avos.avoscloud.AVFile$AVDownloader downloader -> downloader
    java.util.HashMap metaData -> metaData
    java.lang.String defaultMimeType -> defaultMimeType
    java.lang.String objectId -> objectId
    com.avos.avoscloud.AVObject fileObject -> fileObject
    java.lang.String THUMBNAIL_FMT -> THUMBNAIL_FMT
    com.avos.avoscloud.AVObject getFileObject() -> getFileObject
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    void parseFileWithObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> parseFileWithObjectIdInBackground
    void withObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> withObjectIdInBackground
    com.avos.avoscloud.AVFile parseFileWithObjectId(java.lang.String) -> parseFileWithObjectId
    com.avos.avoscloud.AVFile withObjectId(java.lang.String) -> withObjectId
    com.avos.avoscloud.AVFile parseFileWithAVObject(com.avos.avoscloud.AVObject) -> parseFileWithAVObject
    com.avos.avoscloud.AVFile withAVObject(com.avos.avoscloud.AVObject) -> withAVObject
    com.avos.avoscloud.AVFile createFileFromAVObject(com.avos.avoscloud.AVObject) -> createFileFromAVObject
    com.avos.avoscloud.AVFile parseFileWithAbsoluteLocalPath(java.lang.String,java.lang.String) -> parseFileWithAbsoluteLocalPath
    com.avos.avoscloud.AVFile withAbsoluteLocalPath(java.lang.String,java.lang.String) -> withAbsoluteLocalPath
    com.avos.avoscloud.AVFile parseFileWithFile(java.lang.String,java.io.File) -> parseFileWithFile
    com.avos.avoscloud.AVFile withFile(java.lang.String,java.io.File) -> withFile
    java.util.HashMap getMetaData() -> getMetaData
    java.lang.Object addMetaData(java.lang.String,java.lang.Object) -> addMetaData
    java.lang.Object getMetaData(java.lang.String) -> getMetaData
    int getSize() -> getSize
    java.lang.String getOwnerObjectId() -> getOwnerObjectId
    java.lang.Object removeMetaData(java.lang.String) -> removeMetaData
    void clearMetaData() -> clearMetaData
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getMimeType(java.lang.String) -> getMimeType
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    java.lang.String getThumbnailUrl(boolean,int,int) -> getThumbnailUrl
    java.lang.String getThumbnailUrl(boolean,int,int,int,java.lang.String) -> getThumbnailUrl
    void setUrl(java.lang.String) -> setUrl
    void save() -> save
    void saveInBackground(com.avos.avoscloud.SaveCallback,com.avos.avoscloud.ProgressCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    byte[] getData() -> getData
    void getDataInBackground(com.avos.avoscloud.GetDataCallback,com.avos.avoscloud.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.avos.avoscloud.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    void cancelDownloadIfNeed() -> cancelDownloadIfNeed
    void cancelUploadIfNeed() -> cancelUploadIfNeed
    void handleUploadedResponse(java.lang.String,java.lang.String,java.lang.String) -> handleUploadedResponse
    void delete() -> delete
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    java.lang.String mimeType() -> mimeType
    java.lang.String className() -> className
    java.io.File localPath() -> localPath
    com.avos.avoscloud.AVFile access$000(com.avos.avoscloud.AVObject) -> access$000
    java.io.File access$100(com.avos.avoscloud.AVFile) -> access$100
    byte[] access$202(com.avos.avoscloud.AVFile,byte[]) -> access$202
    byte[] access$200(com.avos.avoscloud.AVFile) -> access$200
com.avos.avoscloud.AVFile$1 -> com.avos.avoscloud.AVFile$1:
    com.avos.avoscloud.GetFileCallback val$cb -> val$cb
    java.lang.String val$objectId -> val$objectId
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVFile$2 -> com.avos.avoscloud.AVFile$2:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AVFile$AVDownloader -> com.avos.avoscloud.AVFile$AVDownloader:
    com.avos.avoscloud.GetDataCallback dataCallback -> dataCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    com.avos.avoscloud.AVFile parseFile -> parseFile
    com.avos.avoscloud.AVFile this$0 -> this$0
    com.avos.avoscloud.AVException doWork(java.lang.String) -> doWork
    com.avos.avoscloud.AVException doInBackground(java.lang.String[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.avos.avoscloud.AVGeoPoint -> com.avos.avoscloud.AVGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double ONE_KM_TO_MILES -> ONE_KM_TO_MILES
    double latitude -> latitude
    double longitude -> longitude
    double distanceInKilometersTo(com.avos.avoscloud.AVGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.avos.avoscloud.AVGeoPoint) -> distanceInMilesTo
    double distanceInRadiansTo(com.avos.avoscloud.AVGeoPoint) -> distanceInRadiansTo
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
com.avos.avoscloud.AVInstallation -> com.avos.avoscloud.AVInstallation:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String DEVICETYPETAG -> DEVICETYPETAG
    java.lang.String CHANNELSTAG -> CHANNELSTAG
    java.lang.String INSTALLATIONIDTAG -> INSTALLATIONIDTAG
    com.avos.avoscloud.AVInstallation currentInstallation -> currentInstallation
    java.lang.String installationId -> installationId
    void setInstallationId(java.lang.String) -> setInstallationId
    com.avos.avoscloud.AVInstallation getCurrentInstallation() -> getCurrentInstallation
    void createNewInstallation(java.io.File) -> createNewInstallation
    void saveCurrentInstalationToLocal(java.io.File) -> saveCurrentInstalationToLocal
    java.lang.String timezone() -> timezone
    java.lang.String getInstallationId() -> getInstallationId
    void onSaveSuccess() -> onSaveSuccess
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File,com.avos.avoscloud.AVInstallation) -> writeInstallationFile
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    java.lang.String deviceType() -> deviceType
    boolean alwaysUsePost() -> alwaysUsePost
    boolean alwaysSaveAllKeyValues() -> alwaysSaveAllKeyValues
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
com.avos.avoscloud.AVKeyValues -> com.avos.avoscloud.AVKeyValues:
    java.lang.Object value -> value
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp op -> op
    boolean relationKey -> relationKey
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp getOp() -> getOp
    void setOp(com.avos.avoscloud.ops.AVOp) -> setOp
    boolean isRelationKey() -> isRelationKey
    void setRelationKey(boolean) -> setRelationKey
    void resetOp() -> resetOp
    void setRelationKey(com.avos.avoscloud.ops.AVOp) -> setRelationKey
    void addOp(com.avos.avoscloud.ops.AVOp) -> addOp
    int opSize() -> opSize
    com.avos.avoscloud.ops.AVOp getOp(int) -> getOp
com.avos.avoscloud.AVMultiPartEntity -> com.avos.avoscloud.AVMultiPartEntity:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    void writeTo(java.io.OutputStream) -> writeTo
com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream -> com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    long transferred -> transferred
    void write(byte[],int,int) -> write
    void write(int) -> write
com.avos.avoscloud.AVMultiPartEntity$ProgressListener -> com.avos.avoscloud.AVMultiPartEntity$ProgressListener:
    void transferred(long) -> transferred
com.avos.avoscloud.AVOSCloud -> com.avos.avoscloud.AVOSCloud:
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    android.os.Handler handler -> handler
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int logLevel -> logLevel
    boolean internalDebugLog -> internalDebugLog
    int DEFAULT_NETWORK_TIMEOUT -> DEFAULT_NETWORK_TIMEOUT
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int networkTimeoutInMills -> networkTimeoutInMills
    int threadPoolSize -> threadPoolSize
    com.avos.avoscloud.AVOSCloud$StorageType storageType -> storageType
    void setNetworkTimeout(int) -> setNetworkTimeout
    int getNetworkTimeout() -> getNetworkTimeout
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    void useAVCloudUS() -> useAVCloudUS
    void useAVCloudCN() -> useAVCloudCN
    int getLogLevel() -> getLogLevel
    void setLogLevel(int) -> setLogLevel
    void showInternalDebugLog(boolean) -> showInternalDebugLog
    boolean showInternalDebugLog() -> showInternalDebugLog
    com.avos.avoscloud.AVOSCloud$StorageType getStorageType() -> getStorageType
    void setStorageType(com.avos.avoscloud.AVOSCloud$StorageType) -> setStorageType
com.avos.avoscloud.AVOSCloud$StorageType -> com.avos.avoscloud.AVOSCloud$StorageType:
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeQiniu -> StorageTypeQiniu
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeAV -> StorageTypeAV
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeS3 -> StorageTypeS3
    com.avos.avoscloud.AVOSCloud$StorageType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOSCloud$StorageType[] values() -> values
    com.avos.avoscloud.AVOSCloud$StorageType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVOSSSLSocketFactory -> com.avos.avoscloud.AVOSSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.avos.avoscloud.AVOSSSLSocketFactory$1 -> com.avos.avoscloud.AVOSSSLSocketFactory$1:
    com.avos.avoscloud.AVOSSSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.avos.avoscloud.AVObject -> com.avos.avoscloud.AVObject:
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.lang.String uuid -> uuid
    boolean fetchWhenSave -> fetchWhenSave
    java.util.Map keyValues -> keyValues
    java.util.Set pendingKeys -> pendingKeys
    boolean isDataReady -> isDataReady
    com.avos.avoscloud.AVACL acl -> acl
    boolean running -> running
    com.avos.avoscloud.AVOperationQueue queue -> queue
    java.util.Map SUB_CLASSES_MAP -> SUB_CLASSES_MAP
    java.util.Map SUB_CLASSES_REVERSE_MAP -> SUB_CLASSES_REVERSE_MAP
    java.util.Set INVALID_KEYS -> INVALID_KEYS
    java.lang.ThreadLocal deserializing -> deserializing
    java.lang.String toString() -> toString
    java.util.Map getKeyValues() -> getKeyValues
    void setKeyValues(java.util.Map) -> setKeyValues
    java.util.Set getPendingKeys() -> getPendingKeys
    void setPendingKeys(java.util.Set) -> setPendingKeys
    boolean isDataReady() -> isDataReady
    void setDataReady(boolean) -> setDataReady
    void setUpdatedAt(java.lang.String) -> setUpdatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    void setUuid(java.lang.String) -> setUuid
    boolean isFetchWhenSave() -> isFetchWhenSave
    void setFetchWhenSave(boolean) -> setFetchWhenSave
    java.lang.String getUuid() -> getUuid
    java.lang.Class getSubClass(java.lang.String) -> getSubClass
    java.lang.String getSubClassName(java.lang.Class) -> getSubClassName
    void registerSubclass(java.lang.Class) -> registerSubclass
    void init() -> init
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    boolean containsKey(java.lang.String) -> containsKey
    com.avos.avoscloud.AVObject create(java.lang.String) -> create
    com.avos.avoscloud.AVObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    void setClassName(java.lang.String) -> setClassName
    com.avos.avoscloud.AVObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    void delete() -> delete
    void deleteAll(java.util.Collection) -> deleteAll
    void deleteAllInBackground(java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    void deleteAll(boolean,boolean,java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAll
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    void delete(boolean,boolean,com.avos.avoscloud.DeleteCallback) -> delete
    com.avos.avoscloud.AVObject fetch() -> fetch
    com.avos.avoscloud.AVObject fetch(java.lang.String) -> fetch
    java.util.List fetchAll(java.util.List) -> fetchAll
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllIfNeededInBackground
    void fetchAllInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllInBackground
    void fetchAllInBackground(boolean,java.util.List,com.avos.avoscloud.GenericObjectCallback) -> fetchAllInBackground
    com.avos.avoscloud.AVObject fetchIfNeeded() -> fetchIfNeeded
    com.avos.avoscloud.AVObject fetchIfNeeded(java.lang.String) -> fetchIfNeeded
    void fetchIfNeededInBackground(com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchIfNeededInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchInBackground(com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(boolean,java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    java.lang.Object get(java.lang.String) -> get
    com.avos.avoscloud.AVACL getACL() -> getACL
    boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getClassName() -> getClassName
    java.util.Date getCreatedAt() -> getCreatedAt
    java.util.Date getDate(java.lang.String) -> getDate
    double getDouble(java.lang.String) -> getDouble
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    long getLong(java.lang.String) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    java.lang.String getObjectId() -> getObjectId
    com.avos.avoscloud.AVFile getAVFile(java.lang.String) -> getAVFile
    com.avos.avoscloud.AVGeoPoint getAVGeoPoint(java.lang.String) -> getAVGeoPoint
    com.avos.avoscloud.AVObject getAVObject(java.lang.String) -> getAVObject
    com.avos.avoscloud.AVUser getAVUser(java.lang.String) -> getAVUser
    com.avos.avoscloud.AVRelation getRelation(java.lang.String) -> getRelation
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getUpdatedAt() -> getUpdatedAt
    boolean has(java.lang.String) -> has
    boolean hasSameId(com.avos.avoscloud.AVObject) -> hasSameId
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    boolean isDataAvailable() -> isDataAvailable
    java.util.Set keySet() -> keySet
    void checkKey(java.lang.String) -> checkKey
    void beginDeserialize() -> beginDeserialize
    void endDeserialize() -> endDeserialize
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Object,boolean) -> put
    void refresh() -> refresh
    void refresh(java.lang.String) -> refresh
    void refreshInBackground(com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(boolean,java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void remove(java.lang.String) -> remove
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void save() -> save
    void saveAll(java.util.List) -> saveAll
    void saveAllInBackground(java.util.List) -> saveAllInBackground
    void saveAllInBackground(java.util.List,com.avos.avoscloud.SaveCallback) -> saveAllInBackground
    void _saveAll(boolean,java.util.List,com.avos.avoscloud.SaveCallback) -> _saveAll
    void saveEventually() -> saveEventually
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void onSaveSuccess() -> onSaveSuccess
    void onSaveFailure() -> onSaveFailure
    java.util.Map headerMap() -> headerMap
    void saveObject(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObject
    void saveObjectToAVOSCloud(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObjectToAVOSCloud
    com.avos.avoscloud.AVException copyFromJsonArray(java.lang.String) -> copyFromJsonArray
    void copyFromJson(java.lang.String) -> copyFromJson
    void copyFromMap(java.util.Map) -> copyFromMap
    boolean alwaysUsePost() -> alwaysUsePost
    java.util.List batchRequestFromPendingKeys() -> batchRequestFromPendingKeys
    java.lang.String internalId() -> internalId
    boolean alwaysSaveAllKeyValues() -> alwaysSaveAllKeyValues
    java.util.Map batchRequestFromKeyValues() -> batchRequestFromKeyValues
    java.util.Map getBatchParams() -> getBatchParams
    void addBatchSaveRequest(java.util.LinkedList) -> addBatchSaveRequest
    void addPendingBatchRequest(java.util.LinkedList) -> addPendingBatchRequest
    boolean checkCircleReference() -> checkCircleReference
    boolean checkCircleReference(java.util.Map) -> checkCircleReference
    void saveInBackground() -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback,boolean) -> saveInBackground
    void setACL(com.avos.avoscloud.AVACL) -> setACL
    void setObjectId(java.lang.String) -> setObjectId
    java.util.List findArray(java.util.Map,java.lang.String,boolean) -> findArray
    java.lang.String internalClassName() -> internalClassName
    boolean shouldThrowException(java.lang.Throwable,java.lang.String) -> shouldThrowException
    void addRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> addRelation
    void removeRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> removeRelation
    void addObjectToArray(java.lang.String,java.lang.Object,boolean) -> addObjectToArray
    void removeObjectForKey(java.lang.String) -> removeObjectForKey
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean access$002(com.avos.avoscloud.AVObject,boolean) -> access$002
    java.util.Set access$200(com.avos.avoscloud.AVObject) -> access$200
    void access$400(com.avos.avoscloud.AVObject,java.lang.String) -> access$400
    void access$500(com.avos.avoscloud.AVObject,java.util.LinkedList) -> access$500
    void access$600(com.avos.avoscloud.AVObject,boolean,boolean,com.avos.avoscloud.SaveCallback) -> access$600
    com.avos.avoscloud.AVOperationQueue access$700(com.avos.avoscloud.AVObject) -> access$700
com.avos.avoscloud.AVObject$1 -> com.avos.avoscloud.AVObject$1:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$10 -> com.avos.avoscloud.AVObject$10:
    java.lang.String val$key -> val$key
    java.lang.Number val$amount -> val$amount
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Number initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$11 -> com.avos.avoscloud.AVObject$11:
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVObject$12 -> com.avos.avoscloud.AVObject$12:
    java.lang.String val$key -> val$key
    java.lang.Object val$value -> val$value
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$13 -> com.avos.avoscloud.AVObject$13:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$14 -> com.avos.avoscloud.AVObject$14:
    java.lang.String val$key -> val$key
    java.util.Collection val$values -> val$values
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.List initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$15 -> com.avos.avoscloud.AVObject$15:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$16 -> com.avos.avoscloud.AVObject$16:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$17 -> com.avos.avoscloud.AVObject$17:
    java.util.List val$objects -> val$objects
    boolean val$sync -> val$sync
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$17$1 -> com.avos.avoscloud.AVObject$17$1:
    com.avos.avoscloud.AVObject$17 this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$18 -> com.avos.avoscloud.AVObject$18:
    com.avos.avoscloud.AVOperation val$operation -> val$operation
    boolean val$sync -> val$sync
    boolean val$isEventually -> val$isEventually
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$19 -> com.avos.avoscloud.AVObject$19:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$2 -> com.avos.avoscloud.AVObject$2:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$20 -> com.avos.avoscloud.AVObject$20:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$21 -> com.avos.avoscloud.AVObject$21:
    java.lang.Object val$value -> val$value
    boolean val$unique -> val$unique
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Collection initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$22 -> com.avos.avoscloud.AVObject$22:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Void initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$3 -> com.avos.avoscloud.AVObject$3:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$4 -> com.avos.avoscloud.AVObject$4:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$5 -> com.avos.avoscloud.AVObject$5:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$6 -> com.avos.avoscloud.AVObject$6:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$7 -> com.avos.avoscloud.AVObject$7:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$8 -> com.avos.avoscloud.AVObject$8:
    com.avos.avoscloud.GenericObjectCallback val$internalCallback -> val$internalCallback
    java.util.concurrent.atomic.AtomicInteger val$counter -> val$counter
    int val$total -> val$total
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$9 -> com.avos.avoscloud.AVObject$9:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$FetchObjectCallback -> com.avos.avoscloud.AVObject$FetchObjectCallback:
    com.avos.avoscloud.AVCallback internalCallback -> internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$KeyValueCallback -> com.avos.avoscloud.AVObject$KeyValueCallback:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,boolean) -> execute
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVOnlineConfigureListener -> com.avos.avoscloud.AVOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.avos.avoscloud.AVOperation -> com.avos.avoscloud.AVOperation:
    com.avos.avoscloud.AVOperationType type -> type
    java.util.List batchRequest -> batchRequest
    com.avos.avoscloud.SaveCallback callback -> callback
    int sequence -> sequence
    boolean last -> last
    void setLast(boolean) -> setLast
    boolean getLast() -> getLast
    java.util.List getBatchRequest() -> getBatchRequest
    boolean isSnapshotRequest() -> isSnapshotRequest
    boolean isPendingRequest() -> isPendingRequest
    void setCallback(com.avos.avoscloud.SaveCallback) -> setCallback
    com.avos.avoscloud.SaveCallback getCallback() -> getCallback
    void setSequence(int) -> setSequence
    int getSequence() -> getSequence
    void invokeCallback(com.avos.avoscloud.AVException) -> invokeCallback
    com.avos.avoscloud.AVOperation snapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> snapshotOperation
    com.avos.avoscloud.AVOperation cloneOperation(java.util.List,com.avos.avoscloud.SaveCallback,com.avos.avoscloud.AVOperationType) -> cloneOperation
    com.avos.avoscloud.AVOperation pendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> pendingOperation
com.avos.avoscloud.AVOperationQueue -> com.avos.avoscloud.AVOperationQueue:
    java.util.LinkedList queue -> queue
    int currentSequence -> currentSequence
    void increaseSequence() -> increaseSequence
    com.avos.avoscloud.AVOperation addSnapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addSnapshotOperation
    com.avos.avoscloud.AVOperation addPendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addPendingOperation
    com.avos.avoscloud.AVOperation popHead() -> popHead
    boolean noPendingRequest() -> noPendingRequest
    void clearOperationWithSequence(int) -> clearOperationWithSequence
com.avos.avoscloud.AVOperationType -> com.avos.avoscloud.AVOperationType:
    com.avos.avoscloud.AVOperationType kAVOperationSnapshot -> kAVOperationSnapshot
    com.avos.avoscloud.AVOperationType kAVOperationPendingOperation -> kAVOperationPendingOperation
    com.avos.avoscloud.AVOperationType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOperationType[] values() -> values
    com.avos.avoscloud.AVOperationType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVPersistenceUtils -> com.avos.avoscloud.AVPersistenceUtils:
    com.avos.avoscloud.AVPersistenceUtils instance -> instance
    java.util.concurrent.ConcurrentHashMap fileLocks -> fileLocks
    java.lang.Object getLock(java.lang.String) -> getLock
    void removeLock(java.lang.String) -> removeLock
    com.avos.avoscloud.AVPersistenceUtils sharedInstance() -> sharedInstance
    java.io.File getPaasDocumentDir() -> getPaasDocumentDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getCommandCacheDir() -> getCommandCacheDir
    void closeQuietly(java.io.Closeable) -> closeQuietly
    java.io.File getFile(java.lang.String,java.lang.String) -> getFile
    void saveToDocumentDir(java.lang.String,java.lang.String) -> saveToDocumentDir
    void saveToDocumentDir(java.lang.String,java.lang.String,java.lang.String) -> saveToDocumentDir
    void saveContentToFile(java.lang.String,java.io.File) -> saveContentToFile
    java.lang.String getFromDocumentDir(java.lang.String,java.lang.String) -> getFromDocumentDir
    java.lang.String getFromDocumentDir(java.lang.String) -> getFromDocumentDir
    java.lang.String readContentFromFile(java.io.File) -> readContentFromFile
    void savePersistentSettingBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> savePersistentSettingBoolean
    boolean getPersistentSettingBoolean(java.lang.String,java.lang.String) -> getPersistentSettingBoolean
com.avos.avoscloud.AVPowerfulUtils -> com.avos.avoscloud.AVPowerfulUtils:
    java.util.Map powerfulTable -> powerfulTable
    java.lang.String ENDPOINT -> ENDPOINT
    java.lang.String INTERNAL_CLASSNAME -> INTERNAL_CLASSNAME
    java.lang.String PARSE_CLASSNAME -> PARSE_CLASSNAME
    void createSettings(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> createSettings
    java.util.Map createTable() -> createTable
    java.lang.String get(java.lang.String,java.lang.String) -> get
    java.lang.String getAVClassEndpoint(java.lang.String,java.lang.String,java.lang.String) -> getAVClassEndpoint
    java.lang.String getAVUserEndpoint(com.avos.avoscloud.AVUser) -> getAVUserEndpoint
    java.lang.String getAVRoleEndpoint(com.avos.avoscloud.AVRole) -> getAVRoleEndpoint
    java.lang.String getAVInstallationEndpoint(com.avos.avoscloud.AVInstallation,boolean) -> getAVInstallationEndpoint
    java.lang.String getEndpoint(java.lang.String) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object,boolean) -> getEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject) -> getBatchEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject,boolean) -> getBatchEndpoint
    java.lang.String getEndpointByAVClassName(java.lang.String,java.lang.String) -> getEndpointByAVClassName
    java.lang.String getInternalClassName(java.lang.String) -> getInternalClassName
    java.lang.String getAVClassName(java.lang.String) -> getAVClassName
com.avos.avoscloud.AVPush -> com.avos.avoscloud.AVPush:
    java.lang.String TAG -> TAG
    java.lang.String deviceTypeTag -> deviceTypeTag
    java.util.Set channelSet -> channelSet
    com.avos.avoscloud.AVQuery pushQuery -> pushQuery
    long expirationTime -> expirationTime
    long expirationTimeInterval -> expirationTimeInterval
    java.util.Map pushTarget -> pushTarget
    java.util.Map pushData -> pushData
    java.util.Set getChannelSet() -> getChannelSet
    com.avos.avoscloud.AVQuery getPushQuery() -> getPushQuery
    long getExpirationTime() -> getExpirationTime
    long getExpirationTimeInterval() -> getExpirationTimeInterval
    java.util.Map getPushTarget() -> getPushTarget
    java.util.Map getPushData() -> getPushData
    void clearExpiration() -> clearExpiration
    void send() -> send
    void sendDataInBackground(org.json.JSONObject,com.avos.avoscloud.AVQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.avos.avoscloud.AVQuery,com.avos.avoscloud.SendCallback) -> sendDataInBackground
    void sendInBackground() -> sendInBackground
    void sendInBackground(com.avos.avoscloud.SendCallback) -> sendInBackground
    java.util.Map pushChannelsData() -> pushChannelsData
    java.util.Map postDataMap() -> postDataMap
    void sendInBackground(boolean,com.avos.avoscloud.SendCallback) -> sendInBackground
    void sendMessageInBackground(java.lang.String,com.avos.avoscloud.AVQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.avos.avoscloud.AVQuery,com.avos.avoscloud.SendCallback) -> sendMessageInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setData(java.util.Map) -> setData
    void setData(org.json.JSONObject) -> setData
    java.util.Date expirationDateTime() -> expirationDateTime
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void setMessage(java.lang.String) -> setMessage
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setPushToIOS(boolean) -> setPushToIOS
    void setQuery(com.avos.avoscloud.AVQuery) -> setQuery
com.avos.avoscloud.AVPush$1 -> com.avos.avoscloud.AVPush$1:
    com.avos.avoscloud.SendCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVPush this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery -> com.avos.avoscloud.AVQuery:
    java.lang.String TAG -> TAG
    java.lang.Class clazz -> clazz
    java.lang.String className -> className
    java.util.Map where -> where
    java.util.List include -> include
    java.util.Set selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    java.lang.Boolean isRunning -> isRunning
    com.avos.avoscloud.AVQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    java.util.Map parameters -> parameters
    java.lang.String queryPath -> queryPath
    java.lang.Class getClazz() -> getClazz
    void setClazz(java.lang.Class) -> setClazz
    java.util.List getInclude() -> getInclude
    void setInclude(java.util.List) -> setInclude
    java.util.Set getSelectedKeys() -> getSelectedKeys
    void setSelectedKeys(java.util.Set) -> setSelectedKeys
    java.lang.Boolean getIsRunning() -> getIsRunning
    void setIsRunning(java.lang.Boolean) -> setIsRunning
    java.util.Map getParameters() -> getParameters
    void setParameters(java.util.Map) -> setParameters
    java.lang.String getQueryPath() -> getQueryPath
    void setQueryPath(java.lang.String) -> setQueryPath
    java.lang.String getTag() -> getTag
    java.util.Map getWhere() -> getWhere
    java.lang.String getClassName() -> getClassName
    com.avos.avoscloud.AVQuery setClassName(java.lang.String) -> setClassName
    int getLimit() -> getLimit
    com.avos.avoscloud.AVQuery setLimit(int) -> setLimit
    com.avos.avoscloud.AVQuery limit(int) -> limit
    com.avos.avoscloud.AVQuery skip(int) -> skip
    void generateQueryPath() -> generateQueryPath
    int getSkip() -> getSkip
    com.avos.avoscloud.AVQuery setSkip(int) -> setSkip
    java.lang.String getOrder() -> getOrder
    com.avos.avoscloud.AVQuery setOrder(java.lang.String) -> setOrder
    com.avos.avoscloud.AVQuery order(java.lang.String) -> order
    com.avos.avoscloud.AVQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.avos.avoscloud.AVQuery setCachePolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setCachePolicy
    com.avos.avoscloud.AVQuery$CachePolicy getPolicy() -> getPolicy
    com.avos.avoscloud.AVQuery setPolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setPolicy
    long getMaxCacheAge() -> getMaxCacheAge
    com.avos.avoscloud.AVQuery setMaxCacheAge(long) -> setMaxCacheAge
    boolean isTrace() -> isTrace
    com.avos.avoscloud.AVQuery setTrace(boolean) -> setTrace
    com.avos.avoscloud.AVQuery getQuery(java.lang.String) -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.avos.avoscloud.AVQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    void cancel() -> cancel
    void clearAllCachedResults() -> clearAllCachedResults
    void clearCachedResult() -> clearCachedResult
    int count() -> count
    int count(boolean) -> count
    void countInBackground(com.avos.avoscloud.CountCallback) -> countInBackground
    void countInBackground(boolean,com.avos.avoscloud.CountCallback) -> countInBackground
    java.util.List find() -> find
    java.lang.String queryPath() -> queryPath
    java.lang.String whereString() -> whereString
    java.util.Map assembleParameters() -> assembleParameters
    java.util.List processResults(java.lang.String) -> processResults
    void findInBackground(com.avos.avoscloud.FindCallback) -> findInBackground
    com.avos.avoscloud.AVObject get(java.lang.String) -> get
    com.avos.avoscloud.AVObject getFirst() -> getFirst
    void getFirstInBackground(com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getFirstInBackground(boolean,com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> getInBackground
    void getInBackground(java.lang.String,boolean,com.avos.avoscloud.GetCallback) -> getInBackground
    com.avos.avoscloud.AVQuery getUserQuery() -> getUserQuery
    boolean hasCachedResult() -> hasCachedResult
    com.avos.avoscloud.AVQuery include(java.lang.String) -> include
    com.avos.avoscloud.AVQuery selectKeys(java.util.Collection) -> selectKeys
    void deleteAll() -> deleteAll
    void deleteAllInBackground(com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    com.avos.avoscloud.AVQuery or(java.util.List) -> or
    com.avos.avoscloud.AVQuery orderByAscending(java.lang.String) -> orderByAscending
    com.avos.avoscloud.AVQuery orderByDescending(java.lang.String) -> orderByDescending
    com.avos.avoscloud.AVQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.avos.avoscloud.AVQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.avos.avoscloud.AVQuery whereSizeEqual(java.lang.String,int) -> whereSizeEqual
    com.avos.avoscloud.AVQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.avos.avoscloud.AVQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.avos.avoscloud.AVQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchKeyInQuery
    com.avos.avoscloud.AVQuery whereDoesNotMatchQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchQuery
    com.avos.avoscloud.AVQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    com.avos.avoscloud.AVQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    java.util.Map createMap(java.lang.String,java.lang.Object) -> createMap
    com.avos.avoscloud.AVQuery addWhereItem(java.lang.String,java.lang.String,java.lang.Object) -> addWhereItem
    com.avos.avoscloud.AVQuery whereExists(java.lang.String) -> whereExists
    com.avos.avoscloud.AVQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.avos.avoscloud.AVQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.avos.avoscloud.AVQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.avos.avoscloud.AVQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesKeyInQuery
    com.avos.avoscloud.AVQuery whereMatchesQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesQuery
    com.avos.avoscloud.AVQuery whereNear(java.lang.String,com.avos.avoscloud.AVGeoPoint) -> whereNear
    com.avos.avoscloud.AVQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.avos.avoscloud.AVQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.avos.avoscloud.AVQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.avos.avoscloud.AVQuery whereWithinGeoBox(java.lang.String,com.avos.avoscloud.AVGeoPoint,com.avos.avoscloud.AVGeoPoint) -> whereWithinGeoBox
    com.avos.avoscloud.AVQuery whereWithinKilometers(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinKilometers
    com.avos.avoscloud.AVQuery whereWithinMiles(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinMiles
    com.avos.avoscloud.AVQuery whereWithinRadians(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinRadians
    com.avos.avoscloud.AVQuery setWhere(java.util.Map) -> setWhere
    java.util.List access$000(com.avos.avoscloud.AVQuery,java.lang.String) -> access$000
com.avos.avoscloud.AVQuery$1 -> com.avos.avoscloud.AVQuery$1:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$10 -> com.avos.avoscloud.AVQuery$10:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$11 -> com.avos.avoscloud.AVQuery$11:
    com.avos.avoscloud.DeleteCallback val$cb -> val$cb
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$2 -> com.avos.avoscloud.AVQuery$2:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$3 -> com.avos.avoscloud.AVQuery$3:
    com.avos.avoscloud.CountCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$4 -> com.avos.avoscloud.AVQuery$4:
    java.util.List val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$5 -> com.avos.avoscloud.AVQuery$5:
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$6 -> com.avos.avoscloud.AVQuery$6:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$7 -> com.avos.avoscloud.AVQuery$7:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$8 -> com.avos.avoscloud.AVQuery$8:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$9 -> com.avos.avoscloud.AVQuery$9:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$CachePolicy -> com.avos.avoscloud.AVQuery$CachePolicy:
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.AVQuery$CachePolicy[] values() -> values
    com.avos.avoscloud.AVQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVRelation -> com.avos.avoscloud.AVRelation:
    java.lang.String key -> key
    com.avos.avoscloud.AVObject parent -> parent
    java.lang.String targetClass -> targetClass
    void add(com.avos.avoscloud.AVObject) -> add
    void addAll(java.util.Collection) -> addAll
    void remove(com.avos.avoscloud.AVObject) -> remove
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.Class,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    void setParent(com.avos.avoscloud.AVObject) -> setParent
    com.avos.avoscloud.AVObject getParent() -> getParent
    void setTargetClass(java.lang.String) -> setTargetClass
    java.lang.String getTargetClass() -> getTargetClass
com.avos.avoscloud.AVRelation$1 -> com.avos.avoscloud.AVRelation$1:
    com.avos.avoscloud.AVRelation this$0 -> this$0
com.avos.avoscloud.AVResponse -> com.avos.avoscloud.AVResponse:
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.util.Map[] results -> results
    int count -> count
com.avos.avoscloud.AVResponseArray -> com.avos.avoscloud.AVResponseArray:
    java.util.List results -> results
com.avos.avoscloud.AVRole -> com.avos.avoscloud.AVRole:
    java.lang.String name -> name
    java.lang.String className -> className
    java.lang.String getName() -> getName
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVRelation getRoles() -> getRoles
    com.avos.avoscloud.AVRelation getUsers() -> getUsers
    void put(java.lang.String,java.lang.Object) -> put
    void setName(java.lang.String) -> setName
com.avos.avoscloud.AVRuntimeException -> com.avos.avoscloud.AVRuntimeException:
    long serialVersionUID -> serialVersionUID
com.avos.avoscloud.AVUncaughtExceptionHandler -> com.avos.avoscloud.AVUncaughtExceptionHandler:
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> defaultExceptionHandler
    boolean enabled -> enabled
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.Context context -> context
    java.lang.Thread brokenThread -> brokenThread
    java.lang.Throwable unhandledThrowable -> unhandledThrowable
    void enableCrashHanlder(boolean) -> enableCrashHanlder
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    void handleException(java.lang.Throwable,boolean,boolean) -> handleException
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.util.Map crashData(android.content.Context,java.lang.Throwable) -> crashData
    void endApplication() -> endApplication
com.avos.avoscloud.AVUploader -> com.avos.avoscloud.AVUploader:
    com.avos.avoscloud.AVFile parseFile -> parseFile
    com.avos.avoscloud.SaveCallback saveCallback -> saveCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    long totalSize -> totalSize
    boolean cancelled -> cancelled
    boolean complete -> complete
    java.lang.Thread workerThread -> workerThread
    int defaultFileKeyLength -> defaultFileKeyLength
    com.avos.avoscloud.AVException doWork() -> doWork
    void execute() -> execute
    com.avos.avoscloud.AVException doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onCancelled() -> onCancelled
    boolean cancel(boolean) -> cancel
    void interruptImmediately() -> interruptImmediately
    boolean isCancelled() -> isCancelled
    void publishProgress(int) -> publishProgress
    boolean access$000(com.avos.avoscloud.AVUploader) -> access$000
    boolean access$102(com.avos.avoscloud.AVUploader,boolean) -> access$102
com.avos.avoscloud.AVUploader$1 -> com.avos.avoscloud.AVUploader$1:
    com.avos.avoscloud.AVUploader this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVUser -> com.avos.avoscloud.AVUser:
    boolean enableAutomatic -> enableAutomatic
    java.lang.String sessionToken -> sessionToken
    boolean isNew -> isNew
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String email -> email
    java.lang.String facebookToken -> facebookToken
    java.lang.String twitterToken -> twitterToken
    java.lang.String sinaWeiboToken -> sinaWeiboToken
    java.lang.String qqWeiboToken -> qqWeiboToken
    java.lang.String LOG_TAG -> LOG_TAG
    java.io.File currentUserArchivePath() -> currentUserArchivePath
    boolean userArchiveExist() -> userArchiveExist
    java.lang.String getFacebookToken() -> getFacebookToken
    void setFacebookToken(java.lang.String) -> setFacebookToken
    java.lang.String getTwitterToken() -> getTwitterToken
    void setTwitterToken(java.lang.String) -> setTwitterToken
    java.lang.String getQqWeiboToken() -> getQqWeiboToken
    void setQqWeiboToken(java.lang.String) -> setQqWeiboToken
    java.lang.String getPassword() -> getPassword
    void setEnableAutomatic(boolean) -> setEnableAutomatic
    void setNew(boolean) -> setNew
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isEnableAutomatic() -> isEnableAutomatic
    void disableAutomaticUser() -> disableAutomaticUser
    void changeCurrentUser(com.avos.avoscloud.AVUser,boolean) -> changeCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser(java.lang.Class) -> getCurrentUser
    java.lang.String userClassName() -> userClassName
    void setNewFlag(boolean) -> setNewFlag
    java.lang.String getEmail() -> getEmail
    com.avos.avoscloud.AVQuery getUserQuery(java.lang.Class) -> getUserQuery
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    java.lang.String getSessionToken() -> getSessionToken
    void setSessionToken(java.lang.String) -> setSessionToken
    java.lang.String getUsername() -> getUsername
    boolean isAuthenticated() -> isAuthenticated
    boolean isNew() -> isNew
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String) -> logIn
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String,java.lang.Class) -> logIn
    java.lang.String logInPath() -> logInPath
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> logInInBackground
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    java.util.Map createUserMap(java.lang.String,java.lang.String,java.lang.String) -> createUserMap
    void logInInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    com.avos.avoscloud.AVUser newAVUser(java.lang.Class,com.avos.avoscloud.LogInCallback) -> newAVUser
    void logOut() -> logOut
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void requestPasswordResetInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void setEmail(java.lang.String) -> setEmail
    void setPassword(java.lang.String) -> setPassword
    void setUsername(java.lang.String) -> setUsername
    java.lang.String signUpPath() -> signUpPath
    void signUp(boolean,com.avos.avoscloud.SignUpCallback) -> signUp
    void signUp() -> signUp
    void signUpInBackground(com.avos.avoscloud.SignUpCallback) -> signUpInBackground
    void setSinaWeiboToken(java.lang.String) -> setSinaWeiboToken
    java.lang.String getSinaWeiboToken() -> getSinaWeiboToken
    void setQQWeiboToken(java.lang.String) -> setQQWeiboToken
    java.lang.String getQQWeiboToken() -> getQQWeiboToken
    void onSaveSuccess() -> onSaveSuccess
    java.util.Map headerMap() -> headerMap
    com.avos.avoscloud.AVUser userFromSinaWeibo(java.lang.String,java.lang.String) -> userFromSinaWeibo
    com.avos.avoscloud.AVUser userFromQQWeibo(java.lang.String,java.lang.String) -> userFromQQWeibo
com.avos.avoscloud.AVUser$1 -> com.avos.avoscloud.AVUser$1:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$2 -> com.avos.avoscloud.AVUser$2:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$3 -> com.avos.avoscloud.AVUser$3:
    com.avos.avoscloud.RequestPasswordResetCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$4 -> com.avos.avoscloud.AVUser$4:
    com.avos.avoscloud.SignUpCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$5 -> com.avos.avoscloud.AVUser$5:
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUtils -> com.avos.avoscloud.AVUtils:
    java.lang.String dateFormat -> dateFormat
    java.lang.String classNameTag -> classNameTag
    java.lang.String typeTag -> typeTag
    java.lang.String objectIdTag -> objectIdTag
    java.util.Map fieldsMap -> fieldsMap
    java.util.regex.Pattern pattern -> pattern
    java.lang.ThreadLocal THREAD_LOCAL_DATE_FORMAT -> THREAD_LOCAL_DATE_FORMAT
    java.util.Map createArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createArrayOpMap
    java.lang.reflect.Field[] getAllFiels(java.lang.Class) -> getAllFiels
    void checkClassName(java.lang.String) -> checkClassName
    boolean isBlankString(java.lang.String) -> isBlankString
    boolean isBlankContent(java.lang.String) -> isBlankContent
    boolean contains(java.util.Map,java.lang.String) -> contains
    java.util.Map createDeleteOpMap(java.lang.String) -> createDeleteOpMap
    java.util.Map createPointerArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createPointerArrayOpMap
    java.util.Map createStringObjectMap(java.lang.String,java.lang.Object) -> createStringObjectMap
    java.util.Map mapFromPointerObject(com.avos.avoscloud.AVObject) -> mapFromPointerObject
    java.util.Map mapFromChildObject(com.avos.avoscloud.AVObject,java.lang.String) -> mapFromChildObject
    boolean isDigitString(java.lang.String) -> isDigitString
    java.util.Date dateFromString(java.lang.String) -> dateFromString
    java.lang.String stringFromDate(java.util.Date) -> stringFromDate
    java.util.Map mapFromDate(java.util.Date) -> mapFromDate
    java.util.Date dateFromMap(java.util.Map) -> dateFromMap
    java.util.Map mapFromGeoPoint(com.avos.avoscloud.AVGeoPoint) -> mapFromGeoPoint
    com.avos.avoscloud.AVGeoPoint geoPointFromMap(java.util.Map) -> geoPointFromMap
    com.avos.avoscloud.AVObject objectFromRelationMap(java.util.Map) -> objectFromRelationMap
    java.util.Map mapFromByteArray(byte[]) -> mapFromByteArray
    byte[] dataFromMap(java.util.Map) -> dataFromMap
    java.lang.String jsonStringFromMapWithNull(java.util.Map) -> jsonStringFromMapWithNull
    java.util.Map mapFromFile(com.avos.avoscloud.AVFile) -> mapFromFile
    com.avos.avoscloud.AVFile fileFromMap(java.util.Map) -> fileFromMap
    com.avos.avoscloud.AVObject parseObjectFromMap(java.util.Map) -> parseObjectFromMap
    boolean isStringNullOrEmpty(java.lang.String) -> isStringNullOrEmpty
    java.lang.String restfulServerData(java.util.Map) -> restfulServerData
    boolean hasProperty(java.lang.Class,java.lang.String) -> hasProperty
    boolean checkAndSetValue(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object) -> checkAndSetValue
    void updatePropertyFromMap(com.avos.avoscloud.AVObject,java.lang.String,java.util.Map) -> updatePropertyFromMap
    void updatePropertyFromList(com.avos.avoscloud.AVObject,java.lang.String,java.util.Collection) -> updatePropertyFromList
    void copyPropertiesFromJsonStringToAVObject(java.lang.String,com.avos.avoscloud.AVObject) -> copyPropertiesFromJsonStringToAVObject
    void copyPropertiesFromMapToAVObject(java.util.Map,com.avos.avoscloud.AVObject) -> copyPropertiesFromMapToAVObject
    void copyPropertiesFromMapToObject(java.util.Map,java.lang.Object) -> copyPropertiesFromMapToObject
    java.lang.Class getClass(java.util.Map) -> getClass
    boolean isRelation(java.lang.String) -> isRelation
    boolean isPointer(java.lang.String) -> isPointer
    boolean isGeoPoint(java.lang.String) -> isGeoPoint
    boolean isACL(java.lang.String) -> isACL
    boolean isDate(java.lang.String) -> isDate
    boolean isData(java.lang.String) -> isData
    boolean isFile(java.lang.String) -> isFile
    boolean isFileFromUrulu(java.util.Map) -> isFileFromUrulu
    com.avos.avoscloud.AVObject objectFromClassName(java.lang.String) -> objectFromClassName
    com.avos.avoscloud.AVObject newAVObjectByClassName(java.lang.String) -> newAVObjectByClassName
    java.lang.Object getFromJSON(java.lang.String,java.lang.Class) -> getFromJSON
    java.lang.String toJSON(java.lang.Object) -> toJSON
    java.util.Map getParsedMap(java.util.Map) -> getParsedMap
    java.util.List getParsedList(java.util.Collection) -> getParsedList
    java.lang.Object getParsedObject(java.lang.Object) -> getParsedObject
    java.util.List getObjectFrom(java.util.Collection) -> getObjectFrom
    java.lang.Object getObjectFrom(java.util.Map) -> getObjectFrom
    java.lang.Object getObjectFrom(java.lang.Object) -> getObjectFrom
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String getRandomString(int) -> getRandomString
    boolean isWifi(android.content.Context) -> isWifi
    boolean isConnected(android.content.Context) -> isConnected
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String joinCollection(java.util.Collection,java.lang.String) -> joinCollection
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean isPushServiceAvailable(android.content.Context,java.lang.Class) -> isPushServiceAvailable
    boolean isMainThread() -> isMainThread
com.avos.avoscloud.AVUtils$1 -> com.avos.avoscloud.AVUtils$1:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AnalyticsActivity -> com.avos.avoscloud.AnalyticsActivity:
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String activityName -> activityName
    void start() -> start
    void stop() -> stop
    void setDuration(long) -> setDuration
    double getStart() -> getStart
    java.lang.String getActivityName() -> getActivityName
    boolean isStopped() -> isStopped
    double myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
com.avos.avoscloud.AnalyticsEvent -> com.avos.avoscloud.AnalyticsEvent:
    com.avos.avoscloud.AVDuration duration -> duration
    java.util.Map attributes -> attributes
    java.lang.String eventName -> eventName
    java.lang.String labelName -> labelName
    java.lang.String primaryKey -> primaryKey
    int accumulation -> accumulation
    java.lang.String eventTag -> eventTag
    java.lang.String labelTag -> labelTag
    java.lang.String accTag -> accTag
    java.lang.String primaryKeyTag -> primaryKeyTag
    java.lang.String attributesTag -> attributesTag
    void start() -> start
    void stop() -> stop
    java.lang.String getEventName() -> getEventName
    void setDuration(long) -> setDuration
    void setAccumulation(int) -> setAccumulation
    void setLabel(java.lang.String) -> setLabel
    void setPrimaryKey(java.lang.String) -> setPrimaryKey
    void addAttributes(java.util.HashMap) -> addAttributes
    boolean isMatch(java.lang.String,java.lang.String,java.lang.String) -> isMatch
    double myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
com.avos.avoscloud.AnalyticsImpl -> com.avos.avoscloud.AnalyticsImpl:
    boolean enableDebugLog -> enableDebugLog
    java.lang.String appChannel -> appChannel
    long sendInterval -> sendInterval
    boolean autoLocation -> autoLocation
    android.os.Handler timerHandler -> timerHandler
    java.lang.Runnable timerRunnable -> timerRunnable
    java.util.concurrent.ConcurrentHashMap sessions -> sessions
    long pauseTimeStamp -> pauseTimeStamp
    java.lang.String currentSessionId -> currentSessionId
    long sessionThreshold -> sessionThreshold
    java.util.concurrent.atomic.AtomicInteger messageCount -> messageCount
    int messageCountThreshold -> messageCountThreshold
    java.lang.String TAG -> TAG
    com.avos.avoscloud.AVUncaughtExceptionHandler handler -> handler
    com.avos.avoscloud.AnalyticsOnlineConfig onlineConfig -> onlineConfig
    com.avos.avoscloud.AVOnlineConfigureListener listener -> listener
    java.util.Timer updateOnlineConfigTimer -> updateOnlineConfigTimer
    void setAutoLocation(boolean) -> setAutoLocation
    boolean isAutoLocation() -> isAutoLocation
    boolean isEnableStats() -> isEnableStats
    long getSendInterval() -> getSendInterval
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getAppChannel() -> getAppChannel
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    boolean isEnableDebugLog() -> isEnableDebugLog
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    com.avos.avoscloud.ReportPolicy getReportPolicy(android.content.Context) -> getReportPolicy
    void setReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void notifyOnlineConfigListener(org.json.JSONObject) -> notifyOnlineConfigListener
    void configChanged(android.content.Context) -> configChanged
    com.avos.avoscloud.AnalyticsSession currentSession(boolean) -> currentSession
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setSessionDuration(long) -> setSessionDuration
    int getMessageCount() -> getMessageCount
    int incMessageCount() -> incMessageCount
    boolean exceedAndResetMessageCount() -> exceedAndResetMessageCount
    void resetMessageCount() -> resetMessageCount
    com.avos.avoscloud.AnalyticsSession sessionByName(java.lang.String) -> sessionByName
    com.avos.avoscloud.AnalyticsSession createSession() -> createSession
    void beginSession() -> beginSession
    void endSession(android.content.Context) -> endSession
    void pauseSession() -> pauseSession
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    void beginEvent(android.content.Context,java.lang.String) -> beginEvent
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    long getSessionTimeoutThreshold() -> getSessionTimeoutThreshold
    boolean shouldRegardAsNewSession() -> shouldRegardAsNewSession
    void endActivity(java.lang.String) -> endActivity
    void dumpJsonMap(android.content.Context) -> dumpJsonMap
    void report(android.content.Context,boolean) -> report
    void debugDump(android.content.Context) -> debugDump
    boolean inDebug(android.content.Context) -> inDebug
    void postRecording(android.content.Context) -> postRecording
    void intervalRecording(android.content.Context) -> intervalRecording
    void batchRecording(android.content.Context) -> batchRecording
    void saveSessionsToServer(android.content.Context) -> saveSessionsToServer
    void clearSessions() -> clearSessions
    void setAVOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setAVOnlineConfigureListener
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    java.lang.String getConfigParams(java.lang.String,java.lang.String) -> getConfigParams
    android.os.Handler access$000(com.avos.avoscloud.AnalyticsImpl) -> access$000
    java.lang.String access$100() -> access$100
    boolean access$200(com.avos.avoscloud.AnalyticsImpl) -> access$200
    com.avos.avoscloud.AnalyticsOnlineConfig access$300(com.avos.avoscloud.AnalyticsImpl) -> access$300
com.avos.avoscloud.AnalyticsImpl$1 -> com.avos.avoscloud.AnalyticsImpl$1:
    android.content.Context val$context -> val$context
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AnalyticsImpl$2 -> com.avos.avoscloud.AnalyticsImpl$2:
    com.avos.avoscloud.AnalyticsSession val$session -> val$session
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsImpl$3 -> com.avos.avoscloud.AnalyticsImpl$3:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AnalyticsImpl$4 -> com.avos.avoscloud.AnalyticsImpl$4:
    int[] $SwitchMap$com$avos$avoscloud$ReportPolicy -> $SwitchMap$com$avos$avoscloud$ReportPolicy
com.avos.avoscloud.AnalyticsOnlineConfig -> com.avos.avoscloud.AnalyticsOnlineConfig:
    com.avos.avoscloud.ReportPolicy reportPolicy -> reportPolicy
    java.util.Map config -> config
    com.avos.avoscloud.AnalyticsImpl parent -> parent
    boolean enableStats -> enableStats
    void update(android.content.Context) -> update
    void update(android.content.Context,boolean) -> update
    boolean isEnableStats() -> isEnableStats
    void setEnableStats(boolean) -> setEnableStats
    void setReportPolicy(com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    com.avos.avoscloud.ReportPolicy getReportPolicy() -> getReportPolicy
    java.lang.String getConfigParams(java.lang.String) -> getConfigParams
    com.avos.avoscloud.AnalyticsImpl access$000(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$000
    boolean access$102(com.avos.avoscloud.AnalyticsOnlineConfig,boolean) -> access$102
    com.avos.avoscloud.ReportPolicy access$200(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$200
    com.avos.avoscloud.ReportPolicy access$202(com.avos.avoscloud.AnalyticsOnlineConfig,com.avos.avoscloud.ReportPolicy) -> access$202
com.avos.avoscloud.AnalyticsOnlineConfig$1 -> com.avos.avoscloud.AnalyticsOnlineConfig$1:
    boolean val$updatePolicy -> val$updatePolicy
    android.content.Context val$context -> val$context
    com.avos.avoscloud.AnalyticsOnlineConfig this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsSession -> com.avos.avoscloud.AnalyticsSession:
    java.util.List activities -> activities
    java.util.List events -> events
    java.lang.String sessionId -> sessionId
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String sessionIdTag -> sessionIdTag
    int SESSIONID_LENGTH -> SESSIONID_LENGTH
    java.lang.String TAG -> TAG
    void beginSession() -> beginSession
    void endSession() -> endSession
    boolean isSessionFinished() -> isSessionFinished
    void pauseSession() -> pauseSession
    long getSessionStart() -> getSessionStart
    java.lang.String getSessionId() -> getSessionId
    void setSessionDuration(long) -> setSessionDuration
    com.avos.avoscloud.AnalyticsActivity activityByName(java.lang.String,boolean) -> activityByName
    com.avos.avoscloud.AnalyticsEvent eventByName(java.lang.String,java.lang.String,java.lang.String,boolean) -> eventByName
    void clearEvents() -> clearEvents
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    void endActivity(java.lang.String) -> endActivity
    java.util.Map launchMap() -> launchMap
    double myDuration() -> myDuration
    java.util.Map activitiesMap() -> activitiesMap
    java.util.List eventArray() -> eventArray
    java.util.Map jsonMap(android.content.Context) -> jsonMap
com.avos.avoscloud.AnalyticsUtils -> com.avos.avoscloud.AnalyticsUtils:
    java.lang.String TAG -> TAG
    java.util.Map getNetworkInfo(android.content.Context) -> getNetworkInfo
    java.lang.String cleanNetworkTypeName(java.lang.String) -> cleanNetworkTypeName
    java.util.Map deviceInfo(android.content.Context) -> deviceInfo
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.util.Map getDeviceInfo(android.content.Context) -> getDeviceInfo
    java.lang.String collectMemInfo() -> collectMemInfo
    java.lang.String getCPUInfo() -> getCPUInfo
    java.lang.String getLocalIpAddress() -> getLocalIpAddress
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String getRandomString(int) -> getRandomString
    boolean isStringEqual(java.lang.String,java.lang.String) -> isStringEqual
com.avos.avoscloud.BuildConfig -> com.avos.avoscloud.BuildConfig:
    boolean DEBUG -> DEBUG
com.avos.avoscloud.CountCallback -> com.avos.avoscloud.CountCallback:
    void done(int,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.DeleteCallback -> com.avos.avoscloud.DeleteCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FindCallback -> com.avos.avoscloud.FindCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.FunctionCallback -> com.avos.avoscloud.FunctionCallback:
    void done(java.lang.Object,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
    void internalDone(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GenericObjectCallback -> com.avos.avoscloud.GenericObjectCallback:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.GetCallback -> com.avos.avoscloud.GetCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetDataCallback -> com.avos.avoscloud.GetDataCallback:
    void done(byte[],com.avos.avoscloud.AVException) -> done
    void internalDone0(byte[],com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetFileCallback -> com.avos.avoscloud.GetFileCallback:
    void done(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.GetHttpResponseHandler -> com.avos.avoscloud.GetHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    java.lang.String absoluteURLString -> absoluteURLString
    com.avos.avoscloud.AVQuery$CachePolicy policy -> policy
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.HttpClientUploader -> com.avos.avoscloud.HttpClientUploader:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    java.util.concurrent.atomic.AtomicReference httpPostRef -> httpPostRef
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
    void interruptImmediately() -> interruptImmediately
    void closeExpiredConnections() -> closeExpiredConnections
    void publishProgress(int) -> publishProgress
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    void execute() -> execute
com.avos.avoscloud.JSONHelper -> com.avos.avoscloud.JSONHelper:
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    boolean isEmptyObject(org.json.JSONObject) -> isEmptyObject
    java.util.Map getMap(org.json.JSONObject,java.lang.String) -> getMap
    java.util.Map toMap(org.json.JSONObject) -> toMap
    java.util.Map mapFromString(java.lang.String) -> mapFromString
    java.util.List toList(org.json.JSONArray) -> toList
    java.lang.Object fromJson(java.lang.Object) -> fromJson
    java.lang.String toJsonString(java.util.Map) -> toJsonString
com.avos.avoscloud.LogInCallback -> com.avos.avoscloud.LogInCallback:
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.LogUtil -> com.avos.avoscloud.LogUtil:
com.avos.avoscloud.LogUtil$avlog -> com.avos.avoscloud.LogUtil$avlog:
    boolean showAVLog -> showAVLog
    void i(java.lang.String) -> i
    void i(java.lang.Object) -> i
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
com.avos.avoscloud.LogUtil$log -> com.avos.avoscloud.LogUtil$log:
    boolean show -> show
    java.lang.String Tag -> Tag
    java.lang.String Cname -> Cname
    java.lang.String Mname -> Mname
    boolean shouldShow(int) -> shouldShow
    void getTrace() -> getTrace
    void v(java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(int) -> d
    void d(float) -> d
    void d(double) -> d
    void d() -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String) -> i
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
    void e() -> e
    void e(java.lang.String,java.lang.Exception) -> e
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.avos.avoscloud.PaasClient -> com.avos.avoscloud.PaasClient:
    org.apache.http.client.CookieStore COOKIE_STORE -> COOKIE_STORE
    com.avos.avoscloud.PaasClient instance -> instance
    java.lang.String baseUrl -> baseUrl
    java.lang.String apiVersion -> apiVersion
    java.lang.String applicationIdField -> applicationIdField
    java.lang.String applicationId -> applicationId
    java.lang.String apiKeyField -> apiKeyField
    java.lang.String clientKey -> clientKey
    com.avos.avoscloud.AVOSSSLSocketFactory socketFactory -> socketFactory
    java.lang.String sessionTokenField -> sessionTokenField
    boolean isUrulu -> isUrulu
    boolean isProduction -> isProduction
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String defaultContentType -> defaultContentType
    java.lang.String DEFAULT_FAIL_STRING -> DEFAULT_FAIL_STRING
    java.lang.String sdkVersion -> sdkVersion
    java.lang.String userAgent -> userAgent
    com.avos.avoscloud.AVUser currentUser -> currentUser
    com.avos.avoscloud.AVACL defaultACL -> defaultACL
    com.loopj.android.http.SyncHttpClient syncHttpClient -> syncHttpClient
    com.loopj.android.http.AsyncHttpClient asyncHttpClient -> asyncHttpClient
    void setProduction(boolean) -> setProduction
    boolean isAVOSCloud() -> isAVOSCloud
    com.avos.avoscloud.PaasClient sharedInstance() -> sharedInstance
    com.avos.avoscloud.AVACL getDefaultACL() -> getDefaultACL
    void setDefaultACL(com.avos.avoscloud.AVACL) -> setDefaultACL
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    java.util.Map userHeaderMap() -> userHeaderMap
    void setCurrentUser(com.avos.avoscloud.AVUser) -> setCurrentUser
    void updateHeaders(com.loopj.android.http.AsyncHttpClient) -> updateHeaders
    com.avos.avoscloud.AVOSSSLSocketFactory sslSocketFactory() -> sslSocketFactory
    void configHttpClient(com.loopj.android.http.AsyncHttpClient) -> configHttpClient
    com.loopj.android.http.AsyncHttpClient clientInstance(boolean) -> clientInstance
    void useUruluServer() -> useUruluServer
    void useOfficalParseServer() -> useOfficalParseServer
    void useAVCloudUS() -> useAVCloudUS
    void useAVCloudCN() -> useAVCloudCN
    void useLocalStg() -> useLocalStg
    java.lang.String buildUrl(java.lang.String) -> buildUrl
    java.lang.String batchUrl() -> batchUrl
    java.lang.String batchSaveRelativeUrl() -> batchSaveRelativeUrl
    com.loopj.android.http.AsyncHttpResponseHandler createGetHandler(com.avos.avoscloud.GenericObjectCallback) -> createGetHandler
    com.loopj.android.http.AsyncHttpResponseHandler createGetHandler(com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,java.lang.String) -> createGetHandler
    com.loopj.android.http.AsyncHttpResponseHandler createPostHandler(com.avos.avoscloud.GenericObjectCallback) -> createPostHandler
    java.lang.String getApiVersion() -> getApiVersion
    void setBaseUrl(java.lang.String) -> setBaseUrl
    void setApplicationId(java.lang.String) -> setApplicationId
    void setClientKey(java.lang.String) -> setClientKey
    java.lang.String getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,long) -> getObject
    java.lang.String generateQueryPath(java.lang.String,com.loopj.android.http.RequestParams) -> generateQueryPath
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy) -> getObject
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> getObject
    void putObject(java.lang.String,java.lang.String,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> putObject
    void addHeader(com.loopj.android.http.AsyncHttpClient,java.util.Map) -> addHeader
    void putObject(java.lang.String,java.lang.String,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> putObject
    void processException(java.lang.Exception,com.avos.avoscloud.GenericObjectCallback) -> processException
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object,java.util.Map) -> batchItemMap
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object) -> batchItemMap
    java.util.List assembleBatchOpsList(java.util.List,java.lang.String) -> assembleBatchOpsList
    java.util.Map batchRequest(java.util.List) -> batchRequest
    void postBatchObject(java.util.List,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> postBatchObject
    void postBatchSave(java.util.List,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> postBatchSave
    void postObject(java.lang.String,java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback) -> postObject
    void postObject(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback) -> postObject
    void deleteObject(java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback) -> deleteObject
    void deleteObject(java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback) -> deleteObject
    java.io.File archiveRequest(java.lang.String,java.lang.String,java.lang.String) -> archiveRequest
    void handleArchivedRequest(java.io.File,boolean) -> handleArchivedRequest
    void handleArchivedRequest(java.io.File,boolean,com.avos.avoscloud.GenericObjectCallback) -> handleArchivedRequest
    void handleAllArchivedRequest() -> handleAllArchivedRequest
    void dumpHttpGetRequest(java.lang.String,com.loopj.android.http.RequestParams) -> dumpHttpGetRequest
    java.lang.String headerString(java.util.Map) -> headerString
    void dumpHttpPutRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPutRequest
    void dumpHttpPostRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPostRequest
com.avos.avoscloud.PaasClient$1 -> com.avos.avoscloud.PaasClient$1:
    com.avos.avoscloud.PaasClient this$0 -> this$0
    java.lang.String onRequestFailed(java.lang.Throwable,java.lang.String) -> onRequestFailed
com.avos.avoscloud.PaasClient$2 -> com.avos.avoscloud.PaasClient$2:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$3 -> com.avos.avoscloud.PaasClient$3:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$absolutURLString -> val$absolutURLString
    long val$maxAgeInMilliseconds -> val$maxAgeInMilliseconds
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$4 -> com.avos.avoscloud.PaasClient$4:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$5 -> com.avos.avoscloud.PaasClient$5:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.io.File val$archivedFile -> val$archivedFile
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$6 -> com.avos.avoscloud.PaasClient$6:
    int[] $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy -> $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy
com.avos.avoscloud.PaasClient$ForgotCookieStore -> com.avos.avoscloud.PaasClient$ForgotCookieStore:
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
com.avos.avoscloud.PostHttpResponseHandler -> com.avos.avoscloud.PostHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.ProgressCallback -> com.avos.avoscloud.ProgressCallback:
    void done(java.lang.Integer) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.PushService -> com.avos.avoscloud.PushService:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String INSTALLATION_SAVED -> INSTALLATION_SAVED
    com.avos.avospush.push.AVPushConnectionManager sPushConnectionManager -> sPushConnectionManager
    com.avos.avospush.push.AVPushServiceAppManager pushServiceAppManager -> pushServiceAppManager
    java.util.concurrent.ExecutorService executorService -> executorService
    java.lang.Object connecting -> connecting
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void startServiceIfRequired(android.content.Context,java.lang.Class) -> startServiceIfRequired
    void startService(android.content.Context,java.lang.Class) -> startService
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> subscribe
    void setNotificationIcon(int) -> setNotificationIcon
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> setDefaultPushCallback
    void unsubscribe(android.content.Context,java.lang.String) -> unsubscribe
    void initConnectionManager() -> initConnectionManager
    java.lang.Object access$000() -> access$000
    java.lang.String access$100() -> access$100
    void access$200(com.avos.avoscloud.PushService) -> access$200
com.avos.avoscloud.PushService$1 -> com.avos.avoscloud.PushService$1:
    com.avos.avoscloud.PushService this$0 -> this$0
    void run() -> run
com.avos.avoscloud.PushService$2 -> com.avos.avoscloud.PushService$2:
    android.content.Context val$finalContext -> val$finalContext
    java.lang.Class val$cls -> val$cls
    void run() -> run
com.avos.avoscloud.PushService$3 -> com.avos.avoscloud.PushService$3:
    java.lang.String val$finalChannel -> val$finalChannel
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.PushService$4 -> com.avos.avoscloud.PushService$4:
    java.lang.String val$finalChannel -> val$finalChannel
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.QiniuUploader -> com.avos.avoscloud.QiniuUploader:
    java.lang.String bucket -> bucket
    java.lang.String token -> token
    java.lang.String key -> key
    java.lang.String hash -> hash
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    com.avos.avoscloud.AVException doWork() -> doWork
    com.avos.avoscloud.AVException handleGetBucketResponse(java.lang.String) -> handleGetBucketResponse
    java.lang.String getGetBucketParameters() -> getGetBucketParameters
    java.lang.String getUploadPath() -> getUploadPath
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.QiniuUploader,java.lang.String) -> access$000
com.avos.avoscloud.QiniuUploader$1 -> com.avos.avoscloud.QiniuUploader$1:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.QiniuUploader$2 -> com.avos.avoscloud.QiniuUploader$2:
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void transferred(long) -> transferred
com.avos.avoscloud.R -> com.avos.avoscloud.R:
com.avos.avoscloud.R$attr -> com.avos.avoscloud.R$attr:
com.avos.avoscloud.R$layout -> com.avos.avoscloud.R$layout:
    int main -> main
com.avos.avoscloud.R$string -> com.avos.avoscloud.R$string:
    int app_name -> app_name
com.avos.avoscloud.RefreshCallback -> com.avos.avoscloud.RefreshCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.ReportPolicy -> com.avos.avoscloud.ReportPolicy:
    com.avos.avoscloud.ReportPolicy REALTIME -> REALTIME
    com.avos.avoscloud.ReportPolicy BATCH -> BATCH
    com.avos.avoscloud.ReportPolicy SENDDAILY -> SENDDAILY
    com.avos.avoscloud.ReportPolicy SENDWIFIONLY -> SENDWIFIONLY
    com.avos.avoscloud.ReportPolicy SEND_INTERVAL -> SEND_INTERVAL
    com.avos.avoscloud.ReportPolicy SEND_ON_EXIT -> SEND_ON_EXIT
    int value -> value
    com.avos.avoscloud.ReportPolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.ReportPolicy[] values() -> values
    com.avos.avoscloud.ReportPolicy valueOf(java.lang.String) -> valueOf
    com.avos.avoscloud.ReportPolicy valueOf(int) -> valueOf
    int value() -> value
com.avos.avoscloud.RequestPasswordResetCallback -> com.avos.avoscloud.RequestPasswordResetCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.S3Uploader -> com.avos.avoscloud.S3Uploader:
    java.lang.String access -> access
    java.lang.String secret -> secret
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    java.lang.String uuid -> uuid
    java.lang.String bucket -> bucket
    java.lang.String S3BasePath -> S3BasePath
    com.avos.avoscloud.AVException doWork() -> doWork
    com.avos.avoscloud.AVException handleGetKeyResponse(java.lang.String) -> handleGetKeyResponse
    com.avos.avoscloud.AVException handlePostResponse(java.lang.String) -> handlePostResponse
    java.lang.String getParametersForUrulu() -> getParametersForUrulu
    java.lang.String getS3Link(java.lang.String) -> getS3Link
    java.lang.String md5WithHmac(java.lang.String) -> md5WithHmac
    java.lang.String authorization(java.lang.String,java.lang.String,java.lang.String) -> authorization
    java.lang.String signature(java.lang.String,java.lang.String,java.lang.String) -> signature
    java.lang.String RFC822FormatStringFromDate(java.util.Date) -> RFC822FormatStringFromDate
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$000
    com.avos.avoscloud.AVException access$100(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$100
com.avos.avoscloud.S3Uploader$1 -> com.avos.avoscloud.S3Uploader$1:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$2 -> com.avos.avoscloud.S3Uploader$2:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$3 -> com.avos.avoscloud.S3Uploader$3:
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void transferred(long) -> transferred
com.avos.avoscloud.SaveCallback -> com.avos.avoscloud.SaveCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.SendCallback -> com.avos.avoscloud.SendCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.SignUpCallback -> com.avos.avoscloud.SignUpCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
com.avos.avoscloud.ops.AVOp -> com.avos.avoscloud.ops.AVOp:
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    java.util.Map encodeOp() -> encodeOp
com.avos.avoscloud.ops.AVOp$OpType -> com.avos.avoscloud.ops.AVOp$OpType:
    com.avos.avoscloud.ops.AVOp$OpType Set -> Set
    com.avos.avoscloud.ops.AVOp$OpType Increment -> Increment
    com.avos.avoscloud.ops.AVOp$OpType AddUnique -> AddUnique
    com.avos.avoscloud.ops.AVOp$OpType Add -> Add
    com.avos.avoscloud.ops.AVOp$OpType Remove -> Remove
    com.avos.avoscloud.ops.AVOp$OpType AddRelation -> AddRelation
    com.avos.avoscloud.ops.AVOp$OpType RemoveRelation -> RemoveRelation
    com.avos.avoscloud.ops.AVOp$OpType Delete -> Delete
    com.avos.avoscloud.ops.AVOp$OpType Null -> Null
    com.avos.avoscloud.ops.AVOp$OpType Compound -> Compound
    com.avos.avoscloud.ops.AVOp$OpType[] $VALUES -> $VALUES
    com.avos.avoscloud.ops.AVOp$OpType[] values() -> values
    com.avos.avoscloud.ops.AVOp$OpType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.ops.AddOp -> com.avos.avoscloud.ops.AddOp:
    java.util.LinkedList values -> values
    java.util.LinkedList getValues() -> getValues
    void setValues(java.util.LinkedList) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddOp$1 -> com.avos.avoscloud.ops.AddOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddRelationOp -> com.avos.avoscloud.ops.AddRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddRelationOp$1 -> com.avos.avoscloud.ops.AddRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddUniqueOp -> com.avos.avoscloud.ops.AddUniqueOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddUniqueOp$1 -> com.avos.avoscloud.ops.AddUniqueOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.BaseOp -> com.avos.avoscloud.ops.BaseOp:
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp$OpType type -> type
    java.util.LinkedList ops -> ops
    com.avos.avoscloud.ops.AVOp$OpType getType() -> getType
    void setType(com.avos.avoscloud.ops.AVOp$OpType) -> setType
    java.util.LinkedList getOps() -> getOps
    void setOps(java.util.LinkedList) -> setOps
    java.lang.String getKey() -> getKey
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    void assertKeyEquals(com.avos.avoscloud.ops.AVOp) -> assertKeyEquals
    java.util.Iterator iterator() -> iterator
    com.avos.avoscloud.ops.AVOp get(int) -> get
com.avos.avoscloud.ops.CompoundOp -> com.avos.avoscloud.ops.CompoundOp:
    java.util.Map encodeOp() -> encodeOp
    void addFirst(com.avos.avoscloud.ops.AVOp) -> addFirst
    void addLast(com.avos.avoscloud.ops.AVOp) -> addLast
    com.avos.avoscloud.ops.AVOp removeFirst() -> removeFirst
    com.avos.avoscloud.ops.AVOp removeLast() -> removeLast
com.avos.avoscloud.ops.DeleteOp -> com.avos.avoscloud.ops.DeleteOp:
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.DeleteOp$1 -> com.avos.avoscloud.ops.DeleteOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.IncrementOp -> com.avos.avoscloud.ops.IncrementOp:
    java.lang.Number amount -> amount
    java.lang.Number getAmount() -> getAmount
    void setAmount(java.lang.Number) -> setAmount
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.IncrementOp$1 -> com.avos.avoscloud.ops.IncrementOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.NullOP -> com.avos.avoscloud.ops.NullOP:
    com.avos.avoscloud.ops.NullOP INSTANCE -> INSTANCE
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.util.Iterator iterator() -> iterator
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    java.util.Map encodeOp() -> encodeOp
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
com.avos.avoscloud.ops.RemoveOp -> com.avos.avoscloud.ops.RemoveOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveOp$1 -> com.avos.avoscloud.ops.RemoveOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.RemoveRelationOp -> com.avos.avoscloud.ops.RemoveRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveRelationOp$1 -> com.avos.avoscloud.ops.RemoveRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.SetOp -> com.avos.avoscloud.ops.SetOp:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.SetOp$1 -> com.avos.avoscloud.ops.SetOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.signature.AES -> com.avos.avoscloud.signature.AES:
    java.lang.String KEY_GENERATION_ALG -> KEY_GENERATION_ALG
    int HASH_ITERATIONS -> HASH_ITERATIONS
    int KEY_LENGTH -> KEY_LENGTH
    char[] humanPassphrase -> humanPassphrase
    byte[] salt -> salt
    javax.crypto.spec.PBEKeySpec myKeyspec -> myKeyspec
    java.lang.String CIPHERMODEPADDING -> CIPHERMODEPADDING
    javax.crypto.SecretKeyFactory keyfactory -> keyfactory
    javax.crypto.SecretKey sk -> sk
    javax.crypto.spec.SecretKeySpec skforAES -> skforAES
    byte[] iv -> iv
    javax.crypto.spec.IvParameterSpec IV -> IV
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
    byte[] addPadding(byte[]) -> addPadding
    byte[] dropPadding(byte[]) -> dropPadding
    byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> encrypt
    byte[] decrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> decrypt
com.avos.avoscloud.signature.Base64Decoder -> com.avos.avoscloud.signature.Base64Decoder:
    char[] chars -> chars
    int[] ints -> ints
    int charCount -> charCount
    int carryOver -> carryOver
    int read() -> read
    int read(byte[],int,int) -> read
    java.lang.String decode(java.lang.String) -> decode
    byte[] decodeToBytes(java.lang.String) -> decodeToBytes
    void main(java.lang.String[]) -> main
com.avos.avoscloud.signature.Base64Encoder -> com.avos.avoscloud.signature.Base64Encoder:
    char[] chars -> chars
    int charCount -> charCount
    int carryOver -> carryOver
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String encode(byte[]) -> encode
com.avos.avospush.BuildConfig -> com.avos.avospush.BuildConfig:
    boolean DEBUG -> DEBUG
com.avos.avospush.R -> com.avos.avospush.R:
com.avos.avospush.R$attr -> com.avos.avospush.R$attr:
com.avos.avospush.R$layout -> com.avos.avospush.R$layout:
    int main -> main
com.avos.avospush.R$string -> com.avos.avospush.R$string:
    int app_name -> app_name
com.avos.avospush.notification.NotificationCompat -> com.avos.avospush.notification.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl access$000() -> access$000
com.avos.avospush.notification.NotificationCompat$Action -> com.avos.avospush.notification.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
com.avos.avospush.notification.NotificationCompat$BigPictureStyle -> com.avos.avospush.notification.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
com.avos.avospush.notification.NotificationCompat$BigTextStyle -> com.avos.avospush.notification.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.avos.avospush.notification.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.avos.avospush.notification.NotificationCompat$Builder -> com.avos.avospush.notification.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    com.avos.avospush.notification.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    com.avos.avospush.notification.NotificationCompat$Builder setWhen(long) -> setWhen
    com.avos.avospush.notification.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    com.avos.avospush.notification.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.avos.avospush.notification.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.avos.avospush.notification.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.avos.avospush.notification.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.avos.avospush.notification.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    com.avos.avospush.notification.NotificationCompat$Builder setNumber(int) -> setNumber
    com.avos.avospush.notification.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    com.avos.avospush.notification.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    com.avos.avospush.notification.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    com.avos.avospush.notification.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.avos.avospush.notification.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.avos.avospush.notification.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    com.avos.avospush.notification.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    com.avos.avospush.notification.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    com.avos.avospush.notification.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.avos.avospush.notification.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    com.avos.avospush.notification.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    com.avos.avospush.notification.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    com.avos.avospush.notification.NotificationCompat$Builder setLights(int,int,int) -> setLights
    com.avos.avospush.notification.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    com.avos.avospush.notification.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    com.avos.avospush.notification.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.avos.avospush.notification.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.avos.avospush.notification.NotificationCompat$Builder setPriority(int) -> setPriority
    com.avos.avospush.notification.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    com.avos.avospush.notification.NotificationCompat$Builder setStyle(com.avos.avospush.notification.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
com.avos.avospush.notification.NotificationCompat$InboxStyle -> com.avos.avospush.notification.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    com.avos.avospush.notification.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplBase -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplHoneycomb -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplIceCreamSandwich -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplJellybean -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$Style -> com.avos.avospush.notification.NotificationCompat$Style:
    com.avos.avospush.notification.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.avos.avospush.notification.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.avos.avospush.notification.NotificationCompatHoneycomb -> com.avos.avospush.notification.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
com.avos.avospush.notification.NotificationCompatIceCreamSandwich -> com.avos.avospush.notification.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
com.avos.avospush.notification.NotificationCompatJellybean -> com.avos.avospush.notification.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
com.avos.avospush.push.AVPushConnectionManager -> com.avos.avospush.push.AVPushConnectionManager:
    int DISCON_TIMEOUT -> DISCON_TIMEOUT
    java.lang.String PUSH_INTENT_KEY -> PUSH_INTENT_KEY
    int PING_INTERVAL -> PING_INTERVAL
    java.lang.String LOGTAG -> LOGTAG
    java.util.Random random -> random
    com.avos.avospush.push.AVPushConnectionManager sPushConnectionManager -> sPushConnectionManager
    com.avos.avospush.push.AVPushServiceAppManager avPushServiceAppManager -> avPushServiceAppManager
    java.lang.String pushServiceName -> pushServiceName
    java.lang.String pushUsername -> pushUsername
    java.lang.String pushPassword -> pushPassword
    java.lang.String pushResource -> pushResource
    java.lang.String applicationId -> applicationId
    int currentRetryCount -> currentRetryCount
    com.avos.smack.XMPPConnection xmppConnection -> xmppConnection
    com.avos.smack.PacketListener packetListener -> packetListener
    com.avos.smack.ping.PingManager pingManager -> pingManager
    android.content.Context context -> context
    com.avos.smack.ConnectionListener connectionListener -> connectionListener
    java.util.concurrent.ScheduledExecutorService reconnectService -> reconnectService
    java.util.concurrent.ScheduledFuture reConnectTask -> reConnectTask
    java.lang.Runnable reconnectHandler -> reconnectHandler
    com.avos.avospush.push.AVPushRouter router -> router
    com.avos.avospush.push.AVPushConnectionManager getInstance(android.content.Context,com.avos.avospush.push.AVPushServiceAppManager,java.lang.String,java.lang.String) -> getInstance
    boolean initConnection() -> initConnection
    void stop() -> stop
    void setupConnectionListener() -> setupConnectionListener
    void tryReconnect() -> tryReconnect
    void tryStopReconnectTask() -> tryStopReconnectTask
    void cleanupConnection() -> cleanupConnection
    com.avos.smack.XMPPConnection createNewConnection() -> createNewConnection
    boolean connect() -> connect
    java.lang.String access$000() -> access$000
    void access$100(com.avos.avospush.push.AVPushConnectionManager) -> access$100
    com.avos.smack.XMPPConnection access$200(com.avos.avospush.push.AVPushConnectionManager) -> access$200
    android.content.Context access$300(com.avos.avospush.push.AVPushConnectionManager) -> access$300
    com.avos.avospush.push.AVPushServiceAppManager access$400(com.avos.avospush.push.AVPushConnectionManager) -> access$400
    java.util.Random access$500() -> access$500
    java.lang.String access$600(com.avos.avospush.push.AVPushConnectionManager) -> access$600
com.avos.avospush.push.AVPushConnectionManager$1 -> com.avos.avospush.push.AVPushConnectionManager$1:
    com.avos.avospush.push.AVPushConnectionManager this$0 -> this$0
    void run() -> run
com.avos.avospush.push.AVPushConnectionManager$2 -> com.avos.avospush.push.AVPushConnectionManager$2:
    com.avos.avospush.push.AVPushConnectionManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
com.avos.avospush.push.AVPushConnectionManager$3 -> com.avos.avospush.push.AVPushConnectionManager$3:
    com.avos.avospush.push.AVPushConnectionManager this$0 -> this$0
    void run() -> run
com.avos.avospush.push.AVPushConnectionManager$4 -> com.avos.avospush.push.AVPushConnectionManager$4:
    com.avos.avospush.push.AVPushConnectionManager this$0 -> this$0
    void pingFailed() -> pingFailed
com.avos.avospush.push.AVPushConnectionManager$NotificationListener -> com.avos.avospush.push.AVPushConnectionManager$NotificationListener:
    android.content.Context ctx -> ctx
    com.avos.avospush.push.AVPushConnectionManager this$0 -> this$0
    java.lang.String getText(java.lang.String) -> getText
    java.lang.String getApplicationName() -> getApplicationName
    java.lang.String getTitle(java.lang.String) -> getTitle
    java.lang.String getSound(java.lang.String) -> getSound
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    void sendNotification(java.lang.String,java.lang.String) -> sendNotification
    void sendBroadcast(java.lang.String,java.lang.String,java.lang.String) -> sendBroadcast
    java.lang.String getChannel(java.lang.String) -> getChannel
    java.lang.String getAction(java.lang.String) -> getAction
    java.lang.String getJSONValue(java.lang.String,java.lang.String) -> getJSONValue
    java.util.Date getExpiration(java.lang.String) -> getExpiration
    void processPacket(com.avos.smack.packet.Packet) -> processPacket
com.avos.avospush.push.AVPushRouter -> com.avos.avospush.push.AVPushRouter:
    java.lang.String ROUTER_SERVICE_FMT -> ROUTER_SERVICE_FMT
    java.lang.String routerUrl -> routerUrl
    com.avos.smack.util.dns.HostAddress pushServer -> pushServer
    java.lang.Integer SUCCESS_CODE -> SUCCESS_CODE
    java.lang.String installationId -> installationId
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.Context context -> context
    java.lang.String PUSH_SERVER_CACHE_KEY -> PUSH_SERVER_CACHE_KEY
    java.lang.String DEFAULT_PUSH_SERVER_HOST -> DEFAULT_PUSH_SERVER_HOST
    int DEFAULT_PUSH_SERVER_PORT -> DEFAULT_PUSH_SERVER_PORT
    int ttlInSecs -> ttlInSecs
    long lastFetchedTimestamp -> lastFetchedTimestamp
    com.avos.smack.util.dns.HostAddress getPushServerFromCache() -> getPushServerFromCache
    void cachePushServer(java.lang.String,int) -> cachePushServer
    com.avos.smack.util.dns.HostAddress updatePushServer() -> updatePushServer
    void resetPushServer() -> resetPushServer
    void fetchPushServer() -> fetchPushServer
    void main(java.lang.String[]) -> main
    void closeQuietly(java.io.Closeable) -> closeQuietly
    com.avos.smack.util.dns.HostAddress getPushServer() -> getPushServer
com.avos.avospush.push.AVPushServiceAppManager -> com.avos.avospush.push.AVPushServiceAppManager:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String AV_PUSH_SERVICE_APP_DATA -> AV_PUSH_SERVICE_APP_DATA
    java.lang.String ICON_KEY -> ICON_KEY
    java.util.concurrent.ConcurrentHashMap defaultPushCallback -> defaultPushCallback
    android.content.Context context -> context
    int notificationIcon -> notificationIcon
    void readDataFromCache() -> readDataFromCache
    void addDataToCache(java.lang.String,int,java.lang.String,java.lang.String) -> addDataToCache
    void removeDataFromCache(java.lang.String,int,java.lang.String) -> removeDataFromCache
    int getNotificationIcon() -> getNotificationIcon
    void setNotificationIcon(int) -> setNotificationIcon
    void addDefaultPushCallback(java.lang.String,java.lang.String) -> addDefaultPushCallback
    void removeDefaultPushCallback(java.lang.String) -> removeDefaultPushCallback
    boolean containsDefaultPushCallback(java.lang.String) -> containsDefaultPushCallback
    java.lang.String getDefaultPushCallback(java.lang.String) -> getDefaultPushCallback
    int size() -> size
com.avos.avospush.push.Utils -> com.avos.avospush.push.Utils:
    java.lang.String dateFormat -> dateFormat
    java.lang.String LOGTAG -> LOGTAG
    boolean isStringNullOrEmpty(java.lang.String) -> isStringNullOrEmpty
    java.util.Date dateFromString(java.lang.String) -> dateFromString
    boolean isConnected(android.content.Context) -> isConnected
com.avos.sasl.CRAMMD5HashedSaslClientFactory -> com.avos.sasl.CRAMMD5HashedSaslClientFactory:
    java.lang.String MECHANISM -> MECHANISM
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
com.avos.sasl.ClientSaslFactory -> com.avos.sasl.ClientSaslFactory:
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
com.avos.sasl.Constants -> com.avos.sasl.Constants:
    java.lang.String MECH_CRAMMD5 -> MECH_CRAMMD5
    java.lang.String MECH_PLAIN -> MECH_PLAIN
    java.lang.String SASL_CRAMMD5 -> SASL_CRAMMD5
    java.lang.String SASL_PLAIN -> SASL_PLAIN
com.avos.sasl.JCAProvider -> com.avos.sasl.JCAProvider:
    long serialVersionUID -> serialVersionUID
    void register(java.util.Map) -> register
com.avos.sasl.PlainSaslClient -> com.avos.sasl.PlainSaslClient:
    boolean completed -> completed
    com.avos.security.auth.callback.CallbackHandler cbh -> cbh
    java.lang.String authorizationID -> authorizationID
    java.lang.String authenticationID -> authenticationID
    byte[] password -> password
    byte SEPARATOR -> SEPARATOR
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void clearPassword() -> clearPassword
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> getUserInfo
com.avos.sasl.SaslProvider -> com.avos.sasl.SaslProvider:
    long serialVersionUID -> serialVersionUID
com.avos.sasl.UserPasswordCallbackHandler -> com.avos.sasl.UserPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(com.avos.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
com.avos.sasl.UsernameHashedPasswordCallbackHandler -> com.avos.sasl.UsernameHashedPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(com.avos.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
    char[] getHash(java.lang.String) -> getHash
com.avos.sasl.client.DigestChallenge -> com.avos.sasl.client.DigestChallenge:
    int QOP_AUTH -> QOP_AUTH
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH_CONF -> QOP_AUTH_CONF
    int QOP_UNRECOGNIZED -> QOP_UNRECOGNIZED
    int CIPHER_3DES -> CIPHER_3DES
    int CIPHER_DES -> CIPHER_DES
    int CIPHER_RC4_40 -> CIPHER_RC4_40
    int CIPHER_RC4 -> CIPHER_RC4
    int CIPHER_RC4_56 -> CIPHER_RC4_56
    int CIPHER_UNRECOGNIZED -> CIPHER_UNRECOGNIZED
    int CIPHER_RECOGNIZED_MASK -> CIPHER_RECOGNIZED_MASK
    java.util.ArrayList m_realms -> m_realms
    java.lang.String m_nonce -> m_nonce
    int m_qop -> m_qop
    boolean m_staleFlag -> m_staleFlag
    int m_maxBuf -> m_maxBuf
    java.lang.String m_characterSet -> m_characterSet
    java.lang.String m_algorithm -> m_algorithm
    int m_cipherOptions -> m_cipherOptions
    void checkSemantics(com.avos.sasl.client.DirectiveList) -> checkSemantics
    void handleNonce(com.avos.sasl.client.ParsedDirective) -> handleNonce
    void handleRealm(com.avos.sasl.client.ParsedDirective) -> handleRealm
    void handleQop(com.avos.sasl.client.ParsedDirective) -> handleQop
    void handleMaxbuf(com.avos.sasl.client.ParsedDirective) -> handleMaxbuf
    void handleCharset(com.avos.sasl.client.ParsedDirective) -> handleCharset
    void handleAlgorithm(com.avos.sasl.client.ParsedDirective) -> handleAlgorithm
    void handleCipher(com.avos.sasl.client.ParsedDirective) -> handleCipher
    void handleStale(com.avos.sasl.client.ParsedDirective) -> handleStale
    java.util.ArrayList getRealms() -> getRealms
    java.lang.String getNonce() -> getNonce
    int getQop() -> getQop
    boolean getStaleFlag() -> getStaleFlag
    int getMaxBuf() -> getMaxBuf
    java.lang.String getCharacterSet() -> getCharacterSet
    java.lang.String getAlgorithm() -> getAlgorithm
    int getCipherOptions() -> getCipherOptions
com.avos.sasl.client.DigestMD5SaslClient -> com.avos.sasl.client.DigestMD5SaslClient:
    java.lang.String m_authorizationId -> m_authorizationId
    java.lang.String m_protocol -> m_protocol
    java.lang.String m_serverName -> m_serverName
    java.util.Map m_props -> m_props
    com.avos.security.auth.callback.CallbackHandler m_cbh -> m_cbh
    int m_state -> m_state
    java.lang.String m_qopValue -> m_qopValue
    char[] m_HA1 -> m_HA1
    java.lang.String m_digestURI -> m_digestURI
    com.avos.sasl.client.DigestChallenge m_dc -> m_dc
    java.lang.String m_clientNonce -> m_clientNonce
    java.lang.String m_realm -> m_realm
    java.lang.String m_name -> m_name
    int STATE_INITIAL -> STATE_INITIAL
    int STATE_DIGEST_RESPONSE_SENT -> STATE_DIGEST_RESPONSE_SENT
    int STATE_VALID_SERVER_RESPONSE -> STATE_VALID_SERVER_RESPONSE
    int STATE_INVALID_SERVER_RESPONSE -> STATE_INVALID_SERVER_RESPONSE
    int STATE_DISPOSED -> STATE_DISPOSED
    int NONCE_BYTE_COUNT -> NONCE_BYTE_COUNT
    int NONCE_HEX_COUNT -> NONCE_HEX_COUNT
    java.lang.String DIGEST_METHOD -> DIGEST_METHOD
    com.avos.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> getClient
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    char[] convertToHex(byte[]) -> convertToHex
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> DigestCalcHA1
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> DigestCalcResponse
    java.lang.String createDigestResponse(byte[]) -> createDigestResponse
    boolean checkServerResponseAuth(byte[]) -> checkServerResponseAuth
    char getHexChar(byte) -> getHexChar
    java.lang.String getClientNonce() -> getClientNonce
    java.lang.String getMechanismName() -> getMechanismName
com.avos.sasl.client.DirectiveList -> com.avos.sasl.client.DirectiveList:
    int STATE_LOOKING_FOR_FIRST_DIRECTIVE -> STATE_LOOKING_FOR_FIRST_DIRECTIVE
    int STATE_LOOKING_FOR_DIRECTIVE -> STATE_LOOKING_FOR_DIRECTIVE
    int STATE_SCANNING_NAME -> STATE_SCANNING_NAME
    int STATE_LOOKING_FOR_EQUALS -> STATE_LOOKING_FOR_EQUALS
    int STATE_LOOKING_FOR_VALUE -> STATE_LOOKING_FOR_VALUE
    int STATE_LOOKING_FOR_COMMA -> STATE_LOOKING_FOR_COMMA
    int STATE_SCANNING_QUOTED_STRING_VALUE -> STATE_SCANNING_QUOTED_STRING_VALUE
    int STATE_SCANNING_TOKEN_VALUE -> STATE_SCANNING_TOKEN_VALUE
    int STATE_NO_UTF8_SUPPORT -> STATE_NO_UTF8_SUPPORT
    int m_curPos -> m_curPos
    int m_errorPos -> m_errorPos
    java.lang.String m_directives -> m_directives
    int m_state -> m_state
    java.util.ArrayList m_directiveList -> m_directiveList
    java.lang.String m_curName -> m_curName
    int m_scanStart -> m_scanStart
    void parseDirectives() -> parseDirectives
    boolean isValidTokenChar(char) -> isValidTokenChar
    boolean isWhiteSpace(char) -> isWhiteSpace
    void addDirective(java.lang.String,boolean) -> addDirective
    java.util.Iterator getIterator() -> getIterator
com.avos.sasl.client.ParsedDirective -> com.avos.sasl.client.ParsedDirective:
    int QUOTED_STRING_VALUE -> QUOTED_STRING_VALUE
    int TOKEN_VALUE -> TOKEN_VALUE
    int m_valueType -> m_valueType
    java.lang.String m_name -> m_name
    java.lang.String m_value -> m_value
    java.lang.String getValue() -> getValue
    java.lang.String getName() -> getName
    int getValueType() -> getValueType
com.avos.sasl.client.ResponseAuth -> com.avos.sasl.client.ResponseAuth:
    java.lang.String m_responseValue -> m_responseValue
    void checkSemantics(com.avos.sasl.client.DirectiveList) -> checkSemantics
    java.lang.String getResponseValue() -> getResponseValue
com.avos.sasl.client.TokenParser -> com.avos.sasl.client.TokenParser:
    int STATE_LOOKING_FOR_FIRST_TOKEN -> STATE_LOOKING_FOR_FIRST_TOKEN
    int STATE_LOOKING_FOR_TOKEN -> STATE_LOOKING_FOR_TOKEN
    int STATE_SCANNING_TOKEN -> STATE_SCANNING_TOKEN
    int STATE_LOOKING_FOR_COMMA -> STATE_LOOKING_FOR_COMMA
    int STATE_PARSING_ERROR -> STATE_PARSING_ERROR
    int STATE_DONE -> STATE_DONE
    int m_curPos -> m_curPos
    int m_scanStart -> m_scanStart
    int m_state -> m_state
    java.lang.String m_tokens -> m_tokens
    java.lang.String parseToken() -> parseToken
    boolean isValidTokenChar(char) -> isValidTokenChar
    boolean isWhiteSpace(char) -> isWhiteSpace
com.avos.sasl.de.Sasl -> com.avos.sasl.de.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    com.avos.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslServer
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
com.avos.sasl.de.SaslClientFactory -> com.avos.sasl.de.SaslClientFactory:
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
com.avos.security.auth.callback.Callback -> com.avos.security.auth.callback.Callback:
com.avos.security.auth.callback.CallbackHandler -> com.avos.security.auth.callback.CallbackHandler:
    void handle(com.avos.security.auth.callback.Callback[]) -> handle
com.avos.security.auth.callback.ChoiceCallback -> com.avos.security.auth.callback.ChoiceCallback:
    long serialVersionUID -> serialVersionUID
    int defaultChoice -> defaultChoice
    java.lang.String prompt -> prompt
    boolean multipleSelectionsAllowed -> multipleSelectionsAllowed
    java.lang.String[] choices -> choices
    int[] selections -> selections
    void setChoices(java.lang.String[]) -> setChoices
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultChoice(int) -> setDefaultChoice
    boolean allowMultipleSelections() -> allowMultipleSelections
    java.lang.String[] getChoices() -> getChoices
    int getDefaultChoice() -> getDefaultChoice
    java.lang.String getPrompt() -> getPrompt
    int[] getSelectedIndexes() -> getSelectedIndexes
    void setSelectedIndex(int) -> setSelectedIndex
    void setSelectedIndexes(int[]) -> setSelectedIndexes
com.avos.security.auth.callback.NameCallback -> com.avos.security.auth.callback.NameCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    java.lang.String defaultName -> defaultName
    java.lang.String inputName -> inputName
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultName(java.lang.String) -> setDefaultName
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getDefaultName() -> getDefaultName
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
com.avos.security.auth.callback.PasswordCallback -> com.avos.security.auth.callback.PasswordCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    boolean echoOn -> echoOn
    char[] inputPassword -> inputPassword
    void setPrompt(java.lang.String) -> setPrompt
    java.lang.String getPrompt() -> getPrompt
    boolean isEchoOn() -> isEchoOn
    void setPassword(char[]) -> setPassword
    char[] getPassword() -> getPassword
    void clearPassword() -> clearPassword
com.avos.security.auth.callback.TextInputCallback -> com.avos.security.auth.callback.TextInputCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String defaultText -> defaultText
    java.lang.String prompt -> prompt
    java.lang.String inputText -> inputText
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultText(java.lang.String) -> setDefaultText
    java.lang.String getDefaultText() -> getDefaultText
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
com.avos.security.auth.callback.TextOutputCallback -> com.avos.security.auth.callback.TextOutputCallback:
    long serialVersionUID -> serialVersionUID
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String message -> message
    int messageType -> messageType
    java.lang.String getMessage() -> getMessage
    int getMessageType() -> getMessageType
com.avos.security.auth.callback.UnsupportedCallbackException -> com.avos.security.auth.callback.UnsupportedCallbackException:
    long serialVersionUID -> serialVersionUID
    com.avos.security.auth.callback.Callback callback -> callback
    com.avos.security.auth.callback.Callback getCallback() -> getCallback
com.avos.security.sasl.AuthenticationException -> com.avos.security.sasl.AuthenticationException:
    long serialVersionUID -> serialVersionUID
com.avos.security.sasl.AuthorizeCallback -> com.avos.security.sasl.AuthorizeCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String authenticationID -> authenticationID
    java.lang.String authorizationID -> authorizationID
    java.lang.String authorizedID -> authorizedID
    boolean authorized -> authorized
    java.lang.String getAuthenticationID() -> getAuthenticationID
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getAuthorizedID() -> getAuthorizedID
    boolean isAuthorized() -> isAuthorized
    void setAuthorized(boolean) -> setAuthorized
    void setAuthorizedID(java.lang.String) -> setAuthorizedID
com.avos.security.sasl.RealmCallback -> com.avos.security.sasl.RealmCallback:
    long serialVersionUID -> serialVersionUID
com.avos.security.sasl.RealmChoiceCallback -> com.avos.security.sasl.RealmChoiceCallback:
    long serialVersionUID -> serialVersionUID
com.avos.security.sasl.Sasl -> com.avos.security.sasl.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.lang.Object newInstance(java.lang.String,java.security.Provider) -> newInstance
    java.util.Collection findFactories(java.lang.String) -> findFactories
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    com.avos.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslServer
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
com.avos.security.sasl.SaslClient -> com.avos.security.sasl.SaslClient:
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
com.avos.security.sasl.SaslClientFactory -> com.avos.security.sasl.SaslClientFactory:
    com.avos.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
com.avos.security.sasl.SaslException -> com.avos.security.sasl.SaslException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable _exception -> _exception
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
com.avos.security.sasl.SaslServer -> com.avos.security.sasl.SaslServer:
    void dispose() -> dispose
    byte[] evaluateResponse(byte[]) -> evaluateResponse
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
com.avos.security.sasl.SaslServerFactory -> com.avos.security.sasl.SaslServerFactory:
    com.avos.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.avos.security.auth.callback.CallbackHandler) -> createSaslServer
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
com.avos.smack.AbstractConnectionListener -> com.avos.smack.AbstractConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
com.avos.smack.AndroidConnectionConfiguration -> com.avos.smack.AndroidConnectionConfiguration:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    void AndroidInit() -> AndroidInit
com.avos.smack.Connection -> com.avos.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> connectionCounter
    java.util.Set connectionEstablishedListeners -> connectionEstablishedListeners
    boolean DEBUG_ENABLED -> DEBUG_ENABLED
    java.util.Collection connectionListeners -> connectionListeners
    java.util.Collection collectors -> collectors
    java.util.Map recvListeners -> recvListeners
    java.util.Map sendListeners -> sendListeners
    java.util.Map interceptors -> interceptors
    android.accounts.AccountManager accountManager -> accountManager
    java.io.Reader reader -> reader
    java.io.Writer writer -> writer
    com.avos.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    int connectionCounterValue -> connectionCounterValue
    com.avos.smack.ConnectionConfiguration config -> config
    java.lang.String serviceCapsNode -> serviceCapsNode
    com.avos.smack.compression.XMPPInputOutputStream compressionHandler -> compressionHandler
    com.avos.smack.ConnectionConfiguration getConfiguration() -> getConfiguration
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getUser() -> getUser
    java.lang.String getConnectionID() -> getConnectionID
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    boolean isSecureConnection() -> isSecureConnection
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    boolean isUsingCompression() -> isUsingCompression
    void connect() -> connect
    void login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void sendPacket(com.avos.smack.packet.Packet) -> sendPacket
    com.avos.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void disconnect() -> disconnect
    void disconnect(com.avos.smack.packet.Presence) -> disconnect
    void addConnectionCreationListener(com.avos.smack.ConnectionCreationListener) -> addConnectionCreationListener
    void removeConnectionCreationListener(com.avos.smack.ConnectionCreationListener) -> removeConnectionCreationListener
    java.util.Collection getConnectionCreationListeners() -> getConnectionCreationListeners
    void addConnectionListener(com.avos.smack.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(com.avos.smack.ConnectionListener) -> removeConnectionListener
    java.util.Collection getConnectionListeners() -> getConnectionListeners
    com.avos.smack.PacketCollector createPacketCollector(com.avos.smack.filter.PacketFilter) -> createPacketCollector
    void removePacketCollector(com.avos.smack.PacketCollector) -> removePacketCollector
    java.util.Collection getPacketCollectors() -> getPacketCollectors
    void addPacketListener(com.avos.smack.PacketListener,com.avos.smack.filter.PacketFilter) -> addPacketListener
    void removePacketListener(com.avos.smack.PacketListener) -> removePacketListener
    java.util.Map getPacketListeners() -> getPacketListeners
    void addPacketSendingListener(com.avos.smack.PacketListener,com.avos.smack.filter.PacketFilter) -> addPacketSendingListener
    void removePacketSendingListener(com.avos.smack.PacketListener) -> removePacketSendingListener
    java.util.Map getPacketSendingListeners() -> getPacketSendingListeners
    void firePacketSendingListeners(com.avos.smack.packet.Packet) -> firePacketSendingListeners
    void addPacketInterceptor(com.avos.smack.PacketInterceptor,com.avos.smack.filter.PacketFilter) -> addPacketInterceptor
    void removePacketInterceptor(com.avos.smack.PacketInterceptor) -> removePacketInterceptor
    boolean isSendPresence() -> isSendPresence
    java.util.Map getPacketInterceptors() -> getPacketInterceptors
    void firePacketInterceptors(com.avos.smack.packet.Packet) -> firePacketInterceptors
    void initDebugger() -> initDebugger
    void setServiceCapsNode(java.lang.String) -> setServiceCapsNode
    java.lang.String getServiceCapsNode() -> getServiceCapsNode
com.avos.smack.Connection$InterceptorWrapper -> com.avos.smack.Connection$InterceptorWrapper:
    com.avos.smack.PacketInterceptor packetInterceptor -> packetInterceptor
    com.avos.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean equals(java.lang.Object) -> equals
    void notifyListener(com.avos.smack.packet.Packet) -> notifyListener
com.avos.smack.Connection$ListenerWrapper -> com.avos.smack.Connection$ListenerWrapper:
    com.avos.smack.PacketListener packetListener -> packetListener
    com.avos.smack.filter.PacketFilter packetFilter -> packetFilter
    void notifyListener(com.avos.smack.packet.Packet) -> notifyListener
com.avos.smack.ConnectionConfiguration -> com.avos.smack.ConnectionConfiguration:
    java.lang.String serviceName -> serviceName
    java.lang.String host -> host
    int port -> port
    java.util.List hostAddresses -> hostAddresses
    java.lang.String truststorePath -> truststorePath
    java.lang.String truststoreType -> truststoreType
    java.lang.String truststorePassword -> truststorePassword
    java.lang.String keystorePath -> keystorePath
    java.lang.String keystoreType -> keystoreType
    java.lang.String pkcs11Library -> pkcs11Library
    boolean verifyChainEnabled -> verifyChainEnabled
    boolean verifyRootCAEnabled -> verifyRootCAEnabled
    boolean selfSignedCertificateEnabled -> selfSignedCertificateEnabled
    boolean expiredCertificatesCheckEnabled -> expiredCertificatesCheckEnabled
    boolean notMatchingDomainCheckEnabled -> notMatchingDomainCheckEnabled
    boolean isRosterVersioningAvailable -> isRosterVersioningAvailable
    javax.net.ssl.SSLContext customSSLContext -> customSSLContext
    boolean compressionEnabled -> compressionEnabled
    boolean saslAuthenticationEnabled -> saslAuthenticationEnabled
    com.avos.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    boolean debuggerEnabled -> debuggerEnabled
    boolean reconnectionAllowed -> reconnectionAllowed
    javax.net.SocketFactory socketFactory -> socketFactory
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String resource -> resource
    boolean sendPresence -> sendPresence
    boolean rosterLoadedAtLogin -> rosterLoadedAtLogin
    com.avos.smack.ConnectionConfiguration$SecurityMode securityMode -> securityMode
    com.avos.smack.proxy.ProxyInfo proxy -> proxy
    void init(java.lang.String,com.avos.smack.proxy.ProxyInfo) -> init
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    void setUsedHostAddress(com.avos.smack.util.dns.HostAddress) -> setUsedHostAddress
    com.avos.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> getSecurityMode
    void setSecurityMode(com.avos.smack.ConnectionConfiguration$SecurityMode) -> setSecurityMode
    java.lang.String getTruststorePath() -> getTruststorePath
    void setTruststorePath(java.lang.String) -> setTruststorePath
    java.lang.String getTruststoreType() -> getTruststoreType
    void setTruststoreType(java.lang.String) -> setTruststoreType
    java.lang.String getTruststorePassword() -> getTruststorePassword
    void setTruststorePassword(java.lang.String) -> setTruststorePassword
    java.lang.String getKeystorePath() -> getKeystorePath
    void setKeystorePath(java.lang.String) -> setKeystorePath
    java.lang.String getKeystoreType() -> getKeystoreType
    void setKeystoreType(java.lang.String) -> setKeystoreType
    java.lang.String getPKCS11Library() -> getPKCS11Library
    void setPKCS11Library(java.lang.String) -> setPKCS11Library
    boolean isVerifyChainEnabled() -> isVerifyChainEnabled
    void setVerifyChainEnabled(boolean) -> setVerifyChainEnabled
    boolean isVerifyRootCAEnabled() -> isVerifyRootCAEnabled
    void setVerifyRootCAEnabled(boolean) -> setVerifyRootCAEnabled
    boolean isSelfSignedCertificateEnabled() -> isSelfSignedCertificateEnabled
    void setSelfSignedCertificateEnabled(boolean) -> setSelfSignedCertificateEnabled
    boolean isExpiredCertificatesCheckEnabled() -> isExpiredCertificatesCheckEnabled
    void setExpiredCertificatesCheckEnabled(boolean) -> setExpiredCertificatesCheckEnabled
    boolean isNotMatchingDomainCheckEnabled() -> isNotMatchingDomainCheckEnabled
    void setNotMatchingDomainCheckEnabled(boolean) -> setNotMatchingDomainCheckEnabled
    javax.net.ssl.SSLContext getCustomSSLContext() -> getCustomSSLContext
    void setCustomSSLContext(javax.net.ssl.SSLContext) -> setCustomSSLContext
    boolean isCompressionEnabled() -> isCompressionEnabled
    void setCompressionEnabled(boolean) -> setCompressionEnabled
    boolean isSASLAuthenticationEnabled() -> isSASLAuthenticationEnabled
    void setSASLAuthenticationEnabled(boolean) -> setSASLAuthenticationEnabled
    boolean isDebuggerEnabled() -> isDebuggerEnabled
    void setDebuggerEnabled(boolean) -> setDebuggerEnabled
    void setReconnectionAllowed(boolean) -> setReconnectionAllowed
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setSendPresence(boolean) -> setSendPresence
    boolean isRosterLoadedAtLogin() -> isRosterLoadedAtLogin
    void setRosterLoadedAtLogin(boolean) -> setRosterLoadedAtLogin
    com.avos.security.auth.callback.CallbackHandler getCallbackHandler() -> getCallbackHandler
    void setCallbackHandler(com.avos.security.auth.callback.CallbackHandler) -> setCallbackHandler
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.util.List getHostAddresses() -> getHostAddresses
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getResource() -> getResource
    boolean isRosterVersioningAvailable() -> isRosterVersioningAvailable
    void setRosterVersioningAvailable(boolean) -> setRosterVersioningAvailable
    boolean isSendPresence() -> isSendPresence
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> setLoginInfo
    void initHostAddresses(java.lang.String,int) -> initHostAddresses
com.avos.smack.ConnectionConfiguration$SecurityMode -> com.avos.smack.ConnectionConfiguration$SecurityMode:
    com.avos.smack.ConnectionConfiguration$SecurityMode required -> required
    com.avos.smack.ConnectionConfiguration$SecurityMode enabled -> enabled
    com.avos.smack.ConnectionConfiguration$SecurityMode disabled -> disabled
    com.avos.smack.ConnectionConfiguration$SecurityMode[] $VALUES -> $VALUES
    com.avos.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    com.avos.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
com.avos.smack.ConnectionCreationListener -> com.avos.smack.ConnectionCreationListener:
    void connectionCreated(com.avos.smack.Connection) -> connectionCreated
com.avos.smack.ConnectionListener -> com.avos.smack.ConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
com.avos.smack.OpenTrustManager -> com.avos.smack.OpenTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.avos.smack.PacketCollector -> com.avos.smack.PacketCollector:
    com.avos.smack.filter.PacketFilter packetFilter -> packetFilter
    java.util.concurrent.ArrayBlockingQueue resultQueue -> resultQueue
    com.avos.smack.Connection connection -> connection
    boolean cancelled -> cancelled
    void cancel() -> cancel
    com.avos.smack.filter.PacketFilter getPacketFilter() -> getPacketFilter
    com.avos.smack.packet.Packet pollResult() -> pollResult
    com.avos.smack.packet.Packet nextResult() -> nextResult
    com.avos.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(com.avos.smack.packet.Packet) -> processPacket
com.avos.smack.PacketInterceptor -> com.avos.smack.PacketInterceptor:
    void interceptPacket(com.avos.smack.packet.Packet) -> interceptPacket
com.avos.smack.PacketListener -> com.avos.smack.PacketListener:
    void processPacket(com.avos.smack.packet.Packet) -> processPacket
com.avos.smack.PacketReader -> com.avos.smack.PacketReader:
    java.lang.Thread readerThread -> readerThread
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    com.avos.smack.XMPPConnection connection -> connection
    org.xmlpull.v1.XmlPullParser parser -> parser
    boolean done -> done
    java.lang.String connectionID -> connectionID
    void init() -> init
    void startup() -> startup
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    void resetParser() -> resetParser
    void parsePackets(java.lang.Thread) -> parsePackets
    void releaseConnectionIDLock() -> releaseConnectionIDLock
    void processPacket(com.avos.smack.packet.Packet) -> processPacket
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
    void access$000(com.avos.smack.PacketReader,java.lang.Thread) -> access$000
    com.avos.smack.XMPPConnection access$100(com.avos.smack.PacketReader) -> access$100
com.avos.smack.PacketReader$1 -> com.avos.smack.PacketReader$1:
    com.avos.smack.PacketReader this$0 -> this$0
    void run() -> run
com.avos.smack.PacketReader$2 -> com.avos.smack.PacketReader$2:
    com.avos.smack.PacketReader this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.avos.smack.PacketReader$ListenerNotification -> com.avos.smack.PacketReader$ListenerNotification:
    com.avos.smack.packet.Packet packet -> packet
    com.avos.smack.PacketReader this$0 -> this$0
    void run() -> run
com.avos.smack.PacketWriter -> com.avos.smack.PacketWriter:
    java.lang.Thread writerThread -> writerThread
    java.lang.Thread keepAliveThread -> keepAliveThread
    java.io.Writer writer -> writer
    com.avos.smack.XMPPConnection connection -> connection
    java.util.concurrent.BlockingQueue queue -> queue
    boolean done -> done
    void init() -> init
    void sendPacket(com.avos.smack.packet.Packet) -> sendPacket
    void startup() -> startup
    void setWriter(java.io.Writer) -> setWriter
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    com.avos.smack.packet.Packet nextPacket() -> nextPacket
    void writePackets(java.lang.Thread) -> writePackets
    void openStream() -> openStream
    void access$000(com.avos.smack.PacketWriter,java.lang.Thread) -> access$000
com.avos.smack.PacketWriter$1 -> com.avos.smack.PacketWriter$1:
    com.avos.smack.PacketWriter this$0 -> this$0
    void run() -> run
com.avos.smack.ReconnectionManager -> com.avos.smack.ReconnectionManager:
    com.avos.smack.Connection connection -> connection
    java.lang.Thread reconnectionThread -> reconnectionThread
    int randomBase -> randomBase
    boolean done -> done
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void reconnect() -> reconnect
    void notifyReconnectionFailed(java.lang.Exception) -> notifyReconnectionFailed
    void notifyAttemptToReconnectIn(int) -> notifyAttemptToReconnectIn
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    int access$100(com.avos.smack.ReconnectionManager) -> access$100
    boolean access$200(com.avos.smack.ReconnectionManager) -> access$200
    com.avos.smack.Connection access$300(com.avos.smack.ReconnectionManager) -> access$300
com.avos.smack.ReconnectionManager$1 -> com.avos.smack.ReconnectionManager$1:
    void connectionCreated(com.avos.smack.Connection) -> connectionCreated
com.avos.smack.ReconnectionManager$2 -> com.avos.smack.ReconnectionManager$2:
    int attempts -> attempts
    com.avos.smack.ReconnectionManager this$0 -> this$0
    int timeDelay() -> timeDelay
    void run() -> run
com.avos.smack.SASLAuthentication -> com.avos.smack.SASLAuthentication:
    java.util.Map implementedMechanisms -> implementedMechanisms
    java.util.List mechanismsPreferences -> mechanismsPreferences
    com.avos.smack.Connection connection -> connection
    java.util.Collection serverMechanisms -> serverMechanisms
    com.avos.smack.sasl.SASLMechanism currentMechanism -> currentMechanism
    boolean saslNegotiated -> saslNegotiated
    boolean saslFailed -> saslFailed
    boolean resourceBinded -> resourceBinded
    boolean sessionSupported -> sessionSupported
    java.lang.String errorCondition -> errorCondition
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> registerSASLMechanism
    void unregisterSASLMechanism(java.lang.String) -> unregisterSASLMechanism
    void supportSASLMechanism(java.lang.String) -> supportSASLMechanism
    void supportSASLMechanism(java.lang.String,int) -> supportSASLMechanism
    void unsupportSASLMechanism(java.lang.String) -> unsupportSASLMechanism
    java.util.List getRegisterSASLMechanisms() -> getRegisterSASLMechanisms
    boolean hasAnonymousAuthentication() -> hasAnonymousAuthentication
    boolean hasNonAnonymousAuthentication() -> hasNonAnonymousAuthentication
    java.lang.String authenticate(java.lang.String,java.lang.String,com.avos.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> bindResourceAndEstablishSession
    void setAvailableSASLMethods(java.util.Collection) -> setAvailableSASLMethods
    boolean isAuthenticated() -> isAuthenticated
    void challengeReceived(java.lang.String) -> challengeReceived
    void authenticated() -> authenticated
    void authenticationFailed() -> authenticationFailed
    void authenticationFailed(java.lang.String) -> authenticationFailed
    void bindingRequired() -> bindingRequired
    void send(com.avos.smack.packet.Packet) -> send
    void sessionsSupported() -> sessionsSupported
    void init() -> init
com.avos.smack.ServerTrustManager -> com.avos.smack.ServerTrustManager:
    java.util.regex.Pattern cnPattern -> cnPattern
    com.avos.smack.ConnectionConfiguration configuration -> configuration
    java.lang.String server -> server
    java.security.KeyStore trustStore -> trustStore
    java.util.Map stores -> stores
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> getPeerIdentity
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> getSubjectAlternativeNames
com.avos.smack.ServerTrustManager$KeyStoreOptions -> com.avos.smack.ServerTrustManager$KeyStoreOptions:
    java.lang.String type -> type
    java.lang.String path -> path
    java.lang.String password -> password
    java.lang.String getType() -> getType
    java.lang.String getPath() -> getPath
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.avos.smack.SmackConfiguration -> com.avos.smack.SmackConfiguration:
    java.lang.String SMACK_VERSION -> SMACK_VERSION
    int packetReplyTimeout -> packetReplyTimeout
    java.util.Vector defaultMechs -> defaultMechs
    boolean localSocks5ProxyEnabled -> localSocks5ProxyEnabled
    int localSocks5ProxyPort -> localSocks5ProxyPort
    int packetCollectorSize -> packetCollectorSize
    int defaultPingInterval -> defaultPingInterval
    com.avos.smack.parsing.ParsingExceptionCallback defaultCallback -> defaultCallback
    boolean autoEnableEntityCaps -> autoEnableEntityCaps
    java.lang.String getVersion() -> getVersion
    int getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(int) -> setPacketReplyTimeout
    int getPacketCollectorSize() -> getPacketCollectorSize
    void setPacketCollectorSize(int) -> setPacketCollectorSize
    void addSaslMech(java.lang.String) -> addSaslMech
    void addSaslMechs(java.util.Collection) -> addSaslMechs
    void removeSaslMech(java.lang.String) -> removeSaslMech
    void removeSaslMechs(java.util.Collection) -> removeSaslMechs
    java.util.List getSaslMechs() -> getSaslMechs
    boolean isLocalSocks5ProxyEnabled() -> isLocalSocks5ProxyEnabled
    void setLocalSocks5ProxyEnabled(boolean) -> setLocalSocks5ProxyEnabled
    int getLocalSocks5ProxyPort() -> getLocalSocks5ProxyPort
    void setLocalSocks5ProxyPort(int) -> setLocalSocks5ProxyPort
    int getDefaultPingInterval() -> getDefaultPingInterval
    void setDefaultPingInterval(int) -> setDefaultPingInterval
    boolean autoEnableEntityCaps() -> autoEnableEntityCaps
    void setAutoEnableEntityCaps(boolean) -> setAutoEnableEntityCaps
    void setDefaultParsingExceptionCallback(com.avos.smack.parsing.ParsingExceptionCallback) -> setDefaultParsingExceptionCallback
    com.avos.smack.parsing.ParsingExceptionCallback getDefaultParsingExceptionCallback() -> getDefaultParsingExceptionCallback
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> parseClassToLoad
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> parseIntProperty
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
com.avos.smack.UserAuthentication -> com.avos.smack.UserAuthentication:
    java.lang.String authenticate(java.lang.String,java.lang.String,com.avos.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
com.avos.smack.XMPPConnection -> com.avos.smack.XMPPConnection:
    java.net.Socket socket -> socket
    java.lang.String connectionID -> connectionID
    java.lang.String user -> user
    boolean connected -> connected
    boolean socketClosed -> socketClosed
    boolean authenticated -> authenticated
    boolean wasAuthenticated -> wasAuthenticated
    boolean anonymous -> anonymous
    boolean usingTLS -> usingTLS
    com.avos.smack.parsing.ParsingExceptionCallback parsingExceptionCallback -> parsingExceptionCallback
    com.avos.smack.PacketWriter packetWriter -> packetWriter
    com.avos.smack.PacketReader packetReader -> packetReader
    java.util.Collection compressionMethods -> compressionMethods
    boolean serverAckdCompression -> serverAckdCompression
    java.lang.String getConnectionID() -> getConnectionID
    java.lang.String getUser() -> getUser
    void setParsingExceptionCallback(com.avos.smack.parsing.ParsingExceptionCallback) -> setParsingExceptionCallback
    com.avos.smack.parsing.ParsingExceptionCallback getParsingExceptionCallback() -> getParsingExceptionCallback
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isSocketClosed() -> isSocketClosed
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void shutdown(com.avos.smack.packet.Presence) -> shutdown
    void disconnect(com.avos.smack.packet.Presence) -> disconnect
    void sendPacket(com.avos.smack.packet.Packet) -> sendPacket
    void addPacketWriterInterceptor(com.avos.smack.PacketInterceptor,com.avos.smack.filter.PacketFilter) -> addPacketWriterInterceptor
    void removePacketWriterInterceptor(com.avos.smack.PacketInterceptor) -> removePacketWriterInterceptor
    void addPacketWriterListener(com.avos.smack.PacketListener,com.avos.smack.filter.PacketFilter) -> addPacketWriterListener
    void removePacketWriterListener(com.avos.smack.PacketListener) -> removePacketWriterListener
    void connectUsingConfiguration(com.avos.smack.ConnectionConfiguration) -> connectUsingConfiguration
    void initConnection() -> initConnection
    void initReaderAndWriter() -> initReaderAndWriter
    boolean isUsingTLS() -> isUsingTLS
    void startTLSReceived(boolean) -> startTLSReceived
    void proceedTLSReceived() -> proceedTLSReceived
    void setAvailableCompressionMethods(java.util.Collection) -> setAvailableCompressionMethods
    com.avos.smack.compression.XMPPInputOutputStream maybeGetCompressionHandler() -> maybeGetCompressionHandler
    boolean isUsingCompression() -> isUsingCompression
    boolean useCompression() -> useCompression
    void requestStreamCompression(java.lang.String) -> requestStreamCompression
    void startStreamCompression() -> startStreamCompression
    void streamCompressionDenied() -> streamCompressionDenied
    void connect() -> connect
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void notifyReconnection() -> notifyReconnection
com.avos.smack.XMPPException -> com.avos.smack.XMPPException:
    com.avos.smack.packet.StreamError streamError -> streamError
    com.avos.smack.packet.XMPPError error -> error
    java.lang.Throwable wrappedThrowable -> wrappedThrowable
    com.avos.smack.packet.XMPPError getXMPPError() -> getXMPPError
    com.avos.smack.packet.StreamError getStreamError() -> getStreamError
    java.lang.Throwable getWrappedThrowable() -> getWrappedThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
com.avos.smack.compression.XMPPInputOutputStream -> com.avos.smack.compression.XMPPInputOutputStream:
    java.lang.String compressionMethod -> compressionMethod
    java.lang.String getCompressionMethod() -> getCompressionMethod
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
com.avos.smack.filter.AndFilter -> com.avos.smack.filter.AndFilter:
    java.util.List filters -> filters
    void addFilter(com.avos.smack.filter.PacketFilter) -> addFilter
    boolean accept(com.avos.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
com.avos.smack.filter.MessageTypeFilter -> com.avos.smack.filter.MessageTypeFilter:
    com.avos.smack.packet.Message$Type type -> type
    boolean accept(com.avos.smack.packet.Packet) -> accept
com.avos.smack.filter.NotFilter -> com.avos.smack.filter.NotFilter:
    com.avos.smack.filter.PacketFilter filter -> filter
    boolean accept(com.avos.smack.packet.Packet) -> accept
com.avos.smack.filter.OrFilter -> com.avos.smack.filter.OrFilter:
    int size -> size
    com.avos.smack.filter.PacketFilter[] filters -> filters
    void addFilter(com.avos.smack.filter.PacketFilter) -> addFilter
    boolean accept(com.avos.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
com.avos.smack.filter.PacketExtensionFilter -> com.avos.smack.filter.PacketExtensionFilter:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    boolean accept(com.avos.smack.packet.Packet) -> accept
com.avos.smack.filter.PacketFilter -> com.avos.smack.filter.PacketFilter:
    boolean accept(com.avos.smack.packet.Packet) -> accept
com.avos.smack.filter.PacketIDFilter -> com.avos.smack.filter.PacketIDFilter:
    java.lang.String packetID -> packetID
    boolean accept(com.avos.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
com.avos.smack.filter.PacketTypeFilter -> com.avos.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> packetType
    boolean accept(com.avos.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
com.avos.smack.packet.Authentication -> com.avos.smack.packet.Authentication:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String digest -> digest
    java.lang.String resource -> resource
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String,java.lang.String) -> setDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.packet.Bind -> com.avos.smack.packet.Bind:
    java.lang.String resource -> resource
    java.lang.String jid -> jid
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.packet.DefaultPacketExtension -> com.avos.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Collection getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
com.avos.smack.packet.IQ -> com.avos.smack.packet.IQ:
    com.avos.smack.packet.IQ$Type type -> type
    com.avos.smack.packet.IQ$Type getType() -> getType
    void setType(com.avos.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    com.avos.smack.packet.IQ createResultIQ(com.avos.smack.packet.IQ) -> createResultIQ
    com.avos.smack.packet.IQ createErrorResponse(com.avos.smack.packet.IQ,com.avos.smack.packet.XMPPError) -> createErrorResponse
com.avos.smack.packet.IQ$1 -> com.avos.smack.packet.IQ$1:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.packet.IQ$2 -> com.avos.smack.packet.IQ$2:
    com.avos.smack.packet.IQ val$request -> val$request
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.packet.IQ$Type -> com.avos.smack.packet.IQ$Type:
    com.avos.smack.packet.IQ$Type GET -> GET
    com.avos.smack.packet.IQ$Type SET -> SET
    com.avos.smack.packet.IQ$Type RESULT -> RESULT
    com.avos.smack.packet.IQ$Type ERROR -> ERROR
    java.lang.String value -> value
    com.avos.smack.packet.IQ$Type fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
com.avos.smack.packet.Message -> com.avos.smack.packet.Message:
    com.avos.smack.packet.Message$Type type -> type
    java.lang.String thread -> thread
    java.lang.String language -> language
    java.util.Set subjects -> subjects
    java.util.Set bodies -> bodies
    com.avos.smack.packet.Message$Type getType() -> getType
    void setType(com.avos.smack.packet.Message$Type) -> setType
    java.lang.String getSubject() -> getSubject
    java.lang.String getSubject(java.lang.String) -> getSubject
    com.avos.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> getMessageSubject
    java.util.Collection getSubjects() -> getSubjects
    void setSubject(java.lang.String) -> setSubject
    com.avos.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> addSubject
    boolean removeSubject(java.lang.String) -> removeSubject
    boolean removeSubject(com.avos.smack.packet.Message$Subject) -> removeSubject
    java.util.Collection getSubjectLanguages() -> getSubjectLanguages
    java.lang.String getBody() -> getBody
    java.lang.String getBody(java.lang.String) -> getBody
    com.avos.smack.packet.Message$Body getMessageBody(java.lang.String) -> getMessageBody
    java.util.Collection getBodies() -> getBodies
    void setBody(java.lang.String) -> setBody
    com.avos.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> addBody
    boolean removeBody(java.lang.String) -> removeBody
    boolean removeBody(com.avos.smack.packet.Message$Body) -> removeBody
    java.util.Collection getBodyLanguages() -> getBodyLanguages
    java.lang.String getThread() -> getThread
    void setThread(java.lang.String) -> setThread
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String determineLanguage(java.lang.String) -> determineLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.avos.smack.packet.Message$1 -> com.avos.smack.packet.Message$1:
com.avos.smack.packet.Message$Body -> com.avos.smack.packet.Message$Body:
    java.lang.String message -> message
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getMessage() -> getMessage
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$300(com.avos.smack.packet.Message$Body) -> access$300
    java.lang.String access$400(com.avos.smack.packet.Message$Body) -> access$400
com.avos.smack.packet.Message$Subject -> com.avos.smack.packet.Message$Subject:
    java.lang.String subject -> subject
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSubject() -> getSubject
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$000(com.avos.smack.packet.Message$Subject) -> access$000
    java.lang.String access$100(com.avos.smack.packet.Message$Subject) -> access$100
com.avos.smack.packet.Message$Type -> com.avos.smack.packet.Message$Type:
    com.avos.smack.packet.Message$Type normal -> normal
    com.avos.smack.packet.Message$Type chat -> chat
    com.avos.smack.packet.Message$Type groupchat -> groupchat
    com.avos.smack.packet.Message$Type headline -> headline
    com.avos.smack.packet.Message$Type error -> error
    com.avos.smack.packet.Message$Type[] $VALUES -> $VALUES
    com.avos.smack.packet.Message$Type[] values() -> values
    com.avos.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
    com.avos.smack.packet.Message$Type fromString(java.lang.String) -> fromString
com.avos.smack.packet.Packet -> com.avos.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    com.avos.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    com.avos.smack.packet.XMPPError getError() -> getError
    void setError(com.avos.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    com.avos.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    com.avos.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(com.avos.smack.packet.PacketExtension) -> addExtension
    void addExtensions(java.util.Collection) -> addExtensions
    void removeExtension(com.avos.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.avos.smack.packet.PacketExtension -> com.avos.smack.packet.PacketExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.avos.smack.packet.Presence -> com.avos.smack.packet.Presence:
    com.avos.smack.packet.Presence$Type type -> type
    java.lang.String status -> status
    int priority -> priority
    com.avos.smack.packet.Presence$Mode mode -> mode
    java.lang.String language -> language
    boolean isAvailable() -> isAvailable
    boolean isAway() -> isAway
    com.avos.smack.packet.Presence$Type getType() -> getType
    void setType(com.avos.smack.packet.Presence$Type) -> setType
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    com.avos.smack.packet.Presence$Mode getMode() -> getMode
    void setMode(com.avos.smack.packet.Presence$Mode) -> setMode
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
com.avos.smack.packet.Presence$Mode -> com.avos.smack.packet.Presence$Mode:
    com.avos.smack.packet.Presence$Mode chat -> chat
    com.avos.smack.packet.Presence$Mode available -> available
    com.avos.smack.packet.Presence$Mode away -> away
    com.avos.smack.packet.Presence$Mode xa -> xa
    com.avos.smack.packet.Presence$Mode dnd -> dnd
    com.avos.smack.packet.Presence$Mode[] $VALUES -> $VALUES
    com.avos.smack.packet.Presence$Mode[] values() -> values
    com.avos.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
com.avos.smack.packet.Presence$Type -> com.avos.smack.packet.Presence$Type:
    com.avos.smack.packet.Presence$Type available -> available
    com.avos.smack.packet.Presence$Type unavailable -> unavailable
    com.avos.smack.packet.Presence$Type subscribe -> subscribe
    com.avos.smack.packet.Presence$Type subscribed -> subscribed
    com.avos.smack.packet.Presence$Type unsubscribe -> unsubscribe
    com.avos.smack.packet.Presence$Type unsubscribed -> unsubscribed
    com.avos.smack.packet.Presence$Type error -> error
    com.avos.smack.packet.Presence$Type[] $VALUES -> $VALUES
    com.avos.smack.packet.Presence$Type[] values() -> values
    com.avos.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
com.avos.smack.packet.Session -> com.avos.smack.packet.Session:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.packet.StreamError -> com.avos.smack.packet.StreamError:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toString() -> toString
com.avos.smack.packet.XMPPError -> com.avos.smack.packet.XMPPError:
    int code -> code
    com.avos.smack.packet.XMPPError$Type type -> type
    java.lang.String condition -> condition
    java.lang.String message -> message
    java.util.List applicationExtensions -> applicationExtensions
    void init(com.avos.smack.packet.XMPPError$Condition) -> init
    java.lang.String getCondition() -> getCondition
    com.avos.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> getExtensions
    com.avos.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(com.avos.smack.packet.PacketExtension) -> addExtension
    void setExtension(java.util.List) -> setExtension
com.avos.smack.packet.XMPPError$Condition -> com.avos.smack.packet.XMPPError$Condition:
    com.avos.smack.packet.XMPPError$Condition interna_server_error -> interna_server_error
    com.avos.smack.packet.XMPPError$Condition forbidden -> forbidden
    com.avos.smack.packet.XMPPError$Condition bad_request -> bad_request
    com.avos.smack.packet.XMPPError$Condition conflict -> conflict
    com.avos.smack.packet.XMPPError$Condition feature_not_implemented -> feature_not_implemented
    com.avos.smack.packet.XMPPError$Condition gone -> gone
    com.avos.smack.packet.XMPPError$Condition item_not_found -> item_not_found
    com.avos.smack.packet.XMPPError$Condition jid_malformed -> jid_malformed
    com.avos.smack.packet.XMPPError$Condition no_acceptable -> no_acceptable
    com.avos.smack.packet.XMPPError$Condition not_allowed -> not_allowed
    com.avos.smack.packet.XMPPError$Condition not_authorized -> not_authorized
    com.avos.smack.packet.XMPPError$Condition payment_required -> payment_required
    com.avos.smack.packet.XMPPError$Condition recipient_unavailable -> recipient_unavailable
    com.avos.smack.packet.XMPPError$Condition redirect -> redirect
    com.avos.smack.packet.XMPPError$Condition registration_required -> registration_required
    com.avos.smack.packet.XMPPError$Condition remote_server_error -> remote_server_error
    com.avos.smack.packet.XMPPError$Condition remote_server_not_found -> remote_server_not_found
    com.avos.smack.packet.XMPPError$Condition remote_server_timeout -> remote_server_timeout
    com.avos.smack.packet.XMPPError$Condition resource_constraint -> resource_constraint
    com.avos.smack.packet.XMPPError$Condition service_unavailable -> service_unavailable
    com.avos.smack.packet.XMPPError$Condition subscription_required -> subscription_required
    com.avos.smack.packet.XMPPError$Condition undefined_condition -> undefined_condition
    com.avos.smack.packet.XMPPError$Condition unexpected_request -> unexpected_request
    com.avos.smack.packet.XMPPError$Condition request_timeout -> request_timeout
    java.lang.String value -> value
    java.lang.String toString() -> toString
    java.lang.String access$000(com.avos.smack.packet.XMPPError$Condition) -> access$000
com.avos.smack.packet.XMPPError$ErrorSpecification -> com.avos.smack.packet.XMPPError$ErrorSpecification:
    int code -> code
    com.avos.smack.packet.XMPPError$Type type -> type
    com.avos.smack.packet.XMPPError$Condition condition -> condition
    java.util.Map instances -> instances
    java.util.Map errorSpecifications() -> errorSpecifications
    com.avos.smack.packet.XMPPError$ErrorSpecification specFor(com.avos.smack.packet.XMPPError$Condition) -> specFor
    com.avos.smack.packet.XMPPError$Condition getCondition() -> getCondition
    com.avos.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
com.avos.smack.packet.XMPPError$Type -> com.avos.smack.packet.XMPPError$Type:
    com.avos.smack.packet.XMPPError$Type WAIT -> WAIT
    com.avos.smack.packet.XMPPError$Type CANCEL -> CANCEL
    com.avos.smack.packet.XMPPError$Type MODIFY -> MODIFY
    com.avos.smack.packet.XMPPError$Type AUTH -> AUTH
    com.avos.smack.packet.XMPPError$Type CONTINUE -> CONTINUE
    com.avos.smack.packet.XMPPError$Type[] $VALUES -> $VALUES
    com.avos.smack.packet.XMPPError$Type[] values() -> values
    com.avos.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
com.avos.smack.parsing.LogException -> com.avos.smack.parsing.LogException:
    void messageParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedMessage) -> messageParsingException
    void iqParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedIQ) -> iqParsingException
    void presenceParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedPresence) -> presenceParsingException
com.avos.smack.parsing.ParsingExceptionCallback -> com.avos.smack.parsing.ParsingExceptionCallback:
    void messageParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedMessage) -> messageParsingException
    void iqParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedIQ) -> iqParsingException
    void presenceParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedPresence) -> presenceParsingException
com.avos.smack.parsing.ThrowException -> com.avos.smack.parsing.ThrowException:
    void messageParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedMessage) -> messageParsingException
    void iqParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedIQ) -> iqParsingException
    void presenceParsingException(java.lang.Exception,com.avos.smack.parsing.UnparsedPresence) -> presenceParsingException
com.avos.smack.parsing.UnparsedIQ -> com.avos.smack.parsing.UnparsedIQ:
    java.lang.String content -> content
    java.lang.Exception e -> e
    java.lang.Exception getException() -> getException
    java.lang.String getContent() -> getContent
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.parsing.UnparsedMessage -> com.avos.smack.parsing.UnparsedMessage:
    java.lang.String content -> content
    java.lang.Exception e -> e
    java.lang.Exception getException() -> getException
    java.lang.String getContent() -> getContent
com.avos.smack.parsing.UnparsedPresence -> com.avos.smack.parsing.UnparsedPresence:
    java.lang.String content -> content
    java.lang.Exception e -> e
    java.lang.Exception getException() -> getException
    java.lang.String getContent() -> getContent
com.avos.smack.ping.PingFailedListener -> com.avos.smack.ping.PingFailedListener:
    void pingFailed() -> pingFailed
com.avos.smack.ping.PingManager -> com.avos.smack.ping.PingManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.util.Map instances -> instances
    java.util.concurrent.ScheduledExecutorService periodicPingExecutorService -> periodicPingExecutorService
    com.avos.smack.Connection connection -> connection
    int pingInterval -> pingInterval
    java.util.Set pingFailedListeners -> pingFailedListeners
    java.util.concurrent.ScheduledFuture periodicPingTask -> periodicPingTask
    long lastSuccessfulPingByTask -> lastSuccessfulPingByTask
    long pingMinDelta -> pingMinDelta
    long lastPingStamp -> lastPingStamp
    long lastSuccessfulManualPing -> lastSuccessfulManualPing
    void init() -> init
    com.avos.smack.ping.PingManager getInstanceFor(com.avos.smack.Connection) -> getInstanceFor
    void setPingIntervall(int) -> setPingIntervall
    int getPingIntervall() -> getPingIntervall
    void registerPingFailedListener(com.avos.smack.ping.PingFailedListener) -> registerPingFailedListener
    void unregisterPingFailedListener(com.avos.smack.ping.PingFailedListener) -> unregisterPingFailedListener
    void disablePingFloodProtection() -> disablePingFloodProtection
    void setPingMinimumInterval(long) -> setPingMinimumInterval
    long getPingMinimumInterval() -> getPingMinimumInterval
    com.avos.smack.packet.IQ ping(java.lang.String,long) -> ping
    com.avos.smack.packet.IQ ping(java.lang.String) -> ping
    boolean pingEntity(java.lang.String,long) -> pingEntity
    boolean pingEntity(java.lang.String) -> pingEntity
    boolean pingMyServer(long) -> pingMyServer
    boolean pingMyServer() -> pingMyServer
    long getLastSuccessfulPing() -> getLastSuccessfulPing
    java.util.Set getPingFailedListeners() -> getPingFailedListeners
    void maybeSchedulePingServerTask() -> maybeSchedulePingServerTask
    void maybeStopPingServerTask() -> maybeStopPingServerTask
    void pongReceived() -> pongReceived
    long access$100(com.avos.smack.ping.PingManager) -> access$100
    long access$200(com.avos.smack.ping.PingManager) -> access$200
    long access$202(com.avos.smack.ping.PingManager,long) -> access$202
    com.avos.smack.Connection access$300(com.avos.smack.ping.PingManager) -> access$300
    void access$400(com.avos.smack.ping.PingManager) -> access$400
com.avos.smack.ping.PingManager$1 -> com.avos.smack.ping.PingManager$1:
    void connectionCreated(com.avos.smack.Connection) -> connectionCreated
com.avos.smack.ping.PingManager$2 -> com.avos.smack.ping.PingManager$2:
    com.avos.smack.ping.PingManager this$0 -> this$0
    void processPacket(com.avos.smack.packet.Packet) -> processPacket
com.avos.smack.ping.PingManager$3 -> com.avos.smack.ping.PingManager$3:
    com.avos.smack.ping.PingManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
com.avos.smack.ping.PingProvider -> com.avos.smack.ping.PingProvider:
    com.avos.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
com.avos.smack.ping.ServerPingTask -> com.avos.smack.ping.ServerPingTask:
    java.lang.ref.WeakReference weakConnection -> weakConnection
    int delta -> delta
    int tries -> tries
    void run() -> run
com.avos.smack.ping.packet.Ping -> com.avos.smack.ping.packet.Ping:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.ping.packet.Pong -> com.avos.smack.ping.packet.Pong:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.provider.IQProvider -> com.avos.smack.provider.IQProvider:
    com.avos.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
com.avos.smack.provider.PacketExtensionProvider -> com.avos.smack.provider.PacketExtensionProvider:
    com.avos.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
com.avos.smack.provider.ProviderManager -> com.avos.smack.provider.ProviderManager:
    com.avos.smack.provider.ProviderManager instance -> instance
    java.util.Map extensionProviders -> extensionProviders
    java.util.Map iqProviders -> iqProviders
    com.avos.smack.provider.ProviderManager getInstance() -> getInstance
    void setInstance(com.avos.smack.provider.ProviderManager) -> setInstance
    void initialize() -> initialize
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> getIQProvider
    java.util.Collection getIQProviders() -> getIQProviders
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> addIQProvider
    void removeIQProvider(java.lang.String,java.lang.String) -> removeIQProvider
    void removeExtensionProvider(java.lang.String,java.lang.String) -> removeExtensionProvider
    java.util.Collection getExtensionProviders() -> getExtensionProviders
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
com.avos.smack.proxy.DirectSocketFactory -> com.avos.smack.proxy.DirectSocketFactory:
    int roundrobin -> roundrobin
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
com.avos.smack.proxy.ProxyException -> com.avos.smack.proxy.ProxyException:
com.avos.smack.proxy.ProxyInfo -> com.avos.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> proxyAddress
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    com.avos.smack.proxy.ProxyInfo$ProxyType proxyType -> proxyType
    com.avos.smack.proxy.ProxyInfo forHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> forHttpProxy
    com.avos.smack.proxy.ProxyInfo forSocks4Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks4Proxy
    com.avos.smack.proxy.ProxyInfo forSocks5Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks5Proxy
    com.avos.smack.proxy.ProxyInfo forNoProxy() -> forNoProxy
    com.avos.smack.proxy.ProxyInfo forDefaultProxy() -> forDefaultProxy
    com.avos.smack.proxy.ProxyInfo$ProxyType getProxyType() -> getProxyType
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
com.avos.smack.proxy.ProxyInfo$ProxyType -> com.avos.smack.proxy.ProxyInfo$ProxyType:
    com.avos.smack.proxy.ProxyInfo$ProxyType NONE -> NONE
    com.avos.smack.proxy.ProxyInfo$ProxyType HTTP -> HTTP
    com.avos.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> SOCKS4
    com.avos.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> SOCKS5
    com.avos.smack.proxy.ProxyInfo$ProxyType[] $VALUES -> $VALUES
    com.avos.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    com.avos.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
com.avos.smack.sasl.SASLDigestMD5Mechanism -> com.avos.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> getName
com.avos.smack.sasl.SASLExternalMechanism -> com.avos.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> getName
com.avos.smack.sasl.SASLGSSAPIMechanism -> com.avos.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,com.avos.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
com.avos.smack.sasl.SASLMechanism -> com.avos.smack.sasl.SASLMechanism:
    com.avos.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    com.avos.security.sasl.SaslClient sc -> sc
    java.lang.String authenticationId -> authenticationId
    java.lang.String password -> password
    java.lang.String hostname -> hostname
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,com.avos.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
    java.lang.String getName() -> getName
    com.avos.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void handle(com.avos.security.auth.callback.Callback[]) -> handle
com.avos.smack.sasl.SASLMechanism$AuthMechanism -> com.avos.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> name
    java.lang.String authenticationText -> authenticationText
    com.avos.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
com.avos.smack.sasl.SASLMechanism$Challenge -> com.avos.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
com.avos.smack.sasl.SASLMechanism$Failure -> com.avos.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> condition
    java.lang.String getCondition() -> getCondition
    java.lang.String toXML() -> toXML
com.avos.smack.sasl.SASLMechanism$Response -> com.avos.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> authenticationText
    com.avos.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
com.avos.smack.sasl.SASLMechanism$Success -> com.avos.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
com.avos.smack.sasl.SASLPlainMechanism -> com.avos.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> getName
com.avos.smack.util.Base32Encoder -> com.avos.smack.util.Base32Encoder:
    com.avos.smack.util.Base32Encoder instance -> instance
    java.lang.String ALPHABET -> ALPHABET
    com.avos.smack.util.Base32Encoder getInstance() -> getInstance
    java.lang.String decode(java.lang.String) -> decode
    java.lang.String encode(java.lang.String) -> encode
    int lenToPadding(int) -> lenToPadding
    int paddingToLen(int) -> paddingToLen
com.avos.smack.util.Base64 -> com.avos.smack.util.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_BREAK_LINES -> DONT_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    void usage(java.lang.String) -> usage
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    boolean encodeToFile(byte[],java.lang.String) -> encodeToFile
    boolean decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$000(int) -> access$000
    byte[] access$100(int) -> access$100
    byte[] access$200(byte[],int,int,byte[],int,int) -> access$200
    int access$300(byte[],int,byte[],int,int) -> access$300
    byte[] access$400(byte[],byte[],int,int) -> access$400
com.avos.smack.util.Base64$InputStream -> com.avos.smack.util.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
com.avos.smack.util.Base64$OutputStream -> com.avos.smack.util.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
com.avos.smack.util.Base64Encoder -> com.avos.smack.util.Base64Encoder:
    com.avos.smack.util.Base64Encoder instance -> instance
    com.avos.smack.util.Base64Encoder getInstance() -> getInstance
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
com.avos.smack.util.Cache -> com.avos.smack.util.Cache:
    java.util.Map map -> map
    com.avos.smack.util.Cache$LinkedList lastAccessedList -> lastAccessedList
    com.avos.smack.util.Cache$LinkedList ageList -> ageList
    int maxCacheSize -> maxCacheSize
    long maxLifetime -> maxLifetime
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object,boolean) -> remove
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Collection values() -> values
    boolean containsKey(java.lang.Object) -> containsKey
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    void deleteExpiredEntries() -> deleteExpiredEntries
    void cullCache() -> cullCache
com.avos.smack.util.Cache$1 -> com.avos.smack.util.Cache$1:
    java.util.Collection values -> values
    com.avos.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.avos.smack.util.Cache$1$1 -> com.avos.smack.util.Cache$1$1:
    java.util.Iterator it -> it
    com.avos.smack.util.Cache$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.avos.smack.util.Cache$2 -> com.avos.smack.util.Cache$2:
    java.util.Set set -> set
    com.avos.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set access$000(com.avos.smack.util.Cache$2) -> access$000
com.avos.smack.util.Cache$2$1 -> com.avos.smack.util.Cache$2$1:
    java.util.Iterator it -> it
    com.avos.smack.util.Cache$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.avos.smack.util.Cache$2$1$1 -> com.avos.smack.util.Cache$2$1$1:
    com.avos.smack.util.Cache$2$1 this$2 -> this$2
    java.lang.Object setValue(java.lang.Object) -> setValue
com.avos.smack.util.Cache$CacheObject -> com.avos.smack.util.Cache$CacheObject:
    java.lang.Object object -> object
    com.avos.smack.util.Cache$LinkedListNode lastAccessedListNode -> lastAccessedListNode
    com.avos.smack.util.Cache$LinkedListNode ageListNode -> ageListNode
    int readCount -> readCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.avos.smack.util.Cache$LinkedList -> com.avos.smack.util.Cache$LinkedList:
    com.avos.smack.util.Cache$LinkedListNode head -> head
    com.avos.smack.util.Cache$LinkedListNode getFirst() -> getFirst
    com.avos.smack.util.Cache$LinkedListNode getLast() -> getLast
    com.avos.smack.util.Cache$LinkedListNode addFirst(com.avos.smack.util.Cache$LinkedListNode) -> addFirst
    com.avos.smack.util.Cache$LinkedListNode addFirst(java.lang.Object) -> addFirst
    com.avos.smack.util.Cache$LinkedListNode addLast(java.lang.Object) -> addLast
    void clear() -> clear
    java.lang.String toString() -> toString
com.avos.smack.util.Cache$LinkedListNode -> com.avos.smack.util.Cache$LinkedListNode:
    com.avos.smack.util.Cache$LinkedListNode previous -> previous
    com.avos.smack.util.Cache$LinkedListNode next -> next
    java.lang.Object object -> object
    long timestamp -> timestamp
    void remove() -> remove
    java.lang.String toString() -> toString
com.avos.smack.util.DateFormatType -> com.avos.smack.util.DateFormatType:
    com.avos.smack.util.DateFormatType XEP_0082_DATE_PROFILE -> XEP_0082_DATE_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_DATETIME_PROFILE -> XEP_0082_DATETIME_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_DATETIME_MILLIS_PROFILE -> XEP_0082_DATETIME_MILLIS_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_TIME_PROFILE -> XEP_0082_TIME_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_TIME_ZONE_PROFILE -> XEP_0082_TIME_ZONE_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_TIME_MILLIS_PROFILE -> XEP_0082_TIME_MILLIS_PROFILE
    com.avos.smack.util.DateFormatType XEP_0082_TIME_MILLIS_ZONE_PROFILE -> XEP_0082_TIME_MILLIS_ZONE_PROFILE
    com.avos.smack.util.DateFormatType XEP_0091_DATETIME -> XEP_0091_DATETIME
    java.lang.String formatString -> formatString
    com.avos.smack.util.DateFormatType[] $VALUES -> $VALUES
    com.avos.smack.util.DateFormatType[] values() -> values
    com.avos.smack.util.DateFormatType valueOf(java.lang.String) -> valueOf
    java.lang.String getFormatString() -> getFormatString
    java.text.SimpleDateFormat createFormatter() -> createFormatter
com.avos.smack.util.PacketParserUtils -> com.avos.smack.util.PacketParserUtils:
    java.lang.String PROPERTIES_NAMESPACE -> PROPERTIES_NAMESPACE
    com.avos.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> parseMessage
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> parseContent
    java.lang.String parseContentDepth(org.xmlpull.v1.XmlPullParser,int) -> parseContentDepth
    com.avos.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> parsePresence
    com.avos.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,com.avos.smack.Connection) -> parseIQ
    com.avos.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> parseAuthentication
    com.avos.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> parseResourceBinding
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> parseMechanisms
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> parseCompressionMethods
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> parseProperties
    com.avos.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> parseSASLFailure
    com.avos.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> parseStreamError
    com.avos.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> parseError
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> getLanguageAttribute
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> parseWithIntrospection
    java.lang.Object decode(java.lang.Class,java.lang.String) -> decode
com.avos.smack.util.PacketParserUtils$1 -> com.avos.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.util.PacketParserUtils$2 -> com.avos.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.util.PacketParserUtils$UnparsedResultIQ -> com.avos.smack.util.PacketParserUtils$UnparsedResultIQ:
    java.lang.String str -> str
    java.lang.String getChildElementXML() -> getChildElementXML
com.avos.smack.util.StringEncoder -> com.avos.smack.util.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
com.avos.smack.util.StringUtils -> com.avos.smack.util.StringUtils:
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.text.DateFormat dateFormatter -> dateFormatter
    java.util.regex.Pattern datePattern -> datePattern
    java.text.DateFormat timeFormatter -> timeFormatter
    java.util.regex.Pattern timePattern -> timePattern
    java.text.DateFormat timeNoZoneFormatter -> timeNoZoneFormatter
    java.util.regex.Pattern timeNoZonePattern -> timeNoZonePattern
    java.text.DateFormat timeNoMillisFormatter -> timeNoMillisFormatter
    java.util.regex.Pattern timeNoMillisPattern -> timeNoMillisPattern
    java.text.DateFormat timeNoMillisNoZoneFormatter -> timeNoMillisNoZoneFormatter
    java.util.regex.Pattern timeNoMillisNoZonePattern -> timeNoMillisNoZonePattern
    java.text.DateFormat dateTimeFormatter -> dateTimeFormatter
    java.util.regex.Pattern dateTimePattern -> dateTimePattern
    java.text.DateFormat dateTimeNoMillisFormatter -> dateTimeNoMillisFormatter
    java.util.regex.Pattern dateTimeNoMillisPattern -> dateTimeNoMillisPattern
    java.text.DateFormat xep0091Formatter -> xep0091Formatter
    java.text.DateFormat xep0091Date6DigitFormatter -> xep0091Date6DigitFormatter
    java.text.DateFormat xep0091Date7Digit1MonthFormatter -> xep0091Date7Digit1MonthFormatter
    java.text.DateFormat xep0091Date7Digit2MonthFormatter -> xep0091Date7Digit2MonthFormatter
    java.util.regex.Pattern xep0091Pattern -> xep0091Pattern
    java.util.List couplings -> couplings
    char[] QUOTE_ENCODE -> QUOTE_ENCODE
    char[] APOS_ENCODE -> APOS_ENCODE
    char[] AMP_ENCODE -> AMP_ENCODE
    char[] LT_ENCODE -> LT_ENCODE
    char[] GT_ENCODE -> GT_ENCODE
    java.security.MessageDigest digest -> digest
    java.util.Random randGen -> randGen
    char[] numbersAndLetters -> numbersAndLetters
    java.util.Date parseXEP0082Date(java.lang.String) -> parseXEP0082Date
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date handleDateWithMissingLeadingZeros(java.lang.String,int) -> handleDateWithMissingLeadingZeros
    java.util.Calendar parseXEP91Date(java.lang.String,java.text.DateFormat) -> parseXEP91Date
    java.util.List filterDatesBefore(java.util.Calendar,java.util.Calendar[]) -> filterDatesBefore
    java.util.Calendar determineNearestDate(java.util.Calendar,java.util.List) -> determineNearestDate
    java.lang.String formatXEP0082Date(java.util.Date) -> formatXEP0082Date
    java.lang.String formatDate(java.util.Date,com.avos.smack.util.DateFormatType) -> formatDate
    java.lang.String parseName(java.lang.String) -> parseName
    java.lang.String parseServer(java.lang.String) -> parseServer
    java.lang.String parseResource(java.lang.String) -> parseResource
    java.lang.String parseBareAddress(java.lang.String) -> parseBareAddress
    boolean isFullJID(java.lang.String) -> isFullJID
    java.lang.String escapeNode(java.lang.String) -> escapeNode
    java.lang.String unescapeNode(java.lang.String) -> unescapeNode
    java.lang.String escapeForXML(java.lang.String) -> escapeForXML
    java.lang.String hash(java.lang.String) -> hash
    java.lang.String encodeHex(byte[]) -> encodeHex
    java.lang.String encodeBase64(java.lang.String) -> encodeBase64
    java.lang.String encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64(byte[],boolean) -> encodeBase64
    java.lang.String encodeBase64(byte[],int,int,boolean) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String randomString(int) -> randomString
com.avos.smack.util.StringUtils$1 -> com.avos.smack.util.StringUtils$1:
    java.util.Calendar val$now -> val$now
    int compare(java.util.Calendar,java.util.Calendar) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.avos.smack.util.StringUtils$PatternCouplings -> com.avos.smack.util.StringUtils$PatternCouplings:
    java.util.regex.Pattern pattern -> pattern
    java.text.DateFormat formatter -> formatter
    boolean needToConvertTimeZone -> needToConvertTimeZone
    java.lang.String convertTime(java.lang.String) -> convertTime
com.avos.smack.util.SyncPacketSend -> com.avos.smack.util.SyncPacketSend:
    com.avos.smack.packet.Packet getReply(com.avos.smack.Connection,com.avos.smack.packet.Packet,long) -> getReply
    com.avos.smack.packet.Packet getReply(com.avos.smack.Connection,com.avos.smack.packet.Packet) -> getReply
com.avos.smack.util.collections.AbstractKeyValue -> com.avos.smack.util.collections.AbstractKeyValue:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
com.avos.smack.util.collections.AbstractMapEntry -> com.avos.smack.util.collections.AbstractMapEntry:
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.avos.smack.util.collections.KeyValue -> com.avos.smack.util.collections.KeyValue:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.avos.smack.util.dns.HostAddress -> com.avos.smack.util.dns.HostAddress:
    java.lang.String fqdn -> fqdn
    int port -> port
    java.lang.Exception exception -> exception
    java.lang.String getFQDN() -> getFQDN
    int getPort() -> getPort
    void setException(java.lang.Exception) -> setException
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getErrorMessage() -> getErrorMessage
com.canruoxingchen.uglypic.BaseActivity -> com.canruoxingchen.uglypic.a:
    void onResume() -> onResume
    void onPause() -> onPause
com.canruoxingchen.uglypic.CameraActivity -> com.canruoxingchen.uglypic.CameraActivity:
    java.lang.String TAG -> u
    com.canruoxingchen.uglypic.camera.PmCamera mPmCamera -> a
    com.canruoxingchen.uglypic.CameraActivity$RendererObserver mRenderObserver -> b
    com.canruoxingchen.uglypic.CameraActivity$OrientationObserver mOrientationObserver -> c
    com.canruoxingchen.uglypic.CameraActivity$CameraObserver mCameraObserver -> d
    com.canruoxingchen.uglypic.camera.PmCameraData mPmCameraData -> e
    com.canruoxingchen.uglypic.camera.PmCameraRender mPmCameraRender -> f
    com.canruoxingchen.uglypic.CameraActivity$PmCameraHander mHandler -> g
    android.widget.ImageButton mFlashOnOffIB -> h
    android.widget.ImageButton mCameraNextIB -> i
    android.widget.ImageButton mCapturePhotoIB -> j
    com.canruoxingchen.uglypic.cache.AsyncImageView mChoosePhotoAiv -> k
    android.view.View mChoosePhotoView -> l
    android.view.View mFocusIndicatorView -> m
    android.widget.RelativeLayout mTopBarRL -> n
    android.widget.RelativeLayout mBottomBarRL -> o
    int mPictureMinSize -> p
    boolean mIsPreviewSquare -> q
    boolean mIsFrontCamera -> r
    com.canruoxingchen.uglypic.CameraActivity$FlashMode mCurrentFlashMode -> s
    android.view.ScaleGestureDetector mScaleGestureDetector -> v
    float mPictureRatio -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void startPhotoPicker() -> a
    void initView() -> b
    boolean canFocus(float,float) -> a
    void needShowFlashButton() -> c
    void needShowSwitchCameraButton() -> d
    void needFocusWhenTouch() -> e
    void switchFlashMode() -> f
    void setImageResult(java.lang.String) -> a
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void LOGD(java.lang.String) -> b
    void onScaled(float) -> a
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    void access$300(com.canruoxingchen.uglypic.CameraActivity,java.lang.String) -> a
    void access$500(com.canruoxingchen.uglypic.CameraActivity,java.lang.String) -> b
com.canruoxingchen.uglypic.CameraActivity$1 -> com.canruoxingchen.uglypic.b:
com.canruoxingchen.uglypic.CameraActivity$CameraObserver -> com.canruoxingchen.uglypic.c:
    com.canruoxingchen.uglypic.CameraActivity this$0 -> a
    void onAutoFocus(boolean) -> a
    void onPictureTaken(byte[]) -> a
    void onShutter() -> a
    void onException() -> b
com.canruoxingchen.uglypic.CameraActivity$FlashMode -> com.canruoxingchen.uglypic.d:
    com.canruoxingchen.uglypic.CameraActivity$FlashMode ON -> a
    com.canruoxingchen.uglypic.CameraActivity$FlashMode OFF -> b
    com.canruoxingchen.uglypic.CameraActivity$FlashMode AUTO -> c
    int id -> d
    java.lang.String mode -> e
    int resource -> f
    com.canruoxingchen.uglypic.CameraActivity$FlashMode[] $VALUES -> g
    com.canruoxingchen.uglypic.CameraActivity$FlashMode[] values() -> values
    com.canruoxingchen.uglypic.CameraActivity$FlashMode valueOf(java.lang.String) -> valueOf
    java.lang.String getMode() -> a
    int getResource() -> b
    com.canruoxingchen.uglypic.CameraActivity$FlashMode next() -> c
com.canruoxingchen.uglypic.CameraActivity$OrientationObserver -> com.canruoxingchen.uglypic.e:
    com.canruoxingchen.uglypic.CameraActivity this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.canruoxingchen.uglypic.CameraActivity$PmCameraHander -> com.canruoxingchen.uglypic.f:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.canruoxingchen.uglypic.CameraActivity$RendererObserver -> com.canruoxingchen.uglypic.g:
    com.canruoxingchen.uglypic.CameraActivity this$0 -> a
    void onSurfaceTextureCreated(android.graphics.SurfaceTexture) -> a
com.canruoxingchen.uglypic.CameraActivity$SaveRunnable -> com.canruoxingchen.uglypic.h:
    com.canruoxingchen.uglypic.CameraActivity this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.CameraActivity$SaveRunnable$1 -> com.canruoxingchen.uglypic.i:
    java.lang.String val$outFilePath -> a
    com.canruoxingchen.uglypic.CameraActivity$SaveRunnable this$1 -> b
    void run() -> run
com.canruoxingchen.uglypic.CameraActivity$ScaleListener -> com.canruoxingchen.uglypic.j:
    com.canruoxingchen.uglypic.CameraActivity this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.canruoxingchen.uglypic.Config -> com.canruoxingchen.uglypic.k:
    java.lang.String ROOT_PATH -> a
    java.lang.String IMAGE_PATH -> b
    java.lang.String CACHED_IMAGE_PATH -> c
    java.lang.String PUBLISH_TEMP_PATH -> d
com.canruoxingchen.uglypic.ImageCropActivity -> com.canruoxingchen.uglypic.ImageCropActivity:
    com.canruoxingchen.uglypic.view.CropImageView mCropView -> a
    android.widget.RelativeLayout mExitRL -> b
    android.widget.TextView mDoneTv -> c
    android.view.View mViewTopbar -> d
    java.lang.String mImagePath -> e
    boolean mNeedCrop -> f
    int mMinPictureSize -> g
    com.canruoxingchen.uglypic.ImageCropActivity$CropHandler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void startPhotoPicker() -> a
    boolean isFileSizeInvalid(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void start(android.app.Activity,int) -> a
    java.lang.String access$000(com.canruoxingchen.uglypic.ImageCropActivity) -> a
    com.canruoxingchen.uglypic.view.CropImageView access$100(com.canruoxingchen.uglypic.ImageCropActivity) -> b
    boolean access$200(com.canruoxingchen.uglypic.ImageCropActivity) -> c
    int access$300(com.canruoxingchen.uglypic.ImageCropActivity) -> d
com.canruoxingchen.uglypic.ImageCropActivity$CropHandler -> com.canruoxingchen.uglypic.l:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.canruoxingchen.uglypic.ImageCropActivity$SaveRunnable -> com.canruoxingchen.uglypic.m:
    com.canruoxingchen.uglypic.ImageCropActivity this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.ImageCropActivity$SaveRunnable$1 -> com.canruoxingchen.uglypic.n:
    java.lang.String val$outFilePath -> a
    com.canruoxingchen.uglypic.ImageCropActivity$SaveRunnable this$1 -> b
    void run() -> run
com.canruoxingchen.uglypic.MessageCenter -> com.canruoxingchen.uglypic.o:
    java.util.Map mHandlerMaps -> a
    com.canruoxingchen.uglypic.MessageCenter sCenter -> b
    android.content.Context mContext -> c
    byte[] sLock -> d
    com.canruoxingchen.uglypic.MessageCenter getInstance(android.content.Context) -> a
    void registerMessage(int,android.os.Handler) -> a
    void unregisterMessage(int,android.os.Handler) -> b
    void notifyHandlers(int,int,int,java.lang.Object) -> a
    void notifyHandlers(int) -> a
com.canruoxingchen.uglypic.PhotoEditor -> com.canruoxingchen.uglypic.PhotoEditor:
    android.net.Uri mPhotoUri -> a
    java.lang.String mImagePath -> b
    uk.co.senab.photoview.PhotoView mPvPhoto -> c
    android.view.ViewGroup mVgContextMenuContainer -> d
    android.view.View mViewModify -> e
    android.view.View mViewDelete -> f
    android.view.View mViewEraser -> g
    android.view.View mTopContextMenu -> h
    android.view.View mViewModifyFinish -> i
    android.view.View mViewBottomPanel -> j
    android.widget.RelativeLayout mFootageListContainer -> k
    android.widget.Button mViewContextBtn -> l
    com.canruoxingchen.uglypic.view.HorizontalListView mLvTypes -> m
    com.canruoxingchen.uglypic.view.HorizontalListView mLvFootages -> n
    android.view.View mViewBackToCamera -> o
    android.view.View mEditorPanel -> p
    android.widget.RelativeLayout mRlOverlayContainer -> q
    android.view.View mEditorPanelRefView -> r
    com.canruoxingchen.uglypic.overlay.EditorContainerView mEditorContainerView -> s
    android.widget.RelativeLayout mRootView -> t
    android.app.Dialog mDialog -> u
    com.almeros.android.multitouch.gesturedetector.MoveGestureDetector mMoveGestureDetector -> v
    java.util.List mOverlays -> w
    com.canruoxingchen.uglypic.overlay.SceneOverlay mSceneOverlay -> x
    com.canruoxingchen.uglypic.overlay.SceneOverlay mNullScene -> y
    com.canruoxingchen.uglypic.overlay.ObjectOverlay mCurrentOverlay -> z
    com.canruoxingchen.uglypic.overlay.ObjectOverlay mLastOverlay -> A
    java.util.List mFootageTypes -> B
    java.util.List mFootages -> C
    com.canruoxingchen.uglypic.PhotoEditor$TypeAdapter mTypeAdapter -> D
    com.canruoxingchen.uglypic.PhotoEditor$FootageAdapter mFootageAdapter -> E
    com.canruoxingchen.uglypic.footage.FootageManager mFootageManager -> F
    com.canruoxingchen.uglypic.footage.FootAgeType mCurrentType -> G
    boolean mHasLoadPhoto -> H
    com.canruoxingchen.uglypic.PhotoEditor$MyHandler mHandler -> I
    void start(android.content.Context,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    void initUI() -> a
    void initListers() -> b
    void onFootAgeClick(com.canruoxingchen.uglypic.footage.FootAge,boolean) -> a
    void onSceneClick(com.canruoxingchen.uglypic.footage.NetSence,boolean) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void registerAllFootageMsg() -> c
    void unregisterAllFootageMsg() -> d
    void dismissDialog() -> e
    android.app.Dialog showCancelDialog() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void saveCurrentImage() -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setSceneOverlay(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> a
    void unSelectAllOverlays() -> h
    void addOverlay(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> a
    void flipOverlay(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> b
    void removeOverlay(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> c
    boolean isEditting() -> i
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    float distance(float,float,float,float) -> a
    float degreeByATan(float,float,float,float,float) -> a
    void adjustSceneSize(int,int) -> b
    void onSceneSizeAquired(int,int) -> a
    void LOGD(java.lang.String) -> b
    void access$200(java.lang.String) -> a
    com.canruoxingchen.uglypic.footage.FootageManager access$300(com.canruoxingchen.uglypic.PhotoEditor) -> a
    java.util.List access$400(com.canruoxingchen.uglypic.PhotoEditor) -> b
    com.canruoxingchen.uglypic.PhotoEditor$TypeAdapter access$500(com.canruoxingchen.uglypic.PhotoEditor) -> c
    com.canruoxingchen.uglypic.footage.FootAgeType access$600(com.canruoxingchen.uglypic.PhotoEditor) -> d
    com.canruoxingchen.uglypic.footage.FootAgeType access$602(com.canruoxingchen.uglypic.PhotoEditor,com.canruoxingchen.uglypic.footage.FootAgeType) -> a
    java.util.List access$700(com.canruoxingchen.uglypic.PhotoEditor) -> e
    com.canruoxingchen.uglypic.PhotoEditor$FootageAdapter access$800(com.canruoxingchen.uglypic.PhotoEditor) -> f
    com.canruoxingchen.uglypic.view.HorizontalListView access$900(com.canruoxingchen.uglypic.PhotoEditor) -> g
    com.canruoxingchen.uglypic.overlay.EditorContainerView access$1000(com.canruoxingchen.uglypic.PhotoEditor) -> h
    com.canruoxingchen.uglypic.overlay.ObjectOverlay access$1200(com.canruoxingchen.uglypic.PhotoEditor) -> i
    android.widget.Button access$1300(com.canruoxingchen.uglypic.PhotoEditor) -> j
    android.view.View access$1400(com.canruoxingchen.uglypic.PhotoEditor) -> k
    uk.co.senab.photoview.PhotoView access$1500(com.canruoxingchen.uglypic.PhotoEditor) -> l
    boolean access$1600(com.canruoxingchen.uglypic.PhotoEditor) -> m
    com.canruoxingchen.uglypic.overlay.SceneOverlay access$1700(com.canruoxingchen.uglypic.PhotoEditor) -> n
    com.canruoxingchen.uglypic.overlay.SceneOverlay access$1800(com.canruoxingchen.uglypic.PhotoEditor) -> o
    void access$2000(com.canruoxingchen.uglypic.PhotoEditor,com.canruoxingchen.uglypic.footage.FootAge,boolean) -> a
    void access$2100(com.canruoxingchen.uglypic.PhotoEditor,com.canruoxingchen.uglypic.footage.NetSence,boolean) -> a
    boolean access$1602(com.canruoxingchen.uglypic.PhotoEditor,boolean) -> a
    void access$2200(com.canruoxingchen.uglypic.PhotoEditor,com.canruoxingchen.uglypic.overlay.SceneOverlay) -> a
    java.lang.String access$2300(com.canruoxingchen.uglypic.PhotoEditor) -> p
    boolean access$2400(com.canruoxingchen.uglypic.PhotoEditor) -> q
    float access$2500(com.canruoxingchen.uglypic.PhotoEditor,float,float,float,float) -> a
    float access$2600(com.canruoxingchen.uglypic.PhotoEditor,float,float,float,float,float) -> a
com.canruoxingchen.uglypic.PhotoEditor$1 -> com.canruoxingchen.uglypic.p:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void onVisible() -> a
    void onInvisible() -> b
com.canruoxingchen.uglypic.PhotoEditor$2 -> com.canruoxingchen.uglypic.q:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.canruoxingchen.uglypic.PhotoEditor$3 -> com.canruoxingchen.uglypic.s:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.canruoxingchen.uglypic.PhotoEditor$4 -> com.canruoxingchen.uglypic.t:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void onFailure() -> a
    void onComplete() -> b
com.canruoxingchen.uglypic.PhotoEditor$4$1 -> com.canruoxingchen.uglypic.u:
    com.canruoxingchen.uglypic.PhotoEditor$4 this$1 -> a
    void run() -> run
com.canruoxingchen.uglypic.PhotoEditor$5 -> com.canruoxingchen.uglypic.v:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.PhotoEditor$6 -> com.canruoxingchen.uglypic.w:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.canruoxingchen.uglypic.PhotoEditor$7 -> com.canruoxingchen.uglypic.x:
    android.graphics.Bitmap val$processedImage -> a
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.PhotoEditor$7$1 -> com.canruoxingchen.uglypic.y:
    com.canruoxingchen.uglypic.PhotoEditor$7 this$1 -> a
    void run() -> run
com.canruoxingchen.uglypic.PhotoEditor$7$2 -> com.canruoxingchen.uglypic.z:
    java.lang.String val$processedPath -> a
    com.canruoxingchen.uglypic.PhotoEditor$7 this$1 -> b
    void run() -> run
com.canruoxingchen.uglypic.PhotoEditor$FootageAdapter -> com.canruoxingchen.uglypic.aa:
    int mSelectedPosition -> b
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int access$1902(com.canruoxingchen.uglypic.PhotoEditor$FootageAdapter,int) -> a
com.canruoxingchen.uglypic.PhotoEditor$MoveListener -> com.canruoxingchen.uglypic.ab:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    boolean onMove(com.almeros.android.multitouch.gesturedetector.MoveGestureDetector) -> a
com.canruoxingchen.uglypic.PhotoEditor$MyHandler -> com.canruoxingchen.uglypic.ac:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.canruoxingchen.uglypic.PhotoEditor$TypeAdapter -> com.canruoxingchen.uglypic.ad:
    com.canruoxingchen.uglypic.PhotoEditor this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.canruoxingchen.uglypic.PhotoEditor$TypeAdapter$1 -> com.canruoxingchen.uglypic.ae:
    int val$position -> a
    com.canruoxingchen.uglypic.footage.FootAgeType val$type -> b
    com.canruoxingchen.uglypic.PhotoEditor$TypeAdapter this$1 -> c
    void onClick(android.view.View) -> onClick
com.canruoxingchen.uglypic.PhotoEditor$ViewHolder -> com.canruoxingchen.uglypic.af:
    com.canruoxingchen.uglypic.cache.AsyncImageView aivIcon -> a
    com.canruoxingchen.uglypic.cache.AsyncImageView access$2802(com.canruoxingchen.uglypic.PhotoEditor$ViewHolder,com.canruoxingchen.uglypic.cache.AsyncImageView) -> a
    com.canruoxingchen.uglypic.cache.AsyncImageView access$2800(com.canruoxingchen.uglypic.PhotoEditor$ViewHolder) -> a
com.canruoxingchen.uglypic.PickPhotoActivity -> com.canruoxingchen.uglypic.PickPhotoActivity:
    int mPhotoSrc -> a
    java.io.File mCameraTmpFile -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    boolean recoverState(android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void choosePhoto(int) -> a
    void choosePhotoFromGallery() -> a
    void choosePhotoFromCamera() -> b
    void saveEdittedPhoto(android.net.Uri) -> a
    void handleCameraResult(android.content.Intent) -> a
    void handleGalleryResult(android.content.Intent) -> b
    void LOGD(java.lang.String) -> b
    void access$000(java.lang.String) -> a
com.canruoxingchen.uglypic.PickPhotoActivity$CopyFileTask -> com.canruoxingchen.uglypic.ag:
    java.lang.ref.WeakReference mActivity -> b
    java.io.InputStream mSrc -> c
    android.net.Uri mSrcUri -> d
    com.canruoxingchen.uglypic.PickPhotoActivity this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.PickPhotoActivity$CopyFileTask$1 -> com.canruoxingchen.uglypic.ah:
    android.net.Uri val$destUri -> a
    com.canruoxingchen.uglypic.PickPhotoActivity$CopyFileTask this$1 -> b
    void run() -> run
com.canruoxingchen.uglypic.PublishActivity -> com.canruoxingchen.uglypic.PublishActivity:
    java.lang.String mOriginPath -> a
    java.lang.String mResultPath -> b
    java.lang.String mSharePathSingle -> c
    java.lang.String mSharePathMerge -> d
    android.widget.ImageView mIvImage -> e
    android.widget.EditText mEtDesc -> f
    com.canruoxingchen.uglypic.view.SlipButton mSlipBtn -> g
    android.view.View mViewToWeibo -> h
    android.view.View mViewToWeixin -> i
    android.view.View mViewToFriends -> j
    android.view.View mViewBack -> k
    android.view.View mViewFinish -> l
    com.canruoxingchen.uglypic.sns.SnsHelper mSnsHelper -> m
    boolean mMerged -> n
    com.canruoxingchen.uglypic.PublishActivity$MyHandler mHandler -> o
    android.graphics.Bitmap mSingleThumbnail -> p
    android.graphics.Bitmap mMergedThumbnail -> q
    void start(android.app.Activity,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onPause() -> onPause
    void initUI() -> a
    void initListers() -> b
    void shareToWeibo() -> c
    void onClick(android.view.View) -> onClick
    void share(int,java.lang.String) -> a
    java.lang.String saveImage(java.lang.String,boolean) -> a
    void recycleBmp(android.graphics.Bitmap) -> a
    void saveCurrentImage(int) -> a
    void loadThumbnail(int) -> b
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> a
    void access$000(com.canruoxingchen.uglypic.PublishActivity,int) -> a
    boolean access$100(com.canruoxingchen.uglypic.PublishActivity) -> a
    java.lang.String access$202(com.canruoxingchen.uglypic.PublishActivity,java.lang.String) -> a
    java.lang.String access$302(com.canruoxingchen.uglypic.PublishActivity,java.lang.String) -> b
    void access$400(com.canruoxingchen.uglypic.PublishActivity,int,java.lang.String) -> a
    android.graphics.Bitmap access$502(com.canruoxingchen.uglypic.PublishActivity,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$500(com.canruoxingchen.uglypic.PublishActivity) -> b
    android.widget.ImageView access$600(com.canruoxingchen.uglypic.PublishActivity) -> c
    android.graphics.Bitmap access$702(com.canruoxingchen.uglypic.PublishActivity,android.graphics.Bitmap) -> b
    android.graphics.Bitmap access$700(com.canruoxingchen.uglypic.PublishActivity) -> d
    boolean access$102(com.canruoxingchen.uglypic.PublishActivity,boolean) -> a
    void access$800(com.canruoxingchen.uglypic.PublishActivity,android.graphics.Bitmap) -> c
    void access$900(com.canruoxingchen.uglypic.PublishActivity,int) -> b
    java.lang.String access$200(com.canruoxingchen.uglypic.PublishActivity) -> e
    java.lang.String access$300(com.canruoxingchen.uglypic.PublishActivity) -> f
    java.lang.String access$1000(com.canruoxingchen.uglypic.PublishActivity,java.lang.String,boolean) -> a
    java.lang.String access$1100(com.canruoxingchen.uglypic.PublishActivity) -> g
    java.lang.String access$1200(com.canruoxingchen.uglypic.PublishActivity) -> h
com.canruoxingchen.uglypic.PublishActivity$1 -> com.canruoxingchen.uglypic.ai:
    com.canruoxingchen.uglypic.PublishActivity this$0 -> a
    void OnChanged(android.view.View,boolean) -> a
com.canruoxingchen.uglypic.PublishActivity$2 -> com.canruoxingchen.uglypic.aj:
    com.canruoxingchen.uglypic.PublishActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.canruoxingchen.uglypic.PublishActivity$2$1 -> com.canruoxingchen.uglypic.ak:
    java.io.File val$mergeFile -> a
    java.io.File val$singleFile -> b
    com.canruoxingchen.uglypic.PublishActivity$2 this$1 -> c
    void run() -> run
com.canruoxingchen.uglypic.PublishActivity$3 -> com.canruoxingchen.uglypic.al:
    java.lang.String val$content -> a
    boolean val$merged -> b
    com.canruoxingchen.uglypic.MessageCenter val$messageCenter -> c
    int val$shareType -> d
    com.canruoxingchen.uglypic.PublishActivity this$0 -> e
    void run() -> run
com.canruoxingchen.uglypic.PublishActivity$4 -> com.canruoxingchen.uglypic.am:
    int val$type -> a
    com.canruoxingchen.uglypic.PublishActivity this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.PublishActivity$MyHandler -> com.canruoxingchen.uglypic.an:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.canruoxingchen.uglypic.R -> com.canruoxingchen.uglypic.R:
com.canruoxingchen.uglypic.R$anim -> com.canruoxingchen.uglypic.R$anim:
    int rotate_center -> rotate_center
com.canruoxingchen.uglypic.R$attr -> com.canruoxingchen.uglypic.R$attr:
    int maxHeightPercent -> maxHeightPercent
    int maxWitdhPercent -> maxWitdhPercent
    int roundHeight -> roundHeight
    int roundWidth -> roundWidth
com.canruoxingchen.uglypic.R$color -> com.canruoxingchen.uglypic.R$color:
    int camera_button_background -> camera_button_background
    int camera_button_pressed_background -> camera_button_pressed_background
    int camera_button_text -> camera_button_text
    int default_background -> default_background
    int default_text_color -> default_text_color
    int default_text_normal -> default_text_normal
    int default_text_pressed -> default_text_pressed
    int erase_width_color -> erase_width_color
    int footage_bg_normal -> footage_bg_normal
    int footage_bg_selected -> footage_bg_selected
    int footage_item_color -> footage_item_color
    int gray -> gray
    int publish_splitter -> publish_splitter
    int publish_topbar_background -> publish_topbar_background
    int red -> red
    int transparent -> transparent
    int white -> white
com.canruoxingchen.uglypic.R$dimen -> com.canruoxingchen.uglypic.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int photo_editor_bottom_bar_height -> photo_editor_bottom_bar_height
    int tips_text_size -> tips_text_size
    int top_bar_height -> top_bar_height
com.canruoxingchen.uglypic.R$drawable -> com.canruoxingchen.uglypic.R$drawable:
    int big_loading_anim_icon -> big_loading_anim_icon
    int camera_back -> camera_back
    int camera_capture -> camera_capture
    int camera_capture_normal -> camera_capture_normal
    int camera_capture_pressed -> camera_capture_pressed
    int camera_choose_gallery -> camera_choose_gallery
    int camera_close -> camera_close
    int camera_flash_auto -> camera_flash_auto
    int camera_flash_off -> camera_flash_off
    int camera_flash_on -> camera_flash_on
    int camera_focus -> camera_focus
    int camera_gallery_normal -> camera_gallery_normal
    int camera_gallery_pressed -> camera_gallery_pressed
    int camera_surface_background -> camera_surface_background
    int camera_switch -> camera_switch
    int camera_titlebar_bg -> camera_titlebar_bg
    int default_btn_bg_normal -> default_btn_bg_normal
    int default_button_bg -> default_button_bg
    int default_button_bg_pressed -> default_button_bg_pressed
    int erase_width_bg -> erase_width_bg
    int erase_width_default -> erase_width_default
    int erase_width_selected -> erase_width_selected
    int footage_item -> footage_item
    int footage_item_bg -> footage_item_bg
    int footage_item_selected -> footage_item_selected
    int ic_launcher -> ic_launcher
    int loading_animation_1 -> loading_animation_1
    int loading_animation_2 -> loading_animation_2
    int loading_animation_3 -> loading_animation_3
    int loading_animation_4 -> loading_animation_4
    int loading_animation_5 -> loading_animation_5
    int loading_animation_6 -> loading_animation_6
    int loading_animation_7 -> loading_animation_7
    int loading_animation_8 -> loading_animation_8
    int null_scene -> null_scene
    int photo_editor_delete -> photo_editor_delete
    int photo_editor_erase -> photo_editor_erase
    int photo_editor_flip -> photo_editor_flip
    int photo_editor_modify -> photo_editor_modify
    int photo_editor_rotate -> photo_editor_rotate
    int round_angle_cover -> round_angle_cover
    int setting_slipbutton_background -> setting_slipbutton_background
    int setting_slipbutton_handle_off -> setting_slipbutton_handle_off
    int setting_slipbutton_off_pressed -> setting_slipbutton_off_pressed
    int setting_slipbutton_on_normal -> setting_slipbutton_on_normal
    int setting_slipbutton_on_pressed -> setting_slipbutton_on_pressed
    int tips_bg -> tips_bg
    int tips_dialog_bg -> tips_dialog_bg
    int tips_fail -> tips_fail
    int tips_loading -> tips_loading
    int tips_saved -> tips_saved
    int umeng_common_gradient_green -> umeng_common_gradient_green
    int umeng_common_gradient_orange -> umeng_common_gradient_orange
    int umeng_common_gradient_red -> umeng_common_gradient_red
    int umeng_update_btn_check_off_focused_holo_light -> umeng_update_btn_check_off_focused_holo_light
    int umeng_update_btn_check_off_holo_light -> umeng_update_btn_check_off_holo_light
    int umeng_update_btn_check_off_pressed_holo_light -> umeng_update_btn_check_off_pressed_holo_light
    int umeng_update_btn_check_on_focused_holo_light -> umeng_update_btn_check_on_focused_holo_light
    int umeng_update_btn_check_on_holo_light -> umeng_update_btn_check_on_holo_light
    int umeng_update_btn_check_on_pressed_holo_light -> umeng_update_btn_check_on_pressed_holo_light
    int umeng_update_button_cancel_bg_focused -> umeng_update_button_cancel_bg_focused
    int umeng_update_button_cancel_bg_normal -> umeng_update_button_cancel_bg_normal
    int umeng_update_button_cancel_bg_selector -> umeng_update_button_cancel_bg_selector
    int umeng_update_button_cancel_bg_tap -> umeng_update_button_cancel_bg_tap
    int umeng_update_button_check_selector -> umeng_update_button_check_selector
    int umeng_update_button_close_bg_selector -> umeng_update_button_close_bg_selector
    int umeng_update_button_ok_bg_focused -> umeng_update_button_ok_bg_focused
    int umeng_update_button_ok_bg_normal -> umeng_update_button_ok_bg_normal
    int umeng_update_button_ok_bg_selector -> umeng_update_button_ok_bg_selector
    int umeng_update_button_ok_bg_tap -> umeng_update_button_ok_bg_tap
    int umeng_update_close_bg_normal -> umeng_update_close_bg_normal
    int umeng_update_close_bg_tap -> umeng_update_close_bg_tap
    int umeng_update_dialog_bg -> umeng_update_dialog_bg
    int umeng_update_title_bg -> umeng_update_title_bg
    int umeng_update_wifi_disable -> umeng_update_wifi_disable
com.canruoxingchen.uglypic.R$id -> com.canruoxingchen.uglypic.R$id:
    int action_settings -> action_settings
    int camera_surface -> camera_surface
    int choose_photo -> choose_photo
    int edit_text_et -> edit_text_et
    int finish -> finish
    int focus_indicator -> focus_indicator
    int footage_item_icon -> footage_item_icon
    int footage_type_item_name -> footage_type_item_name
    int ib_camera_next -> ib_camera_next
    int ib_capture -> ib_capture
    int ib_choose_photo -> ib_choose_photo
    int ib_flash_on_off -> ib_flash_on_off
    int image_contrast -> image_contrast
    int image_erase_width -> image_erase_width
    int image_illumination -> image_illumination
    int image_params -> image_params
    int image_satuation -> image_satuation
    int image_seekbar_contrast -> image_seekbar_contrast
    int image_seekbar_illumination -> image_seekbar_illumination
    int image_seekbar_satuation -> image_seekbar_satuation
    int iv_crop -> iv_crop
    int iv_exit -> iv_exit
    int main_photo_src_camera -> main_photo_src_camera
    int main_photo_src_gallery -> main_photo_src_gallery
    int msg_editor_origin_image_saved -> msg_editor_origin_image_saved
    int msg_editor_regret_status_change -> msg_editor_regret_status_change
    int msg_load_footage_failure -> msg_load_footage_failure
    int msg_load_footage_icon_failure -> msg_load_footage_icon_failure
    int msg_load_footage_icon_success -> msg_load_footage_icon_success
    int msg_load_footage_success -> msg_load_footage_success
    int msg_load_footage_types_failure -> msg_load_footage_types_failure
    int msg_load_footage_types_success -> msg_load_footage_types_success
    int msg_load_local_footage_failure -> msg_load_local_footage_failure
    int msg_load_local_footage_success -> msg_load_local_footage_success
    int msg_load_local_footage_types_failure -> msg_load_local_footage_types_failure
    int msg_load_local_footage_types_success -> msg_load_local_footage_types_success
    int msg_load_local_scenes_failure -> msg_load_local_scenes_failure
    int msg_load_local_scenes_success -> msg_load_local_scenes_success
    int msg_load_recent_footage_failure -> msg_load_recent_footage_failure
    int msg_load_recent_footage_success -> msg_load_recent_footage_success
    int msg_load_scenes_failure -> msg_load_scenes_failure
    int msg_load_scenes_success -> msg_load_scenes_success
    int msg_photo_export_failure -> msg_photo_export_failure
    int msg_photo_export_success -> msg_photo_export_success
    int msg_photo_merge_thumbnail_success -> msg_photo_merge_thumbnail_success
    int msg_publish_canceled -> msg_publish_canceled
    int msg_publish_finished -> msg_publish_finished
    int msg_weibo_auth_failure -> msg_weibo_auth_failure
    int msg_weibo_auth_success -> msg_weibo_auth_success
    int msg_weibo_share_failure -> msg_weibo_share_failure
    int msg_weibo_share_success -> msg_weibo_share_success
    int photo_editor_bottom_panel -> photo_editor_bottom_panel
    int photo_editor_context_button -> photo_editor_context_button
    int photo_editor_context_menu_container -> photo_editor_context_menu_container
    int photo_editor_edit_panel -> photo_editor_edit_panel
    int photo_editor_edit_panel_ref_view -> photo_editor_edit_panel_ref_view
    int photo_editor_editor -> photo_editor_editor
    int photo_editor_editor_back -> photo_editor_editor_back
    int photo_editor_editor_finish -> photo_editor_editor_finish
    int photo_editor_editor_redo -> photo_editor_editor_redo
    int photo_editor_editor_regret -> photo_editor_editor_regret
    int photo_editor_editor_top_bar -> photo_editor_editor_top_bar
    int photo_editor_editor_top_bar_splitter -> photo_editor_editor_top_bar_splitter
    int photo_editor_editor_view_container -> photo_editor_editor_view_container
    int photo_editor_footage_list -> photo_editor_footage_list
    int photo_editor_footage_list_container -> photo_editor_footage_list_container
    int photo_editor_footage_types_list -> photo_editor_footage_types_list
    int photo_editor_overlay_container -> photo_editor_overlay_container
    int photo_editor_photo -> photo_editor_photo
    int photo_editor_root_view -> photo_editor_root_view
    int photo_editor_top_bar -> photo_editor_top_bar
    int photo_editor_top_bar_camera -> photo_editor_top_bar_camera
    int photo_editor_top_bar_object_delete -> photo_editor_top_bar_object_delete
    int photo_editor_top_bar_object_eraser -> photo_editor_top_bar_object_eraser
    int photo_editor_top_bar_object_modify -> photo_editor_top_bar_object_modify
    int photo_editor_topbar_modify_finish -> photo_editor_topbar_modify_finish
    int photo_editor_topbar_object_menu -> photo_editor_topbar_object_menu
    int progress_icon -> progress_icon
    int publish_back -> publish_back
    int publish_finish -> publish_finish
    int publish_share_to_friends -> publish_share_to_friends
    int publish_share_to_weibo -> publish_share_to_weibo
    int publish_share_to_weixin -> publish_share_to_weixin
    int publish_slip_btn -> publish_slip_btn
    int rl_bottombar -> rl_bottombar
    int rl_exit -> rl_exit
    int rl_root -> rl_root
    int rl_topbar -> rl_topbar
    int share_desc -> share_desc
    int share_pic -> share_pic
    int splitter -> splitter
    int tips -> tips
    int tv_accept_crop -> tv_accept_crop
    int tv_exit -> tv_exit
    int ugly_pic -> ugly_pic
    int umeng_common_icon_view -> umeng_common_icon_view
    int umeng_common_notification -> umeng_common_notification
    int umeng_common_notification_controller -> umeng_common_notification_controller
    int umeng_common_progress_bar -> umeng_common_progress_bar
    int umeng_common_progress_text -> umeng_common_progress_text
    int umeng_common_rich_notification_cancel -> umeng_common_rich_notification_cancel
    int umeng_common_rich_notification_continue -> umeng_common_rich_notification_continue
    int umeng_common_title -> umeng_common_title
    int umeng_update_content -> umeng_update_content
    int umeng_update_id_cancel -> umeng_update_id_cancel
    int umeng_update_id_check -> umeng_update_id_check
    int umeng_update_id_close -> umeng_update_id_close
    int umeng_update_id_ignore -> umeng_update_id_ignore
    int umeng_update_id_ok -> umeng_update_id_ok
    int umeng_update_wifi_indicator -> umeng_update_wifi_indicator
com.canruoxingchen.uglypic.R$layout -> com.canruoxingchen.uglypic.R$layout:
    int activity_camera -> activity_camera
    int activity_image_crop -> activity_image_crop
    int activity_main -> activity_main
    int edit_text -> edit_text
    int footage_item -> footage_item
    int footage_type_item -> footage_type_item
    int image_erase_width_panel_item -> image_erase_width_panel_item
    int image_overlay_context_menu -> image_overlay_context_menu
    int photo_editor -> photo_editor
    int photo_editor_editor_view_container -> photo_editor_editor_view_container
    int publish -> publish
    int tips_dialog -> tips_dialog
    int tips_dialog_tips_only -> tips_dialog_tips_only
    int tips_layout -> tips_layout
    int umeng_common_download_notification -> umeng_common_download_notification
    int umeng_update_dialog -> umeng_update_dialog
    int view_pic -> view_pic
com.canruoxingchen.uglypic.R$menu -> com.canruoxingchen.uglypic.R$menu:
    int main -> main
com.canruoxingchen.uglypic.R$string -> com.canruoxingchen.uglypic.R$string:
    int UMAppUpdate -> UMAppUpdate
    int UMBreak_Network -> UMBreak_Network
    int UMDialog_InstallAPK -> UMDialog_InstallAPK
    int UMGprsCondition -> UMGprsCondition
    int UMIgnore -> UMIgnore
    int UMNewVersion -> UMNewVersion
    int UMNotNow -> UMNotNow
    int UMTargetSize -> UMTargetSize
    int UMToast_IsUpdating -> UMToast_IsUpdating
    int UMUpdateCheck -> UMUpdateCheck
    int UMUpdateContent -> UMUpdateContent
    int UMUpdateNow -> UMUpdateNow
    int UMUpdateSize -> UMUpdateSize
    int UMUpdateTitle -> UMUpdateTitle
    int action_settings -> action_settings
    int app_name -> app_name
    int camera_btn_close -> camera_btn_close
    int camera_btn_crop_back -> camera_btn_crop_back
    int camera_btn_crop_done -> camera_btn_crop_done
    int choose_photo_waiting -> choose_photo_waiting
    int edit_text_finish -> edit_text_finish
    int image_menu_contrast -> image_menu_contrast
    int image_menu_erase -> image_menu_erase
    int image_menu_illumination -> image_menu_illumination
    int image_menu_reset -> image_menu_reset
    int image_menu_satuation -> image_menu_satuation
    int main_photo_src_camera -> main_photo_src_camera
    int main_photo_src_gallery -> main_photo_src_gallery
    int no_sdcard_hint -> no_sdcard_hint
    int photo_editor_cancel -> photo_editor_cancel
    int photo_editor_cancel_hint -> photo_editor_cancel_hint
    int photo_editor_confirm -> photo_editor_confirm
    int photo_editor_context_btn_reset -> photo_editor_context_btn_reset
    int photo_editor_context_btn_share -> photo_editor_context_btn_share
    int photo_editor_delete_all_widgets -> photo_editor_delete_all_widgets
    int photo_editor_save_failure -> photo_editor_save_failure
    int photo_editor_saving -> photo_editor_saving
    int photo_editor_tab_scene -> photo_editor_tab_scene
    int photo_editor_tab_text -> photo_editor_tab_text
    int photo_editor_tab_widget -> photo_editor_tab_widget
    int photo_editor_top_bar_camera -> photo_editor_top_bar_camera
    int photo_editor_top_bar_delete -> photo_editor_top_bar_delete
    int photo_editor_top_bar_eraser -> photo_editor_top_bar_eraser
    int photo_editor_top_bar_finish -> photo_editor_top_bar_finish
    int photo_editor_top_bar_modify -> photo_editor_top_bar_modify
    int photo_editor_top_bar_reset -> photo_editor_top_bar_reset
    int pref_last_load_footage_type_time -> pref_last_load_footage_type_time
    int pref_weibo_access_token -> pref_weibo_access_token
    int pref_weibo_expires_in -> pref_weibo_expires_in
    int pref_weibo_uid -> pref_weibo_uid
    int publish_desc_hint -> publish_desc_hint
    int publish_exporting -> publish_exporting
    int publish_exporting_failure -> publish_exporting_failure
    int publish_finish -> publish_finish
    int publish_include_origin_image -> publish_include_origin_image
    int publish_share_to_friends -> publish_share_to_friends
    int publish_share_to_weibo -> publish_share_to_weibo
    int publish_share_to_weibo_failure -> publish_share_to_weibo_failure
    int publish_share_to_weibo_success -> publish_share_to_weibo_success
    int publish_share_to_weixin -> publish_share_to_weixin
    int publish_sns_section -> publish_sns_section
    int publish_title -> publish_title
    int storage_not_enough -> storage_not_enough
    int tips_no_sdcard -> tips_no_sdcard
    int tips_photo_invalid_path -> tips_photo_invalid_path
    int tips_photo_loading -> tips_photo_loading
    int tips_photo_size_invalid -> tips_photo_size_invalid
    int umeng_common_action_cancel -> umeng_common_action_cancel
    int umeng_common_action_continue -> umeng_common_action_continue
    int umeng_common_action_info_exist -> umeng_common_action_info_exist
    int umeng_common_action_pause -> umeng_common_action_pause
    int umeng_common_download_failed -> umeng_common_download_failed
    int umeng_common_download_finish -> umeng_common_download_finish
    int umeng_common_download_notification_prefix -> umeng_common_download_notification_prefix
    int umeng_common_icon -> umeng_common_icon
    int umeng_common_info_interrupt -> umeng_common_info_interrupt
    int umeng_common_network_break_alert -> umeng_common_network_break_alert
    int umeng_common_patch_finish -> umeng_common_patch_finish
    int umeng_common_start_download_notification -> umeng_common_start_download_notification
    int umeng_common_start_patch_notification -> umeng_common_start_patch_notification
com.canruoxingchen.uglypic.R$style -> com.canruoxingchen.uglypic.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int TipsDialog -> TipsDialog
    int Transparent -> Transparent
com.canruoxingchen.uglypic.R$styleable -> com.canruoxingchen.uglypic.R$styleable:
    int[] AsyncImageView -> AsyncImageView
    int AsyncImageView_maxHeightPercent -> AsyncImageView_maxHeightPercent
    int AsyncImageView_maxWitdhPercent -> AsyncImageView_maxWitdhPercent
    int[] RoundAngleImageView -> RoundAngleImageView
    int RoundAngleImageView_roundHeight -> RoundAngleImageView_roundHeight
    int RoundAngleImageView_roundWidth -> RoundAngleImageView_roundWidth
com.canruoxingchen.uglypic.SettingManager -> com.canruoxingchen.uglypic.ao:
    com.canruoxingchen.uglypic.SettingManager mInstance -> a
    android.content.Context mContext -> b
    android.content.SharedPreferences mSharedPreferences -> c
    android.content.SharedPreferences$Editor mEditor -> d
    com.canruoxingchen.uglypic.SettingManager getInstance() -> a
    void init(android.content.Context) -> a
    void saveLastLoadTypesTime(long) -> a
    long getLastLoadTypesTime() -> b
    void writeAccessToken(android.content.Context,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken readAccessToken(android.content.Context) -> b
com.canruoxingchen.uglypic.SplashActivity -> com.canruoxingchen.uglypic.SplashActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> a
    void initListers() -> b
com.canruoxingchen.uglypic.SplashActivity$1 -> com.canruoxingchen.uglypic.ap:
    com.canruoxingchen.uglypic.SplashActivity this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.TipsDialog -> com.canruoxingchen.uglypic.aq:
    com.canruoxingchen.uglypic.TipsDialog gTipsDialog -> a
    android.os.Handler handler -> b
    com.canruoxingchen.uglypic.TipsDialog$CustomDialog mDialog -> c
    com.canruoxingchen.uglypic.TipsDialog getInstance() -> a
    void dismiss() -> b
    void show(android.app.Activity,int,int,boolean,boolean) -> a
    void show(android.app.Activity,int,java.lang.String,boolean,boolean,boolean) -> a
    void show(android.app.Activity,int,java.lang.String,boolean) -> a
    void show(android.app.Activity,int,int,boolean) -> a
com.canruoxingchen.uglypic.TipsDialog$1 -> com.canruoxingchen.uglypic.ar:
    android.app.Dialog val$showDialog -> a
    com.canruoxingchen.uglypic.TipsDialog this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.TipsDialog$2 -> com.canruoxingchen.uglypic.as:
    android.app.Dialog val$showDialog -> a
    com.canruoxingchen.uglypic.TipsDialog this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.TipsDialog$3 -> com.canruoxingchen.uglypic.at:
    android.app.Dialog val$showDialog -> a
    com.canruoxingchen.uglypic.TipsDialog this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.TipsDialog$CustomDialog -> com.canruoxingchen.uglypic.au:
    android.widget.ImageView progress -> a
    android.view.animation.Animation rotate -> b
    com.canruoxingchen.uglypic.TipsDialog this$0 -> c
    void onClick(android.view.View) -> onClick
    void setAnimation(boolean) -> a
    void setImageResource(int) -> a
    void setTips(java.lang.String) -> a
com.canruoxingchen.uglypic.UglyPicApp -> com.canruoxingchen.uglypic.UglyPicApp:
    android.os.Handler mUiHandler -> b
    android.content.Context mContext -> c
    uk.co.senab.bitmapcache.BitmapLruCache mCache -> d
    boolean isApiUT11 -> a
    void onCreate() -> onCreate
    android.os.Handler getUiHander() -> a
    android.content.Context getAppExContext() -> b
    com.canruoxingchen.uglypic.UglyPicApp getApplication(android.content.Context) -> a
    uk.co.senab.bitmapcache.BitmapLruCache getBitmapCache() -> c
    void loadFootageTypes() -> d
com.canruoxingchen.uglypic.ViewUglyPicActivity -> com.canruoxingchen.uglypic.ViewUglyPicActivity:
    uk.co.senab.photoview.PhotoView mPvPic -> a
    android.view.View mViewFinish -> b
    java.lang.String mImagePath -> c
    boolean mOnlyView -> d
    void start(android.app.Activity,int,java.lang.String,boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void initUI() -> a
    void initListers() -> b
com.canruoxingchen.uglypic.ViewUglyPicActivity$1 -> com.canruoxingchen.uglypic.av:
    com.canruoxingchen.uglypic.ViewUglyPicActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.canruoxingchen.uglypic.ViewUglyPicActivity$2 -> com.canruoxingchen.uglypic.aw:
    com.canruoxingchen.uglypic.ViewUglyPicActivity this$0 -> a
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.canruoxingchen.uglypic.cache.AsyncImageView -> com.canruoxingchen.uglypic.cache.AsyncImageView:
    java.lang.String TAG -> TAG
    int MIN_WIDTH_HEIGHT -> MIN_WIDTH_HEIGHT
    com.canruoxingchen.uglypic.cache.ImageInfo mImgInfo -> mImgInfo
    int mWidthMeasureMode -> mWidthMeasureMode
    int mHeightMeasureMode -> mHeightMeasureMode
    int mWidthMeasureSize -> mWidthMeasureSize
    int mHeightMeasureSize -> mHeightMeasureSize
    float mMaxWidthPercent -> mMaxWidthPercent
    float mMaxHeightPercent -> mMaxHeightPercent
    java.lang.Object mData -> mData
    int mImageWidth -> mImageWidth
    int mImageHeight -> mImageHeight
    boolean mNeedProgressDrawable -> mNeedProgressDrawable
    boolean mNeedResample -> mNeedResample
    com.canruoxingchen.uglypic.cache.AsyncImageView$ImageLoadedListener mListener -> mListener
    void setImageLoadedListener(com.canruoxingchen.uglypic.cache.AsyncImageView$ImageLoadedListener) -> setImageLoadedListener
    void notifyComplete() -> notifyComplete
    void notifyFailure() -> notifyFailure
    void init(android.content.Context,android.util.AttributeSet) -> init
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageInfo(com.canruoxingchen.uglypic.cache.ImageInfo) -> setImageInfo
    void setImageInfo(com.canruoxingchen.uglypic.cache.ImageInfo,boolean) -> setImageInfo
    void loadImageIfNecessary(boolean) -> loadImageIfNecessary
    void loadImage() -> loadImage
    void setImageInfo(com.canruoxingchen.uglypic.cache.ImageInfo,boolean,boolean) -> setImageInfo
    void printInView(java.lang.String,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> printInView
    void LOGD(java.lang.String) -> LOGD
    void changeImageInfo(com.canruoxingchen.uglypic.cache.ImageInfo) -> changeImageInfo
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    void setImageWidth(int) -> setImageWidth
    void setImageHeight(int) -> setImageHeight
    int getDestWidthPixel() -> getDestWidthPixel
    int getDestHeightPixel() -> getDestHeightPixel
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setData(java.lang.Object) -> setData
    java.lang.Object getData() -> getData
    android.graphics.Bitmap createSpecialBitmap(android.graphics.Bitmap) -> createSpecialBitmap
    java.lang.String getSuffix() -> getSuffix
    boolean getShouldSavedToDisk() -> getShouldSavedToDisk
    boolean getShouldSavedToMem() -> getShouldSavedToMem
com.canruoxingchen.uglypic.cache.AsyncImageView$DebugTag -> com.canruoxingchen.uglypic.cache.a:
com.canruoxingchen.uglypic.cache.AsyncImageView$ImageLoadedListener -> com.canruoxingchen.uglypic.cache.b:
    void onComplete() -> b
    void onFailure() -> a
com.canruoxingchen.uglypic.cache.ImageCacheManager -> com.canruoxingchen.uglypic.cache.c:
    com.canruoxingchen.uglypic.cache.ImageCacheManager sInstance -> a
    uk.co.senab.bitmapcache.BitmapLruCache mCache -> b
    byte[] sLockObj -> c
    com.canruoxingchen.uglypic.cache.ImageCacheManager getInstance(android.content.Context) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getBitmapByCategoryAndUrl(java.lang.String,java.lang.String,java.lang.String) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getBitmapByCategoryAndUrl(java.lang.String,java.lang.String) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getBitmapByCategoryAndUrl(java.lang.String,java.lang.String,android.graphics.BitmapFactory$Options,java.lang.String) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getMemBitmapByCategoryAndUrl(java.lang.String,java.lang.String,java.lang.String) -> b
    uk.co.senab.bitmapcache.CacheableBitmapDrawable putBitmapByCategoryAndUrl(android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable putToMem(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable putBitmapByCategoryAndUrl(java.io.InputStream,android.graphics.BitmapFactory$Options,java.lang.String,java.lang.String) -> a
    java.lang.String encodeUrlWithCategory(java.lang.String,java.lang.String) -> b
    java.lang.String encodeUrlWithCategory(java.lang.String,java.lang.String,java.lang.String) -> c
com.canruoxingchen.uglypic.cache.ImageDownloader -> com.canruoxingchen.uglypic.cache.d:
    com.canruoxingchen.uglypic.cache.ImageDownloader sInstance -> a
    java.io.InputStream open(java.lang.String) -> a
com.canruoxingchen.uglypic.cache.ImageInfo -> com.canruoxingchen.uglypic.cache.e:
    java.lang.String category -> a
    java.lang.String url -> b
    java.lang.String getCategory() -> a
    java.lang.String getUrl() -> b
    com.canruoxingchen.uglypic.cache.ImageInfo obtain(java.lang.String,java.lang.String) -> a
    com.canruoxingchen.uglypic.cache.ImageInfo obtain(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.canruoxingchen.uglypic.cache.ImageLoadTask -> com.canruoxingchen.uglypic.cache.f:
    java.lang.String mImageUri -> a
    java.lang.String mCategory -> b
    int mDestWidth -> c
    int mDestHeight -> d
    boolean mNeedReSample -> e
    com.canruoxingchen.uglypic.cache.ImageCacheManager mImageCacheManager -> f
    java.lang.ref.WeakReference mImageView -> g
    java.lang.ref.WeakReference mContentResolver -> h
    android.view.ViewGroup$LayoutParams mPreviousParams -> i
    int mPreviousWidth -> j
    int mPreviousHeight -> k
    uk.co.senab.bitmapcache.CacheableBitmapDrawable doInBackground(java.lang.Void[]) -> a
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getAndCreateAndPutSpecialBitmap(com.canruoxingchen.uglypic.cache.AsyncImageView,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> a
    void onPostExecute(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> a
    void onCancelled() -> onCancelled
    void onCancelled(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> b
    void restoreLayoutParams() -> a
    void onPreExecute() -> onPreExecute
    void LOGD(java.lang.String) -> a
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.canruoxingchen.uglypic.camera.PmCamera -> com.canruoxingchen.uglypic.camera.a:
    android.content.Context mContext -> a
    android.hardware.Camera mCamera -> b
    int mCameraId -> c
    android.hardware.Camera$CameraInfo mCameraInfo -> d
    com.canruoxingchen.uglypic.camera.PmCameraData mQmCameraData -> e
    android.graphics.SurfaceTexture mSurfaceTexture -> f
    int mPictureMinSize -> g
    double mRatio -> h
    android.hardware.Camera$Size mPreviewSize -> i
    android.hardware.Camera$Size mPictureSize -> j
    java.lang.String mCurrentFlashMode -> k
    boolean mNeedRefreshPreviewSize -> l
    int mCurrentZoomIndex -> m
    boolean mIsZooming -> n
    java.util.List mZoomRatios -> o
    boolean mIsZoomSupported -> p
    boolean mIsSmoothZoomSupported -> q
    int mZoomMax -> r
    android.hardware.Camera$OnZoomChangeListener mZoomChangeListener -> s
    int getOrientation() -> a
    void updateAspectRatioPreview() -> b
    boolean isCameraFront() -> c
    void onPause() -> d
    void onResume() -> e
    void openCamera() -> o
    void toggleFlashMode(java.lang.String) -> a
    boolean hasFrontCamera() -> f
    void setCameraFront(boolean) -> a
    android.hardware.Camera$Size getOptimalPreviewSize(boolean) -> b
    android.hardware.Camera$Size getOptimalPictureSize(boolean) -> c
    void setPreviewTexture(android.graphics.SurfaceTexture) -> a
    void setQmCameraData(com.canruoxingchen.uglypic.camera.PmCameraData) -> a
    void setPictureMinSize(int) -> a
    android.hardware.Camera$Size getPreviewSize() -> g
    android.hardware.Camera$Size getPicturesize() -> h
    void startPreview() -> i
    void stopPreview() -> j
    boolean isZooming() -> k
    boolean smoothZoom(int) -> b
    int getMaxZoom() -> l
    void zoomIn() -> m
    void zoomOut() -> n
    void switchFocusMode(java.lang.String) -> b
    void autoFocus(com.canruoxingchen.uglypic.camera.PmCamera$Observer) -> a
    void takenPicture(com.canruoxingchen.uglypic.camera.PmCamera$Observer) -> b
    void access$000(com.canruoxingchen.uglypic.camera.PmCamera,java.lang.String) -> a
    android.hardware.Camera access$100(com.canruoxingchen.uglypic.camera.PmCamera) -> a
    boolean access$202(com.canruoxingchen.uglypic.camera.PmCamera,boolean) -> a
com.canruoxingchen.uglypic.camera.PmCamera$1 -> com.canruoxingchen.uglypic.camera.b:
    com.canruoxingchen.uglypic.camera.PmCamera this$0 -> a
    void onZoomChange(int,boolean,android.hardware.Camera) -> onZoomChange
com.canruoxingchen.uglypic.camera.PmCamera$CameraObserver -> com.canruoxingchen.uglypic.camera.c:
    com.canruoxingchen.uglypic.camera.PmCamera$Observer mObserver -> b
    boolean mIsTakenPicture -> c
    com.canruoxingchen.uglypic.camera.PmCamera this$0 -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
    void onShutter() -> onShutter
com.canruoxingchen.uglypic.camera.PmCamera$Observer -> com.canruoxingchen.uglypic.camera.d:
    void onAutoFocus(boolean) -> a
    void onPictureTaken(byte[]) -> a
    void onShutter() -> a
    void onException() -> b
com.canruoxingchen.uglypic.camera.PmCameraData -> com.canruoxingchen.uglypic.camera.e:
    float[] mAspectRatio -> a
    float[] mAspectRatioPreview -> b
    float[] mOrientationM -> c
    int mPreviewWidth -> d
    int mPreviewHeight -> e
    int mGLSurfaceWidth -> f
    int mGLSurfaceHeight -> g
    int mDeviceOrientation -> h
    byte[] mImageData -> i
    long mImageTime -> j
    float mCropScale -> k
    float[] mCropTranslate -> l
com.canruoxingchen.uglypic.camera.PmCameraFbo -> com.canruoxingchen.uglypic.camera.f:
    int mFrameBufferHandle -> a
    int mFrameBufferTextureHandler -> b
    int mWidth -> c
    int mHeight -> d
    void bind() -> a
    int getTexture() -> b
    void init(int,int,boolean) -> a
    void reset() -> c
com.canruoxingchen.uglypic.camera.PmCameraRender -> com.canruoxingchen.uglypic.camera.PmCameraRender:
    android.content.Context mContext -> a
    com.canruoxingchen.uglypic.camera.PmCameraFbo mFboExternal -> b
    com.canruoxingchen.uglypic.camera.PmCameraFbo mFboOffscreen -> c
    com.canruoxingchen.uglypic.camera.PmCameraRender$Observer mObserver -> d
    com.canruoxingchen.uglypic.camera.PmCameraData mPmCameraData -> e
    android.graphics.SurfaceTexture mSurfaceTexture -> f
    boolean mSurfaceTextureUpdate -> g
    float[] mSurfaceTextureTransformM -> h
    boolean mNeedReInitialize -> i
    boolean mHasFrameBuffer -> j
    void onResume() -> onResume
    void init(android.content.Context) -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void setObserver(com.canruoxingchen.uglypic.camera.PmCameraRender$Observer) -> setObserver
    void setPmCameraData(com.canruoxingchen.uglypic.camera.PmCameraData) -> setPmCameraData
com.canruoxingchen.uglypic.camera.PmCameraRender$Observer -> com.canruoxingchen.uglypic.camera.g:
    void onSurfaceTextureCreated(android.graphics.SurfaceTexture) -> a
com.canruoxingchen.uglypic.camera.PmCameraUtils -> com.canruoxingchen.uglypic.camera.h:
    java.lang.String getImagePathFromUri(android.content.Context,android.net.Uri) -> a
    java.lang.String getUriData(android.content.Context,android.net.Uri) -> b
    java.lang.String saveImageByUrl(android.content.Context,android.net.Uri,java.lang.String) -> a
    int getExifOrientation(java.lang.String) -> a
    long getFileSize(java.lang.String) -> b
com.canruoxingchen.uglypic.concurrent.ThreadPoolManager -> com.canruoxingchen.uglypic.a.a:
    com.canruoxingchen.uglypic.concurrent.ThreadPoolManager sInstance -> a
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.BlockingQueue sWorkQueue -> c
    java.util.concurrent.ThreadPoolExecutor mExecutor -> d
    com.canruoxingchen.uglypic.concurrent.ThreadPoolManager getInstance() -> a
    void execute(java.lang.Runnable) -> a
com.canruoxingchen.uglypic.concurrent.ThreadPoolManager$1 -> com.canruoxingchen.uglypic.a.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> b
    com.canruoxingchen.uglypic.concurrent.ThreadPoolManager this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.canruoxingchen.uglypic.dao.DaoManager -> com.canruoxingchen.uglypic.dao.DaoManager:
    java.lang.String TAG -> TAG
    com.canruoxingchen.uglypic.dao.DaoManager sInstance -> sInstance
    android.database.sqlite.SQLiteDatabase mDb -> mDb
    com.canruoxingchen.uglypic.dao.ReleaseOpenHelper mHelper -> mHelper
    com.canruoxingchen.uglypic.dao.DaoMaster mDaoMaster -> mDaoMaster
    com.canruoxingchen.uglypic.dao.DaoSession mDaoSession -> mDaoSession
    byte[] sLockObj -> sLockObj
    com.canruoxingchen.uglypic.dao.DaoManager getInstance(android.content.Context) -> getInstance
    java.lang.Object getDao(java.lang.Class) -> getDao
    void LOGD(java.lang.String) -> LOGD
com.canruoxingchen.uglypic.dao.DaoMaster -> com.canruoxingchen.uglypic.dao.DaoMaster:
    int SCHEMA_VERSION -> SCHEMA_VERSION
    void createAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> createAllTables
    void dropAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> dropAllTables
    com.canruoxingchen.uglypic.dao.DaoSession newSession() -> newSession
    com.canruoxingchen.uglypic.dao.DaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession() -> newSession
com.canruoxingchen.uglypic.dao.DaoMaster$DevOpenHelper -> com.canruoxingchen.uglypic.dao.DaoMaster$DevOpenHelper:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.canruoxingchen.uglypic.dao.DaoMaster$OpenHelper -> com.canruoxingchen.uglypic.dao.DaoMaster$OpenHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
com.canruoxingchen.uglypic.dao.DaoSession -> com.canruoxingchen.uglypic.dao.DaoSession:
    de.greenrobot.dao.internal.DaoConfig recentFootageDaoConfig -> recentFootageDaoConfig
    de.greenrobot.dao.internal.DaoConfig footAgeTypeDaoConfig -> footAgeTypeDaoConfig
    de.greenrobot.dao.internal.DaoConfig footageDaoConfig -> footageDaoConfig
    de.greenrobot.dao.internal.DaoConfig netSenceDaoConfig -> netSenceDaoConfig
    com.canruoxingchen.uglypic.dao.RecentFootageDao recentFootageDao -> recentFootageDao
    com.canruoxingchen.uglypic.dao.FootAgeTypeDao footAgeTypeDao -> footAgeTypeDao
    com.canruoxingchen.uglypic.dao.FootageDao footageDao -> footageDao
    com.canruoxingchen.uglypic.dao.NetSenceDao netSenceDao -> netSenceDao
    void clear() -> clear
    com.canruoxingchen.uglypic.dao.RecentFootageDao getRecentFootageDao() -> getRecentFootageDao
    com.canruoxingchen.uglypic.dao.FootAgeTypeDao getFootAgeTypeDao() -> getFootAgeTypeDao
    com.canruoxingchen.uglypic.dao.FootageDao getFootageDao() -> getFootageDao
    com.canruoxingchen.uglypic.dao.NetSenceDao getNetSenceDao() -> getNetSenceDao
com.canruoxingchen.uglypic.dao.FootAgeType -> com.canruoxingchen.uglypic.dao.FootAgeType:
    java.lang.String objectId -> objectId
    java.lang.String typeName -> typeName
    java.lang.String oldName -> oldName
    java.lang.Integer isDefault -> isDefault
    java.lang.Integer orderNum -> orderNum
    java.lang.Integer typeTarget -> typeTarget
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getTypeName() -> getTypeName
    void setTypeName(java.lang.String) -> setTypeName
    java.lang.String getOldName() -> getOldName
    void setOldName(java.lang.String) -> setOldName
    java.lang.Integer getIsDefault() -> getIsDefault
    void setIsDefault(java.lang.Integer) -> setIsDefault
    java.lang.Integer getOrderNum() -> getOrderNum
    void setOrderNum(java.lang.Integer) -> setOrderNum
    java.lang.Integer getTypeTarget() -> getTypeTarget
    void setTypeTarget(java.lang.Integer) -> setTypeTarget
com.canruoxingchen.uglypic.dao.FootAgeTypeDao -> com.canruoxingchen.uglypic.dao.FootAgeTypeDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,com.canruoxingchen.uglypic.dao.FootAgeType) -> bindValues
    java.lang.String readKey(android.database.Cursor,int) -> readKey
    com.canruoxingchen.uglypic.dao.FootAgeType readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,com.canruoxingchen.uglypic.dao.FootAgeType,int) -> readEntity
    java.lang.String updateKeyAfterInsert(com.canruoxingchen.uglypic.dao.FootAgeType,long) -> updateKeyAfterInsert
    java.lang.String getKey(com.canruoxingchen.uglypic.dao.FootAgeType) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
com.canruoxingchen.uglypic.dao.FootAgeTypeDao$Properties -> com.canruoxingchen.uglypic.dao.FootAgeTypeDao$Properties:
    de.greenrobot.dao.Property ObjectId -> ObjectId
    de.greenrobot.dao.Property TypeName -> TypeName
    de.greenrobot.dao.Property OldName -> OldName
    de.greenrobot.dao.Property IsDefault -> IsDefault
    de.greenrobot.dao.Property OrderNum -> OrderNum
    de.greenrobot.dao.Property TypeTarget -> TypeTarget
com.canruoxingchen.uglypic.dao.Footage -> com.canruoxingchen.uglypic.dao.Footage:
    java.lang.String objectId -> objectId
    java.lang.String footageIcon -> footageIcon
    java.lang.String footageIconName -> footageIconName
    java.lang.Integer footageOrderNum -> footageOrderNum
    java.lang.String footageParentId -> footageParentId
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getFootageIcon() -> getFootageIcon
    void setFootageIcon(java.lang.String) -> setFootageIcon
    java.lang.String getFootageIconName() -> getFootageIconName
    void setFootageIconName(java.lang.String) -> setFootageIconName
    java.lang.Integer getFootageOrderNum() -> getFootageOrderNum
    void setFootageOrderNum(java.lang.Integer) -> setFootageOrderNum
    java.lang.String getFootageParentId() -> getFootageParentId
    void setFootageParentId(java.lang.String) -> setFootageParentId
com.canruoxingchen.uglypic.dao.FootageDao -> com.canruoxingchen.uglypic.dao.FootageDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,com.canruoxingchen.uglypic.dao.Footage) -> bindValues
    java.lang.String readKey(android.database.Cursor,int) -> readKey
    com.canruoxingchen.uglypic.dao.Footage readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,com.canruoxingchen.uglypic.dao.Footage,int) -> readEntity
    java.lang.String updateKeyAfterInsert(com.canruoxingchen.uglypic.dao.Footage,long) -> updateKeyAfterInsert
    java.lang.String getKey(com.canruoxingchen.uglypic.dao.Footage) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
com.canruoxingchen.uglypic.dao.FootageDao$Properties -> com.canruoxingchen.uglypic.dao.FootageDao$Properties:
    de.greenrobot.dao.Property ObjectId -> ObjectId
    de.greenrobot.dao.Property FootageIcon -> FootageIcon
    de.greenrobot.dao.Property FootageIconName -> FootageIconName
    de.greenrobot.dao.Property FootageOrderNum -> FootageOrderNum
    de.greenrobot.dao.Property FootageParentId -> FootageParentId
com.canruoxingchen.uglypic.dao.NetSence -> com.canruoxingchen.uglypic.dao.NetSence:
    java.lang.String objectId -> objectId
    java.lang.String senceNetIcon -> senceNetIcon
    java.lang.String senceParentId -> senceParentId
    java.lang.Integer senceOrderNum -> senceOrderNum
    java.lang.String senceName -> senceName
    java.lang.String senceDescribe -> senceDescribe
    java.lang.String inputContent -> inputContent
    java.lang.String inputRect -> inputRect
    java.lang.String inputFontName -> inputFontName
    java.lang.Integer inputFontSize -> inputFontSize
    java.lang.Integer inputFontColor -> inputFontColor
    java.lang.Integer inputFontAlignment -> inputFontAlignment
    java.lang.String timeRect -> timeRect
    java.lang.String timeFontName -> timeFontName
    java.lang.Integer timeFontSize -> timeFontSize
    java.lang.Integer timeFontColor -> timeFontColor
    java.lang.Integer timeFontAlignment -> timeFontAlignment
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getSenceNetIcon() -> getSenceNetIcon
    void setSenceNetIcon(java.lang.String) -> setSenceNetIcon
    java.lang.String getSenceParentId() -> getSenceParentId
    void setSenceParentId(java.lang.String) -> setSenceParentId
    java.lang.Integer getSenceOrderNum() -> getSenceOrderNum
    void setSenceOrderNum(java.lang.Integer) -> setSenceOrderNum
    java.lang.String getSenceName() -> getSenceName
    void setSenceName(java.lang.String) -> setSenceName
    java.lang.String getSenceDescribe() -> getSenceDescribe
    void setSenceDescribe(java.lang.String) -> setSenceDescribe
    java.lang.String getInputContent() -> getInputContent
    void setInputContent(java.lang.String) -> setInputContent
    java.lang.String getInputRect() -> getInputRect
    void setInputRect(java.lang.String) -> setInputRect
    java.lang.String getInputFontName() -> getInputFontName
    void setInputFontName(java.lang.String) -> setInputFontName
    java.lang.Integer getInputFontSize() -> getInputFontSize
    void setInputFontSize(java.lang.Integer) -> setInputFontSize
    java.lang.Integer getInputFontColor() -> getInputFontColor
    void setInputFontColor(java.lang.Integer) -> setInputFontColor
    java.lang.Integer getInputFontAlignment() -> getInputFontAlignment
    void setInputFontAlignment(java.lang.Integer) -> setInputFontAlignment
    java.lang.String getTimeRect() -> getTimeRect
    void setTimeRect(java.lang.String) -> setTimeRect
    java.lang.String getTimeFontName() -> getTimeFontName
    void setTimeFontName(java.lang.String) -> setTimeFontName
    java.lang.Integer getTimeFontSize() -> getTimeFontSize
    void setTimeFontSize(java.lang.Integer) -> setTimeFontSize
    java.lang.Integer getTimeFontColor() -> getTimeFontColor
    void setTimeFontColor(java.lang.Integer) -> setTimeFontColor
    java.lang.Integer getTimeFontAlignment() -> getTimeFontAlignment
    void setTimeFontAlignment(java.lang.Integer) -> setTimeFontAlignment
com.canruoxingchen.uglypic.dao.NetSenceDao -> com.canruoxingchen.uglypic.dao.NetSenceDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,com.canruoxingchen.uglypic.dao.NetSence) -> bindValues
    java.lang.String readKey(android.database.Cursor,int) -> readKey
    com.canruoxingchen.uglypic.dao.NetSence readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,com.canruoxingchen.uglypic.dao.NetSence,int) -> readEntity
    java.lang.String updateKeyAfterInsert(com.canruoxingchen.uglypic.dao.NetSence,long) -> updateKeyAfterInsert
    java.lang.String getKey(com.canruoxingchen.uglypic.dao.NetSence) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
com.canruoxingchen.uglypic.dao.NetSenceDao$Properties -> com.canruoxingchen.uglypic.dao.NetSenceDao$Properties:
    de.greenrobot.dao.Property ObjectId -> ObjectId
    de.greenrobot.dao.Property SenceNetIcon -> SenceNetIcon
    de.greenrobot.dao.Property SenceParentId -> SenceParentId
    de.greenrobot.dao.Property SenceOrderNum -> SenceOrderNum
    de.greenrobot.dao.Property SenceName -> SenceName
    de.greenrobot.dao.Property SenceDescribe -> SenceDescribe
    de.greenrobot.dao.Property InputContent -> InputContent
    de.greenrobot.dao.Property InputRect -> InputRect
    de.greenrobot.dao.Property InputFontName -> InputFontName
    de.greenrobot.dao.Property InputFontSize -> InputFontSize
    de.greenrobot.dao.Property InputFontColor -> InputFontColor
    de.greenrobot.dao.Property InputFontAlignment -> InputFontAlignment
    de.greenrobot.dao.Property TimeRect -> TimeRect
    de.greenrobot.dao.Property TimeFontName -> TimeFontName
    de.greenrobot.dao.Property TimeFontSize -> TimeFontSize
    de.greenrobot.dao.Property TimeFontColor -> TimeFontColor
    de.greenrobot.dao.Property TimeFontAlignment -> TimeFontAlignment
com.canruoxingchen.uglypic.dao.RecentFootage -> com.canruoxingchen.uglypic.dao.RecentFootage:
    java.lang.String objectId -> objectId
    java.lang.Long accessTime -> accessTime
    java.lang.Integer footageType -> footageType
    java.lang.String json -> json
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.Long getAccessTime() -> getAccessTime
    void setAccessTime(java.lang.Long) -> setAccessTime
    java.lang.Integer getFootageType() -> getFootageType
    void setFootageType(java.lang.Integer) -> setFootageType
    java.lang.String getJson() -> getJson
    void setJson(java.lang.String) -> setJson
com.canruoxingchen.uglypic.dao.RecentFootageDao -> com.canruoxingchen.uglypic.dao.RecentFootageDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,com.canruoxingchen.uglypic.dao.RecentFootage) -> bindValues
    java.lang.String readKey(android.database.Cursor,int) -> readKey
    com.canruoxingchen.uglypic.dao.RecentFootage readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,com.canruoxingchen.uglypic.dao.RecentFootage,int) -> readEntity
    java.lang.String updateKeyAfterInsert(com.canruoxingchen.uglypic.dao.RecentFootage,long) -> updateKeyAfterInsert
    java.lang.String getKey(com.canruoxingchen.uglypic.dao.RecentFootage) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
com.canruoxingchen.uglypic.dao.RecentFootageDao$Properties -> com.canruoxingchen.uglypic.dao.RecentFootageDao$Properties:
    de.greenrobot.dao.Property ObjectId -> ObjectId
    de.greenrobot.dao.Property AccessTime -> AccessTime
    de.greenrobot.dao.Property FootageType -> FootageType
    de.greenrobot.dao.Property Json -> Json
com.canruoxingchen.uglypic.dao.ReleaseOpenHelper -> com.canruoxingchen.uglypic.dao.ReleaseOpenHelper:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void dropTables(android.database.sqlite.SQLiteDatabase,boolean) -> dropTables
    void updateTables(android.database.sqlite.SQLiteDatabase) -> updateTables
com.canruoxingchen.uglypic.footage.FootAge -> com.canruoxingchen.uglypic.footage.FootAge:
    java.lang.String CLASS_NAME -> CLASS_NAME
    java.lang.String COLUMN_FOOTAGE_ICON -> COLUMN_FOOTAGE_ICON
    java.lang.String COLUMN_FOOTAGE_PARENT_ID -> COLUMN_FOOTAGE_PARENT_ID
    java.lang.String COLUMN_FOOTAGE_OBJECT_ID -> COLUMN_FOOTAGE_OBJECT_ID
    java.lang.String COLUMN_FOOTAGE_ICON_NAME -> COLUMN_FOOTAGE_ICON_NAME
    java.lang.String COLUMN_FOOTAGE_ORDER_NUM -> COLUMN_FOOTAGE_ORDER_NUM
    java.lang.String COLUMN_FOOTAGE_USE_NUM_ANDROID -> COLUMN_FOOTAGE_USE_NUM_ANDROID
    java.lang.String mObjectId -> mObjectId
    java.lang.String mParentId -> mParentId
    java.lang.String mIconUrl -> mIconUrl
    java.lang.String mIconName -> mIconName
    int mOrderNum -> mOrderNum
    com.avos.avoscloud.AVObject mAVObject -> mAVObject
    void setAVObject(com.avos.avoscloud.AVObject) -> setAVObject
    com.avos.avoscloud.AVObject getAVObject() -> getAVObject
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getParentId() -> getParentId
    void setParentId(java.lang.String) -> setParentId
    java.lang.String getIconUrl() -> getIconUrl
    void setIconUrl(java.lang.String) -> setIconUrl
    java.lang.String getIconName() -> getIconName
    void setIconName(java.lang.String) -> setIconName
    int getOrderNum() -> getOrderNum
    void setOrderNum(int) -> setOrderNum
    java.lang.String toString() -> toString
    int compareTo(com.canruoxingchen.uglypic.footage.FootAge) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.canruoxingchen.uglypic.footage.FootAgeType -> com.canruoxingchen.uglypic.footage.a:
    com.canruoxingchen.uglypic.footage.FootAgeType RECENT_TYPE -> a
    java.lang.String mObjectId -> b
    java.lang.String mTypeName -> c
    java.lang.String mOldName -> d
    int mIsDefault -> e
    int mOrderNum -> f
    int mTypeTarget -> g
    java.lang.String getObjectId() -> a
    java.lang.String getTypeName() -> b
    java.lang.String getOldName() -> c
    int getIsDefault() -> d
    int getOrderNum() -> e
    int getTypeTarget() -> f
    int compareTo(com.canruoxingchen.uglypic.footage.FootAgeType) -> a
    int compareTo(java.lang.Object) -> compareTo
com.canruoxingchen.uglypic.footage.FootageManager -> com.canruoxingchen.uglypic.footage.b:
    com.canruoxingchen.uglypic.footage.FootageManager sIntance -> a
    byte[] sLock -> b
    android.content.Context mContext -> c
    com.canruoxingchen.uglypic.footage.FootageManager getInstance(android.content.Context) -> a
    void saveRecentFootage(com.canruoxingchen.uglypic.footage.FootAge) -> a
    void saveRecentFootage(com.canruoxingchen.uglypic.footage.NetSence) -> a
    void loadRecentFootages() -> a
    void loadFootageTypeFromLocal() -> b
    void loadFootageTypeFromServer() -> c
    void loadLocalFootages(java.lang.String) -> a
    void loadFootagesFromServer(java.lang.String) -> b
    void loadLocalScenes(java.lang.String) -> c
    java.lang.String numFormat(java.lang.String) -> e
    int parseColor(java.lang.String) -> f
    void loadScenesFromServer(java.lang.String) -> d
    void LOGD(java.lang.String) -> g
    android.content.Context access$000(com.canruoxingchen.uglypic.footage.FootageManager) -> a
    void access$100(com.canruoxingchen.uglypic.footage.FootageManager,java.lang.String) -> a
    java.lang.String access$300(com.canruoxingchen.uglypic.footage.FootageManager,java.lang.String) -> b
    int access$400(com.canruoxingchen.uglypic.footage.FootageManager,java.lang.String) -> c
com.canruoxingchen.uglypic.footage.FootageManager$1 -> com.canruoxingchen.uglypic.footage.c:
    com.canruoxingchen.uglypic.dao.RecentFootage val$recent -> a
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$2 -> com.canruoxingchen.uglypic.footage.d:
    com.canruoxingchen.uglypic.dao.RecentFootage val$recent -> a
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$3 -> com.canruoxingchen.uglypic.footage.e:
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$4 -> com.canruoxingchen.uglypic.footage.f:
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$5 -> com.canruoxingchen.uglypic.footage.g:
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.canruoxingchen.uglypic.footage.FootageManager$6 -> com.canruoxingchen.uglypic.footage.h:
    java.lang.String val$objectId -> a
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$7 -> com.canruoxingchen.uglypic.footage.i:
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.canruoxingchen.uglypic.footage.FootageManager$8 -> com.canruoxingchen.uglypic.footage.j:
    java.lang.String val$objectId -> a
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> b
    void run() -> run
com.canruoxingchen.uglypic.footage.FootageManager$9 -> com.canruoxingchen.uglypic.footage.k:
    com.canruoxingchen.uglypic.footage.FootageManager this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.canruoxingchen.uglypic.footage.FootageManager$FootageAVOComparator -> com.canruoxingchen.uglypic.footage.l:
    int compare(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.canruoxingchen.uglypic.footage.FootageManager$NetSceneAVOComparator -> com.canruoxingchen.uglypic.footage.m:
    int compare(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.canruoxingchen.uglypic.footage.NetSence -> com.canruoxingchen.uglypic.footage.NetSence:
    java.lang.String CLASS_NAME -> CLASS_NAME
    java.lang.String COLUMN_OBJECT_ID -> COLUMN_OBJECT_ID
    java.lang.String COLUMN_SENCE_NET_ICON -> COLUMN_SENCE_NET_ICON
    java.lang.String COLUMN_SENCE_PARENT_ID -> COLUMN_SENCE_PARENT_ID
    java.lang.String COLUMN_SENCE_ORDER_NUM -> COLUMN_SENCE_ORDER_NUM
    java.lang.String COLUMN_SENCE_NAME -> COLUMN_SENCE_NAME
    java.lang.String COLUMN_SENCE_DESCRIBE -> COLUMN_SENCE_DESCRIBE
    java.lang.String COLUMN_INPUT_CONTENT -> COLUMN_INPUT_CONTENT
    java.lang.String COLUMN_INPUT_RECT -> COLUMN_INPUT_RECT
    java.lang.String COLUMN_INPUT_FONT_NAME -> COLUMN_INPUT_FONT_NAME
    java.lang.String COLUMN_INPUT_FONT_SIZE -> COLUMN_INPUT_FONT_SIZE
    java.lang.String COLUMN_INPUT_FONT_COLOR -> COLUMN_INPUT_FONT_COLOR
    java.lang.String COLUMN_INPUT_FONT_ALIGNMENT -> COLUMN_INPUT_FONT_ALIGNMENT
    java.lang.String COLUMN_TIME_RECT -> COLUMN_TIME_RECT
    java.lang.String COLUMN_TIME_FONT_NAME -> COLUMN_TIME_FONT_NAME
    java.lang.String COLUMN_TIME_FONT_SIZE -> COLUMN_TIME_FONT_SIZE
    java.lang.String COLUMN_TIME_FONT_COLOR -> COLUMN_TIME_FONT_COLOR
    java.lang.String COLUMN_TIME_FONT_ALIGNMENT -> COLUMN_TIME_FONT_ALIGNMENT
    java.lang.String COLUMN_NET_SCENE_USER_NUM -> COLUMN_NET_SCENE_USER_NUM
    java.lang.String mObjectId -> mObjectId
    java.lang.String mSenceNetIcon -> mSenceNetIcon
    java.lang.String mSenceParentId -> mSenceParentId
    java.lang.Integer mSenceOrderNum -> mSenceOrderNum
    java.lang.String mSenceName -> mSenceName
    java.lang.String mSenceDescribe -> mSenceDescribe
    java.lang.String mInputContent -> mInputContent
    java.lang.String mInputRect -> mInputRect
    java.lang.String mInputFontName -> mInputFontName
    java.lang.Integer mInputFontSize -> mInputFontSize
    java.lang.Integer mInputFontColor -> mInputFontColor
    java.lang.Integer mInputFontAlignment -> mInputFontAlignment
    java.lang.String mTimeRect -> mTimeRect
    java.lang.String mTimeFontName -> mTimeFontName
    java.lang.Integer mTimeFontSize -> mTimeFontSize
    java.lang.Integer mTimeFontColor -> mTimeFontColor
    java.lang.Integer mTimeFontAlignment -> mTimeFontAlignment
    com.avos.avoscloud.AVObject mAVObject -> mAVObject
    com.canruoxingchen.uglypic.footage.NetSence DEFAULT -> DEFAULT
    void setAVObject(com.avos.avoscloud.AVObject) -> setAVObject
    com.avos.avoscloud.AVObject getAVObject() -> getAVObject
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getSenceNetIcon() -> getSenceNetIcon
    void setSenceNetIcon(java.lang.String) -> setSenceNetIcon
    java.lang.String getSenceParentId() -> getSenceParentId
    void setSenceParentId(java.lang.String) -> setSenceParentId
    java.lang.Integer getSenceOrderNum() -> getSenceOrderNum
    void setSenceOrderNum(java.lang.Integer) -> setSenceOrderNum
    java.lang.String getSenceName() -> getSenceName
    void setSenceName(java.lang.String) -> setSenceName
    java.lang.String getSenceDescribe() -> getSenceDescribe
    void setSenceDescribe(java.lang.String) -> setSenceDescribe
    java.lang.String getInputContent() -> getInputContent
    void setInputContent(java.lang.String) -> setInputContent
    java.lang.String getInputRect() -> getInputRect
    void setInputRect(java.lang.String) -> setInputRect
    java.lang.String getInputFontName() -> getInputFontName
    void setInputFontName(java.lang.String) -> setInputFontName
    java.lang.Integer getInputFontSize() -> getInputFontSize
    void setInputFontSize(java.lang.Integer) -> setInputFontSize
    java.lang.Integer getInputFontColor() -> getInputFontColor
    void setInputFontColor(java.lang.Integer) -> setInputFontColor
    java.lang.Integer getInputFontAlignment() -> getInputFontAlignment
    void setInputFontAlignment(java.lang.Integer) -> setInputFontAlignment
    java.lang.String getTimeRect() -> getTimeRect
    void setTimeRect(java.lang.String) -> setTimeRect
    java.lang.String getTimeFontName() -> getTimeFontName
    void setTimeFontName(java.lang.String) -> setTimeFontName
    java.lang.Integer getTimeFontSize() -> getTimeFontSize
    void setTimeFontSize(java.lang.Integer) -> setTimeFontSize
    java.lang.Integer getTimeFontColor() -> getTimeFontColor
    void setTimeFontColor(java.lang.Integer) -> setTimeFontColor
    java.lang.Integer getTimeFontAlignment() -> getTimeFontAlignment
    void setTimeFontAlignment(java.lang.Integer) -> setTimeFontAlignment
    android.graphics.Rect getInputRectBounds() -> getInputRectBounds
    android.graphics.Rect getTimeRectBounds() -> getTimeRectBounds
    int compareTo(com.canruoxingchen.uglypic.footage.NetSence) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.canruoxingchen.uglypic.footage.RecentFootAge -> com.canruoxingchen.uglypic.footage.RecentFootAge:
    java.lang.String mObjectId -> mObjectId
    long mAccessTime -> mAccessTime
    int mType -> mType
    java.lang.String mJson -> mJson
    java.lang.String getJson() -> getJson
    void setJson(java.lang.String) -> setJson
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    long getAccessTime() -> getAccessTime
    void setAccessTime(long) -> setAccessTime
    int getType() -> getType
    void setType(int) -> setType
    int compareTo(com.canruoxingchen.uglypic.footage.RecentFootAge) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.canruoxingchen.uglypic.overlay.ContrastImageOperation -> com.canruoxingchen.uglypic.b.a:
    int mValue -> a
    int getMax() -> a
    int getValue() -> b
    void setValue(int) -> a
com.canruoxingchen.uglypic.overlay.EditorContainerView -> com.canruoxingchen.uglypic.b.b:
    android.view.View mViewBack -> a
    android.view.View mViewFinish -> b
    android.view.View mViewRedo -> c
    android.view.View mViewRegret -> d
    android.view.ViewGroup mVgEditorContainer -> e
    android.view.View mEditorView -> f
    com.canruoxingchen.uglypic.overlay.IEditor mEditor -> g
    com.canruoxingchen.uglypic.overlay.EditorContainerView$VisibilityChangeListener mVisibilityChangeListener -> h
    void setVisibilityChangeListener(com.canruoxingchen.uglypic.overlay.EditorContainerView$VisibilityChangeListener) -> setVisibilityChangeListener
    void setVisibility(int) -> setVisibility
    void initView() -> b
    void setEditorView(android.view.View) -> setEditorView
    com.canruoxingchen.uglypic.overlay.IEditor getEditor() -> getEditor
    void onClick(android.view.View) -> onClick
    void onRegretStatusChanged() -> a
com.canruoxingchen.uglypic.overlay.EditorContainerView$VisibilityChangeListener -> com.canruoxingchen.uglypic.b.c:
    void onVisible() -> a
    void onInvisible() -> b
com.canruoxingchen.uglypic.overlay.EraseWidthPanel -> com.canruoxingchen.uglypic.b.d:
    int[] ERASER_WIDTH -> a
    java.util.List mImgViews -> b
    boolean mInitialized -> c
    com.canruoxingchen.uglypic.overlay.EraseWidthPanel$OnWidthSelectedListener mListener -> d
    void setOnWidthSelectedListener(com.canruoxingchen.uglypic.overlay.EraseWidthPanel$OnWidthSelectedListener) -> setOnWidthSelectedListener
    int getDefaultWidth() -> getDefaultWidth
    void onLayout(boolean,int,int,int,int) -> onLayout
    void init() -> a
    void access$000(com.canruoxingchen.uglypic.overlay.EraseWidthPanel) -> a
    java.util.List access$100(com.canruoxingchen.uglypic.overlay.EraseWidthPanel) -> b
    com.canruoxingchen.uglypic.overlay.EraseWidthPanel$OnWidthSelectedListener access$200(com.canruoxingchen.uglypic.overlay.EraseWidthPanel) -> c
com.canruoxingchen.uglypic.overlay.EraseWidthPanel$1 -> com.canruoxingchen.uglypic.b.e:
    com.canruoxingchen.uglypic.overlay.EraseWidthPanel this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.overlay.EraseWidthPanel$2 -> com.canruoxingchen.uglypic.b.f:
    android.widget.ImageView val$iv -> a
    int val$width -> b
    com.canruoxingchen.uglypic.overlay.EraseWidthPanel this$0 -> c
    void onClick(android.view.View) -> onClick
com.canruoxingchen.uglypic.overlay.EraseWidthPanel$OnWidthSelectedListener -> com.canruoxingchen.uglypic.b.g:
    void onWidthSelected(int) -> a
com.canruoxingchen.uglypic.overlay.IEditor -> com.canruoxingchen.uglypic.b.h:
    void onCancel() -> a
    void onRegret() -> b
    void onRedo() -> c
    void onFinish() -> d
    boolean hasMoreRegret() -> e
    boolean hasMoreRedo() -> f
com.canruoxingchen.uglypic.overlay.IOverlay -> com.canruoxingchen.uglypic.b.i:
    android.view.View getView() -> a
    void setOverlaySelected(boolean) -> a
    boolean isOverlaySelected() -> b
com.canruoxingchen.uglypic.overlay.IlluminationImageOperation -> com.canruoxingchen.uglypic.b.j:
    int MAX -> a
    int MIN -> b
    int DEFAULT -> c
    int SCALE -> d
    int mValue -> e
    int getMax() -> a
    int getValue() -> b
    void setValue(int) -> a
com.canruoxingchen.uglypic.overlay.ImageOverlayContextView -> com.canruoxingchen.uglypic.b.k:
    android.widget.Button mBtnIllumination -> a
    android.widget.Button mBtnContrast -> b
    android.widget.Button mBtnSatuation -> c
    android.widget.SeekBar mSbIllumination -> d
    android.widget.SeekBar mSbContrast -> e
    android.widget.SeekBar mSbSatuation -> f
    com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$IlluminationChangedListener mIlluminationListener -> g
    com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$ContrastChangedListener mContrastListener -> h
    com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$SatuationChangedListener mSatuationListner -> i
    com.canruoxingchen.uglypic.overlay.SingleParamImageOperation mIllumination -> j
    com.canruoxingchen.uglypic.overlay.SingleParamImageOperation mContrast -> k
    com.canruoxingchen.uglypic.overlay.SingleParamImageOperation mSatuation -> l
    void initView() -> b
    void setIlluminationChangedListener(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$IlluminationChangedListener) -> setIlluminationChangedListener
    void setContrastChangedListener(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$ContrastChangedListener) -> setContrastChangedListener
    void setSatuationChangedListener(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$SatuationChangedListener) -> setSatuationChangedListener
    void onClick(android.view.View) -> onClick
    void reset() -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void resetAllBtnAndSeekbars() -> c
com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$ContrastChangedListener -> com.canruoxingchen.uglypic.b.l:
    void onContrastChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> a
com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$IlluminationChangedListener -> com.canruoxingchen.uglypic.b.m:
    void onIlluminationChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> b
com.canruoxingchen.uglypic.overlay.ImageOverlayContextView$SatuationChangedListener -> com.canruoxingchen.uglypic.b.n:
    void onSatuationChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> c
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay -> com.canruoxingchen.uglypic.b.o:
    int[] ERASER_WIDTH -> b
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView mAivImage -> c
    android.content.Context mContext -> d
    boolean mSelected -> e
    com.canruoxingchen.uglypic.overlay.ImageOverlayContextView mContextView -> f
    android.net.Uri mUri -> g
    float mScaleX -> h
    float mScaleY -> i
    float mTranslateX -> j
    float mTranslateY -> k
    float mRotate -> l
    android.widget.RelativeLayout$LayoutParams getDefaultParams() -> c
    android.view.View getView() -> a
    android.view.View initContentView() -> d
    android.graphics.Rect getInitialContentBounds() -> e
    void translate(int,int) -> a
    void scale(float,float) -> a
    void rotate(float) -> a
    void setOverlaySelected(boolean) -> a
    boolean isOverlaySelected() -> b
    void flip() -> f
    boolean isFlipable() -> g
    void LOGD(java.lang.String) -> b
    android.view.View getContextView() -> h
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseModeParams getEraseModeParams() -> w
    void startErase(int) -> a
    void reset() -> i
    void enableEraseMode() -> x
    void disableEraseMode() -> y
    void onSatuationChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> c
    void onContrastChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> a
    void onIlluminationChanged(com.canruoxingchen.uglypic.overlay.ImageOverlayContextView,int) -> b
    int[] access$200() -> j
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView access$300(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay) -> a
    void access$600(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay) -> b
    com.canruoxingchen.uglypic.overlay.ImageOverlayContextView access$700(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay) -> c
    android.net.Uri access$1300(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay) -> d
    void access$1400(java.lang.String) -> a
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$1 -> com.canruoxingchen.uglypic.b.p:
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView -> com.canruoxingchen.uglypic.b.q:
    android.graphics.Paint mPaint -> b
    boolean mEraserMode -> c
    android.graphics.Paint mEraserPaint -> d
    android.graphics.Path mCurrentPath -> e
    float mLastX -> f
    float mLastY -> g
    int mCurrentStrokeWidth -> h
    java.util.List mRecords -> i
    int mPathIndex -> j
    java.util.List mOperations -> k
    android.graphics.Bitmap mImage -> l
    android.graphics.Bitmap mEraseableImage -> m
    android.graphics.Canvas mEraseableCanvas -> n
    android.graphics.ColorMatrix mColorMatrix -> o
    android.graphics.ColorMatrix mSatuationMatrix -> p
    float mIllumination -> q
    float mSatuation -> r
    float mContrast -> s
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay this$0 -> a
    void setEraserMode(boolean) -> a
    void reset() -> a
    void setContrast(int) -> a
    void setSatuation(int) -> b
    void setIllumination(int) -> c
    void flip() -> b
    void copyImage() -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    boolean hasMoreRegret() -> d
    boolean hasMoreRedo() -> e
    void setCurrentStrokeWidth(int) -> d
    void regret() -> f
    void redo() -> g
    void touchStart(float,float) -> a
    void touchMove(float,float) -> b
    void touchUp(float,float) -> c
    void saveEraserResult() -> h
    void drawOnErasableImage() -> i
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void access$000(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> a
    void access$400(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView,int) -> a
    void access$500(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView,boolean) -> a
    boolean access$800(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> b
    void access$900(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> c
    boolean access$1000(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> d
    void access$1100(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> e
    void access$1200(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> f
    void access$1600(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView) -> g
    void access$1700(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView,int) -> b
    void access$1800(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView,int) -> c
    void access$1900(com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$CopyOnWriteImageView,int) -> d
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseImageEditorView -> com.canruoxingchen.uglypic.b.r:
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseWidthAdapter mAdapter -> b
    int mPanelHeight -> c
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay this$0 -> a
    void initView() -> g
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCancel() -> a
    void onRegret() -> b
    void onRedo() -> c
    void onFinish() -> d
    boolean hasMoreRegret() -> e
    boolean hasMoreRedo() -> f
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseImageEditorView$1 -> com.canruoxingchen.uglypic.b.s:
    com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseImageEditorView this$1 -> a
    void onWidthSelected(int) -> a
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseModeParams -> com.canruoxingchen.uglypic.b.t:
    float scaleX -> a
    float scaleY -> b
    float pivotX -> c
    float pivotY -> d
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseRecord -> com.canruoxingchen.uglypic.b.u:
    android.graphics.Path path -> a
    int strokeWidth -> b
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseWidthAdapter -> com.canruoxingchen.uglypic.b.v:
    int[] mWidths -> a
    int mCurrentWidth -> b
    float mDensity -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.canruoxingchen.uglypic.overlay.ImageWidgetOverlay$EraseWidthViewHolder -> com.canruoxingchen.uglypic.b.w:
    android.widget.TextView tvWidth -> a
com.canruoxingchen.uglypic.overlay.ObjectOverlay -> com.canruoxingchen.uglypic.b.x:
    float mDensity -> a
    android.graphics.Matrix mMatrix -> b
    float mRotateDegrees -> c
    boolean mControlPointSelected -> d
    boolean mFlipPointSelected -> e
    android.view.View mEditorPanel -> f
    boolean mHasBeenSelected -> g
    com.canruoxingchen.uglypic.overlay.EditorContainerView mEditorContainer -> h
    com.canruoxingchen.uglypic.overlay.ObjectOverlay$ObjectOperationListener mObjectOperationListener -> i
    android.view.ViewGroup mContainerView -> j
    android.graphics.Bitmap mFlipBtn -> k
    android.graphics.Bitmap mRotateBtn -> l
    void setOperationListener(com.canruoxingchen.uglypic.overlay.ObjectOverlay$ObjectOperationListener) -> a
    void setEditorContainerView(com.canruoxingchen.uglypic.overlay.EditorContainerView) -> a
    com.canruoxingchen.uglypic.overlay.EditorContainerView getEditorContainerView() -> k
    void setEditorPanel(android.view.View) -> a
    void setHasBeenSelected(boolean) -> b
    android.view.View getEditorPanel() -> l
    boolean isFlipable() -> g
    void flip() -> f
    android.graphics.Rect getInitialContentBounds() -> e
    android.view.View getContextView() -> h
    void retrieveDensity() -> m
    android.view.View getContainerView(android.content.Context) -> a
    android.widget.RelativeLayout$LayoutParams getDefaultParams() -> c
    boolean contains(int,int) -> b
    android.graphics.Matrix getMatrix() -> n
    void translate(int,int) -> a
    void scale(float,float) -> a
    void rotate(float) -> a
    android.graphics.PointF getCenter() -> o
    android.graphics.PointF getControlButton() -> p
    android.graphics.PointF getFlipButton() -> q
    android.graphics.PointF getLeftBottom() -> r
    android.graphics.PointF getRightTop() -> s
    boolean isControlPointSelected() -> t
    boolean isDeletePointSelected() -> u
    boolean isFlipPointSelected() -> v
    float distance(float,float,float,float) -> a
    void checkKeyPointsSelectionStatus(int,int) -> c
    float access$000(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> a
    android.graphics.Bitmap access$100(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> b
    android.graphics.Bitmap access$200(com.canruoxingchen.uglypic.overlay.ObjectOverlay) -> c
com.canruoxingchen.uglypic.overlay.ObjectOverlay$ContainerView -> com.canruoxingchen.uglypic.b.y:
    android.graphics.Paint mPaint -> b
    android.graphics.Matrix mInvertMatrix -> c
    com.canruoxingchen.uglypic.overlay.ObjectOverlay this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void drawBtns(android.graphics.Canvas) -> a
com.canruoxingchen.uglypic.overlay.ObjectOverlay$ObjectOperationListener -> com.canruoxingchen.uglypic.b.z:
com.canruoxingchen.uglypic.overlay.SatuationImageOperation -> com.canruoxingchen.uglypic.b.aa:
    int mValue -> a
    int getMax() -> a
    int getValue() -> b
    void setValue(int) -> a
com.canruoxingchen.uglypic.overlay.SceneOverlay -> com.canruoxingchen.uglypic.b.ab:
    android.net.Uri DEFAULT_URI -> a
    android.net.Uri mSceneUri -> b
    boolean mSelected -> c
    boolean mHasText -> d
    android.content.Context mContext -> e
    float mTextViewLeft -> f
    float mTextViewTop -> g
    float mTextViewRight -> h
    float mTextViewBottom -> i
    int mTextSize -> j
    java.lang.String mTextHint -> k
    int mTextColor -> l
    int mTextGravity -> m
    java.lang.String mTextFontName -> n
    boolean mHasTime -> o
    float mTimeLeft -> p
    float mTimeTop -> q
    float mTimeRight -> r
    float mTimeBottom -> s
    int mTimeSize -> t
    int mTimeColor -> u
    int mTimeGravity -> v
    java.lang.String mTimeFontName -> w
    float mSreenScale -> x
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneSizeAquiredListener mSceneSizeAquiredListener -> y
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout mSceneLayout -> z
    void setViewSizeAdjustedListener(com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneSizeAquiredListener) -> a
    android.view.View getView() -> a
    void setCursorVisable(boolean) -> b
    void setOverlaySelected(boolean) -> a
    boolean isOverlaySelected() -> b
    android.net.Uri access$100() -> c
    boolean access$302(com.canruoxingchen.uglypic.overlay.SceneOverlay,boolean) -> a
    float access$402(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> a
    float access$502(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> b
    float access$602(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> c
    float access$702(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> d
    int access$802(com.canruoxingchen.uglypic.overlay.SceneOverlay,int) -> a
    java.lang.String access$902(com.canruoxingchen.uglypic.overlay.SceneOverlay,java.lang.String) -> a
    java.lang.String access$1002(com.canruoxingchen.uglypic.overlay.SceneOverlay,java.lang.String) -> b
    int access$1102(com.canruoxingchen.uglypic.overlay.SceneOverlay,int) -> b
    int access$1202(com.canruoxingchen.uglypic.overlay.SceneOverlay,int) -> c
    boolean access$1302(com.canruoxingchen.uglypic.overlay.SceneOverlay,boolean) -> b
    float access$1402(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> e
    float access$1502(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> f
    float access$1602(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> g
    float access$1702(com.canruoxingchen.uglypic.overlay.SceneOverlay,float) -> h
    int access$1802(com.canruoxingchen.uglypic.overlay.SceneOverlay,int) -> d
    java.lang.String access$1902(com.canruoxingchen.uglypic.overlay.SceneOverlay,java.lang.String) -> c
    int access$2002(com.canruoxingchen.uglypic.overlay.SceneOverlay,int) -> e
    android.net.Uri access$2200(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> a
    boolean access$300(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> b
    float access$600(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> c
    float access$400(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> d
    float access$700(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> e
    float access$500(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> f
    int access$1100(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> g
    int access$800(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> h
    java.lang.String access$900(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> i
    int access$1200(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> j
    java.lang.String access$1000(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> k
    boolean access$1300(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> l
    float access$1600(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> m
    float access$1400(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> n
    float access$1700(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> o
    float access$1500(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> p
    int access$2000(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> q
    int access$1800(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> r
    int access$2400(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> s
    java.lang.String access$1900(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> t
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneSizeAquiredListener access$2500(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> u
com.canruoxingchen.uglypic.overlay.SceneOverlay$1 -> com.canruoxingchen.uglypic.b.ac:
com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder -> com.canruoxingchen.uglypic.b.ad:
    com.canruoxingchen.uglypic.overlay.SceneOverlay scene -> a
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextBounds(int,int,int,int) -> a
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextSize(int) -> a
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextHint(java.lang.String) -> a
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextFontName(java.lang.String) -> b
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextColor(int) -> b
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTextAlignment(int) -> c
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTimeBounds(int,int,int,int) -> b
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTimeSize(int) -> d
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTimeFontName(java.lang.String) -> c
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTimeColor(int) -> e
    com.canruoxingchen.uglypic.overlay.SceneOverlay$Builder setTimeAlignment(int) -> f
    com.canruoxingchen.uglypic.overlay.SceneOverlay create() -> a
com.canruoxingchen.uglypic.overlay.SceneOverlay$GetSceneSizeTask -> com.canruoxingchen.uglypic.b.ae:
    java.lang.ref.WeakReference wSceneLayout -> a
    android.net.Uri mUri -> b
    void run() -> run
com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout -> com.canruoxingchen.uglypic.b.af:
    com.canruoxingchen.uglypic.cache.AsyncImageView mAivScene -> a
    android.widget.EditText mEtText -> b
    android.widget.TextView mTvTime -> c
    java.lang.ref.WeakReference mOverlay -> d
    android.content.Context mContext -> e
    boolean mViewAdded -> f
    boolean mLayoutFinished -> g
    boolean mSceneSizeAquired -> h
    float mSceneWidth -> i
    float mSceneHeight -> j
    float mDensity -> k
    void setSceneOverlay(com.canruoxingchen.uglypic.overlay.SceneOverlay) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void retrieveDensity() -> a
    void addViews() -> b
    void setSceneSize(int,int) -> a
    void access$000(com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout,com.canruoxingchen.uglypic.overlay.SceneOverlay) -> a
    android.widget.EditText access$2100(com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout) -> a
    void access$2300(com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout) -> b
    void access$2600(com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout,int,int) -> a
com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout$1 -> com.canruoxingchen.uglypic.b.ag:
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout$2 -> com.canruoxingchen.uglypic.b.ah:
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout$3 -> com.canruoxingchen.uglypic.b.ai:
    com.canruoxingchen.uglypic.overlay.SceneOverlay val$overlay -> a
    int val$sceneWidth -> b
    int val$sceneHeight -> c
    com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneLayout this$0 -> d
    void run() -> run
com.canruoxingchen.uglypic.overlay.SceneOverlay$SceneSizeAquiredListener -> com.canruoxingchen.uglypic.b.aj:
    void onSceneSizeAquired(int,int) -> a
com.canruoxingchen.uglypic.overlay.SingleParamImageOperation -> com.canruoxingchen.uglypic.b.ak:
    int getMax() -> a
    int getValue() -> b
    void setValue(int) -> a
com.canruoxingchen.uglypic.sns.SnsHelper -> com.canruoxingchen.uglypic.c.a:
    com.canruoxingchen.uglypic.sns.WeiboHelper mWeiboHelper -> a
    com.canruoxingchen.uglypic.sns.WeixinHelper mWeixinHelper -> b
    void onCreate(android.app.Activity,android.os.Bundle) -> a
    void onNewIntent(android.app.Activity,android.content.Intent) -> a
    void authorizeCallBack(int,int,android.content.Intent) -> a
    void authorizeToWeibo(android.app.Activity) -> a
    boolean hasWeiboAuthorized() -> a
    void shareToWeibo(java.lang.String,java.lang.String) -> a
    void shareToWeixin(java.lang.String,java.lang.String) -> b
    void shareToFriends(java.lang.String,java.lang.String) -> c
com.canruoxingchen.uglypic.sns.WeiboHelper -> com.canruoxingchen.uglypic.c.b:
    com.sina.weibo.sdk.auth.WeiboAuth mWeiboAuth -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> b
    com.canruoxingchen.uglypic.SettingManager mSettingManager -> c
    com.canruoxingchen.uglypic.MessageCenter mMessageCenter -> d
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> e
    com.sina.weibo.sdk.api.share.IWeiboShareAPI mWeiboShareAPI -> f
    boolean hasAuthorized() -> a
    void onCreate(android.app.Activity,android.os.Bundle) -> a
    void onNewIntent(android.app.Activity,android.content.Intent) -> a
    void authorizeCallBack(int,int,android.content.Intent) -> a
    void authorize(android.app.Activity) -> a
    void share(java.lang.String,java.lang.String) -> a
    com.sina.weibo.sdk.api.ImageObject createImageObj(java.lang.String) -> b
    com.sina.weibo.sdk.api.TextObject createTextObj(java.lang.String) -> c
    void LOGD(java.lang.String) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$002(com.canruoxingchen.uglypic.sns.WeiboHelper,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$000(com.canruoxingchen.uglypic.sns.WeiboHelper) -> a
    com.canruoxingchen.uglypic.SettingManager access$100(com.canruoxingchen.uglypic.sns.WeiboHelper) -> b
    com.canruoxingchen.uglypic.MessageCenter access$200(com.canruoxingchen.uglypic.sns.WeiboHelper) -> c
com.canruoxingchen.uglypic.sns.WeiboHelper$1 -> com.canruoxingchen.uglypic.c.c:
    com.canruoxingchen.uglypic.sns.WeiboHelper this$0 -> a
    void onCancel() -> a
com.canruoxingchen.uglypic.sns.WeiboHelper$AuthListener -> com.canruoxingchen.uglypic.c.d:
    com.canruoxingchen.uglypic.sns.WeiboHelper this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onCancel() -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.canruoxingchen.uglypic.sns.WeixinHelper -> com.canruoxingchen.uglypic.c.e:
    com.tencent.mm.sdk.openapi.IWXAPI mWXApi -> a
    void handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    void onCreate(android.app.Activity,android.os.Bundle) -> a
    void share(java.lang.String,java.lang.String,int) -> a
    void shareToFriends(java.lang.String,java.lang.String) -> a
    void shareToWeixin(java.lang.String,java.lang.String) -> b
    java.lang.String buildTransaction(java.lang.String) -> a
com.canruoxingchen.uglypic.sns.WeixinUtil -> com.canruoxingchen.uglypic.c.f:
    byte[] bmpToByteArray(android.graphics.Bitmap,boolean) -> a
    android.graphics.Bitmap extractThumbNail(java.lang.String,int,int,boolean) -> a
com.canruoxingchen.uglypic.statistics.StatisticsUtil -> com.canruoxingchen.uglypic.d.a:
    void increaseFootageCount(java.lang.String) -> a
    void increaseNetSceneCount(java.lang.String) -> b
    void saveFile(android.content.Context,java.lang.String) -> a
com.canruoxingchen.uglypic.statistics.StatisticsUtil$1 -> com.canruoxingchen.uglypic.d.b:
    java.lang.String val$path -> a
    java.lang.String val$imei -> b
    void run() -> run
com.canruoxingchen.uglypic.util.FileUtils -> com.canruoxingchen.uglypic.util.a:
    boolean copyFile(java.io.InputStream,java.io.OutputStream) -> a
    void closeQuietly(java.io.InputStream) -> a
    void closeQuietly(java.io.OutputStream) -> a
    java.lang.String createSdCardFile(java.lang.String) -> a
    boolean checkSdCardUserful() -> a
    void LOGD(java.lang.String) -> b
com.canruoxingchen.uglypic.util.ImageUtils -> com.canruoxingchen.uglypic.util.b:
    java.util.Map sImgMIMETypeDict -> a
    java.io.File getTempImageFile(java.lang.String) -> a
    android.graphics.Bitmap decode(android.content.Context,android.net.Uri) -> a
    android.graphics.Bitmap decode(android.content.ContentResolver,android.net.Uri) -> a
    android.graphics.Bitmap scaleDecode(android.content.ContentResolver,android.net.Uri,int,int,int) -> a
    android.graphics.Bitmap scaleDecode(java.lang.String,int,int) -> a
    java.lang.String getMIMETypeByExtention(android.net.Uri) -> a
    android.graphics.BitmapFactory$Options getImageInfo(android.content.Context,android.net.Uri) -> b
    android.graphics.BitmapFactory$Options getDecodeOptions(android.content.ContentResolver,android.net.Uri,int,int) -> a
    java.lang.String saveBitmapForLocalPath(android.content.Context,android.graphics.Bitmap,int,boolean) -> a
    android.net.Uri saveBitmapToGallery(android.content.Context,android.net.Uri,int) -> a
    int makeSample(java.io.File,int,int) -> a
    android.graphics.Bitmap loadBitmapWithSizeCheckAndBitmapReuse(java.io.File,android.graphics.Bitmap,int) -> a
com.canruoxingchen.uglypic.util.Logger -> com.canruoxingchen.uglypic.util.c:
    void i(java.lang.String) -> a
    void d(java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> a
com.canruoxingchen.uglypic.util.UiUtils -> com.canruoxingchen.uglypic.util.d:
    android.widget.Toast toast -> a
    void toastMessage(android.content.Context,int) -> a
    void toastMessage(android.content.Context,java.lang.String) -> a
com.canruoxingchen.uglypic.util.jni.NativeImageUtil -> com.canruoxingchen.uglypic.util.jni.NativeImageUtil:
    android.content.Context mContext -> mContext
    com.canruoxingchen.uglypic.util.jni.NativeImageUtil gInstance -> gInstance
    com.canruoxingchen.uglypic.util.jni.NativeImageUtil getInstance(android.content.Context) -> getInstance
    android.content.Context getContext() -> getContext
    int oesOnDrawFrame(int,float[]) -> oesOnDrawFrame
    int normalOnDrawFrame(int,int,float[],float[],float[],float,float[]) -> normalOnDrawFrame
    int saveCameraPhoto(java.lang.String,java.lang.String,int,int,int,int) -> saveCameraPhoto
    int saveCameraPhotoWithoutGL(java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> saveCameraPhotoWithoutGL
    int cropPhoto(java.lang.String,java.lang.String,float[],float[],float,int,int) -> cropPhoto
    int mergePhoto(java.lang.String,java.lang.String,java.lang.String,int,int,int,int) -> mergePhoto
    int processGaussianBlur(android.graphics.Bitmap) -> processGaussianBlur
    int cropPhotoWithoutGL(java.lang.String,java.lang.String,int,int,int,int,int,int) -> cropPhotoWithoutGL
    int onDestroy() -> onDestroy
    void test() -> test
com.canruoxingchen.uglypic.view.AnimationImageView -> com.canruoxingchen.uglypic.view.AnimationImageView:
    android.graphics.drawable.AnimationDrawable animationDrawable -> a
    android.view.ViewTreeObserver$OnPreDrawListener opdl -> b
    void init() -> a
    void setVisibility(int) -> setVisibility
com.canruoxingchen.uglypic.view.AnimationImageView$1 -> com.canruoxingchen.uglypic.view.a:
    com.canruoxingchen.uglypic.view.AnimationImageView this$0 -> a
    boolean onPreDraw() -> onPreDraw
com.canruoxingchen.uglypic.view.CropImageView -> com.canruoxingchen.uglypic.view.CropImageView:
    com.canruoxingchen.uglypic.view.CropImageView$CropMode mCropMode -> a
    android.graphics.PointF mCropStartPoint -> b
    float mCropInitDistance -> c
    android.graphics.RectF mOffset -> d
    android.graphics.Rect mHighlightRect -> e
    float mScale -> f
    float mMaxScale -> g
    boolean mIsFirst -> h
    android.graphics.drawable.BitmapDrawable mDrawable -> i
    int mOrientation -> j
    int mRealWidth -> k
    int mRealHeight -> l
    android.content.Context mContext -> m
    float mDensity -> n
    android.graphics.Paint mPaint -> o
    boolean mIsCrop -> p
    void init(android.content.Context) -> a
    void initMaxScale() -> b
    void setImagePath(java.lang.String) -> setImagePath
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setIsCrop(boolean) -> setIsCrop
    boolean isCrop() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    float distance(android.view.MotionEvent) -> a
    void checkBounds() -> c
    android.graphics.Rect getCropArea() -> getCropArea
    int getOrientation() -> getOrientation
    int access$000(com.canruoxingchen.uglypic.view.CropImageView) -> a
    android.graphics.drawable.BitmapDrawable access$102(com.canruoxingchen.uglypic.view.CropImageView,android.graphics.drawable.BitmapDrawable) -> a
    android.content.Context access$200(com.canruoxingchen.uglypic.view.CropImageView) -> b
com.canruoxingchen.uglypic.view.CropImageView$1 -> com.canruoxingchen.uglypic.view.b:
    java.lang.String val$filePath -> a
    com.canruoxingchen.uglypic.view.CropImageView val$imageView -> b
    com.canruoxingchen.uglypic.view.CropImageView this$0 -> c
    void run() -> run
com.canruoxingchen.uglypic.view.CropImageView$1$1 -> com.canruoxingchen.uglypic.view.c:
    android.graphics.Bitmap val$bitmap -> a
    com.canruoxingchen.uglypic.view.CropImageView$1 this$1 -> b
    void run() -> run
com.canruoxingchen.uglypic.view.CropImageView$CropMode -> com.canruoxingchen.uglypic.view.d:
    com.canruoxingchen.uglypic.view.CropImageView$CropMode NONE -> a
    com.canruoxingchen.uglypic.view.CropImageView$CropMode DRAG -> b
    com.canruoxingchen.uglypic.view.CropImageView$CropMode ZOOM -> c
    com.canruoxingchen.uglypic.view.CropImageView$CropMode[] $VALUES -> d
    com.canruoxingchen.uglypic.view.CropImageView$CropMode[] values() -> values
    com.canruoxingchen.uglypic.view.CropImageView$CropMode valueOf(java.lang.String) -> valueOf
com.canruoxingchen.uglypic.view.HorizontalListView -> com.canruoxingchen.uglypic.view.HorizontalListView:
    boolean mAlwaysOverrideTouch -> a
    android.widget.ListAdapter mAdapter -> b
    int mLeftViewIndex -> f
    int mRightViewIndex -> g
    int mCurrentX -> c
    int mNextX -> d
    int mMaxX -> h
    int mDisplayOffset -> i
    android.widget.Scroller mScroller -> e
    android.view.GestureDetector mGesture -> j
    java.util.Queue mRemovedViewQueue -> k
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> l
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> m
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClicked -> n
    boolean mDataChanged -> o
    android.database.DataSetObserver mDataObserver -> p
    android.view.GestureDetector$OnGestureListener mOnGesture -> q
    void initView() -> a
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> b
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> a
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void removeNonVisibleItems(int) -> b
    void positionItems(int) -> c
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    boolean access$002(com.canruoxingchen.uglypic.view.HorizontalListView,boolean) -> a
    void access$100(com.canruoxingchen.uglypic.view.HorizontalListView) -> a
    android.widget.AdapterView$OnItemClickListener access$200(com.canruoxingchen.uglypic.view.HorizontalListView) -> b
    int access$300(com.canruoxingchen.uglypic.view.HorizontalListView) -> c
    android.widget.AdapterView$OnItemSelectedListener access$400(com.canruoxingchen.uglypic.view.HorizontalListView) -> d
    android.widget.AdapterView$OnItemLongClickListener access$500(com.canruoxingchen.uglypic.view.HorizontalListView) -> e
com.canruoxingchen.uglypic.view.HorizontalListView$1 -> com.canruoxingchen.uglypic.view.e:
    com.canruoxingchen.uglypic.view.HorizontalListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.canruoxingchen.uglypic.view.HorizontalListView$2 -> com.canruoxingchen.uglypic.view.f:
    com.canruoxingchen.uglypic.view.HorizontalListView this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.view.HorizontalListView$3 -> com.canruoxingchen.uglypic.view.g:
    com.canruoxingchen.uglypic.view.HorizontalListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean isEventWithinView(android.view.MotionEvent,android.view.View) -> a
com.canruoxingchen.uglypic.view.SlipButton -> com.canruoxingchen.uglypic.view.SlipButton:
    boolean mIsOpen -> a
    boolean mOnSlip -> b
    float mDownX -> c
    float mNowX -> d
    android.graphics.Rect mBtnOnRect -> e
    android.graphics.Rect mBtnOffRect -> f
    com.canruoxingchen.uglypic.view.SlipButton$OnChangedListener mOnChangedListener -> g
    android.graphics.Bitmap mSlipBtnBg -> h
    android.graphics.Bitmap mLeftSlipBtn -> i
    android.graphics.Bitmap mLeftSlipBtnNormal -> j
    android.graphics.Bitmap mLeftSlipBtnPressed -> k
    android.graphics.Bitmap mRightSlipBtn -> l
    android.graphics.Bitmap mRightSlipBtnNormal -> m
    android.graphics.Bitmap mRightSlipBtnPressed -> n
    int mResIdBg -> o
    int mResIdLeftNormal -> p
    int mResIdLeftPressed -> q
    int mResIdRightNormal -> r
    int mResIdRightPressed -> s
    boolean mIsMoveAction -> t
    int mIgnoreRegion -> u
    android.content.Context mContext -> v
    int screenWidth -> w
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void SetOnChangedListener(com.canruoxingchen.uglypic.view.SlipButton$OnChangedListener) -> a
    void setStatus(boolean) -> setStatus
com.canruoxingchen.uglypic.view.SlipButton$OnChangedListener -> com.canruoxingchen.uglypic.view.h:
    void OnChanged(android.view.View,boolean) -> a
com.canruoxingchen.uglypic.wxapi.WXEntryActivity -> com.canruoxingchen.uglypic.wxapi.WXEntryActivity:
    com.canruoxingchen.uglypic.sns.WeixinHelper mWeixinHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> a
com.canruoxingchen.uglypic.wxapi.WXEntryActivity$1 -> com.canruoxingchen.uglypic.wxapi.a:
    com.canruoxingchen.uglypic.wxapi.WXEntryActivity this$0 -> a
    void run() -> run
com.canruoxingchen.uglypic.wxapi.WXEntryActivity$2 -> com.canruoxingchen.uglypic.wxapi.b:
    com.canruoxingchen.uglypic.wxapi.WXEntryActivity this$0 -> a
    void run() -> run
com.jakewharton.disklrucache.DiskLruCache -> com.jakewharton.disklrucache.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$000(com.jakewharton.disklrucache.DiskLruCache) -> access$000
    void access$100(com.jakewharton.disklrucache.DiskLruCache) -> access$100
    boolean access$200(com.jakewharton.disklrucache.DiskLruCache) -> access$200
    void access$300(com.jakewharton.disklrucache.DiskLruCache) -> access$300
    int access$402(com.jakewharton.disklrucache.DiskLruCache,int) -> access$402
    com.jakewharton.disklrucache.DiskLruCache$Editor access$1600(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long) -> access$1600
    java.lang.String access$1700(java.io.InputStream) -> access$1700
    int access$1800(com.jakewharton.disklrucache.DiskLruCache) -> access$1800
    java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache) -> access$1900
    java.io.OutputStream access$2000() -> access$2000
    void access$2200(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> access$2200
com.jakewharton.disklrucache.DiskLruCache$1 -> com.jakewharton.disklrucache.DiskLruCache$1:
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.jakewharton.disklrucache.DiskLruCache$2 -> com.jakewharton.disklrucache.DiskLruCache$2:
    void write(int) -> write
com.jakewharton.disklrucache.DiskLruCache$Editor -> com.jakewharton.disklrucache.DiskLruCache$Editor:
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.jakewharton.disklrucache.DiskLruCache$Entry access$1400(com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$1400
    boolean[] access$1500(com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$1500
    boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> access$2302
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream -> com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream:
    com.jakewharton.disklrucache.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.jakewharton.disklrucache.DiskLruCache$Entry -> com.jakewharton.disklrucache.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean) -> access$602
    com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor) -> access$702
    void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$800
    com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$700
    long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1000
    java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1100
    boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$600
    long access$1200(com.jakewharton.disklrucache.DiskLruCache$Entry) -> access$1200
    long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry,long) -> access$1202
com.jakewharton.disklrucache.DiskLruCache$Snapshot -> com.jakewharton.disklrucache.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.jakewharton.disklrucache.DiskLruCache this$0 -> this$0
    com.jakewharton.disklrucache.DiskLruCache$Editor edit() -> edit
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.jakewharton.disklrucache.StrictLineReader -> com.jakewharton.disklrucache.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader) -> access$000
com.jakewharton.disklrucache.StrictLineReader$1 -> com.jakewharton.disklrucache.StrictLineReader$1:
    com.jakewharton.disklrucache.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.jakewharton.disklrucache.Util -> com.jakewharton.disklrucache.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String VERSION -> VERSION
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int maxConnections -> maxConnections
    int socketTimeout -> socketTimeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ThreadPoolExecutor threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ThreadPoolExecutor) -> setThreadPool
    void setUserAgent(java.lang.String) -> setUserAgent
    void setTimeout(int) -> setTimeout
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void get(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void post(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void put(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void delete(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void delete(android.content.Context,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> sendRequest
    java.lang.String getUrlWithQueryString(java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams) -> paramsToEntity
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> responseHandler
    boolean isBinaryRequest -> isBinaryRequest
    int executionCount -> executionCount
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    android.os.Handler handler -> handler
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(java.lang.String) -> onSuccess
    void onSuccess(int,java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void sendSuccessMessage(int,java.lang.String) -> sendSuccessMessage
    void sendFailureMessage(java.lang.Throwable,java.lang.String) -> sendFailureMessage
    void sendFailureMessage(java.lang.Throwable,byte[]) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void handleSuccessMessage(int,java.lang.String) -> handleSuccessMessage
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> handleFailureMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.AsyncHttpResponseHandler$1 -> com.loopj.android.http.AsyncHttpResponseHandler$1:
    com.loopj.android.http.AsyncHttpResponseHandler this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    void onSuccess(byte[]) -> onSuccess
    void onSuccess(int,byte[]) -> onSuccess
    void onFailure(java.lang.Throwable,byte[]) -> onFailure
    void sendSuccessMessage(int,byte[]) -> sendSuccessMessage
    void sendFailureMessage(java.lang.Throwable,byte[]) -> sendFailureMessage
    void handleSuccessMessage(int,byte[]) -> handleSuccessMessage
    void handleFailureMessage(java.lang.Throwable,byte[]) -> handleFailureMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    int SUCCESS_JSON_MESSAGE -> SUCCESS_JSON_MESSAGE
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onSuccess(org.json.JSONArray) -> onSuccess
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.json.JSONArray) -> onSuccess
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(java.lang.Throwable,org.json.JSONArray) -> onFailure
    void sendSuccessMessage(int,java.lang.String) -> sendSuccessMessage
    void handleMessage(android.os.Message) -> handleMessage
    void handleSuccessJsonMessage(int,java.lang.Object) -> handleSuccessJsonMessage
    java.lang.Object parseResponse(java.lang.String) -> parseResponse
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> handleFailureMessage
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String ENCODING -> ENCODING
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithArray -> urlParamsWithArray
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.util.ArrayList) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    java.lang.String toString() -> toString
    org.apache.http.HttpEntity getEntity() -> getEntity
    void init() -> init
    java.util.List getParamsList() -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String fileName -> fileName
    java.lang.String contentType -> contentType
    java.lang.String getFileName() -> getFileName
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    int RETRY_SLEEP_TIME_MILLIS -> RETRY_SLEEP_TIME_MILLIS
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    java.io.ByteArrayOutputStream out -> out
    boolean isSetLast -> isSetLast
    boolean isSetFirst -> isSetFirst
    void writeFirstBoundaryIfNeeds() -> writeFirstBoundaryIfNeeds
    void writeLastBoundaryIfNeeds() -> writeLastBoundaryIfNeeds
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,boolean) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean) -> addPart
    void addPart(java.lang.String,java.io.File,boolean) -> addPart
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    int responseCode -> responseCode
    java.lang.String result -> result
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> responseHandler
    int getResponseCode() -> getResponseCode
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> sendRequest
    java.lang.String onRequestFailed(java.lang.Throwable,java.lang.String) -> onRequestFailed
    void delete(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    java.lang.String get(java.lang.String,com.loopj.android.http.RequestParams) -> get
    java.lang.String get(java.lang.String) -> get
    java.lang.String put(java.lang.String,com.loopj.android.http.RequestParams) -> put
    java.lang.String put(java.lang.String) -> put
    java.lang.String post(java.lang.String,com.loopj.android.http.RequestParams) -> post
    java.lang.String post(java.lang.String) -> post
    java.lang.String delete(java.lang.String,com.loopj.android.http.RequestParams) -> delete
    java.lang.String delete(java.lang.String) -> delete
    int access$002(com.loopj.android.http.SyncHttpClient,int) -> access$002
    java.lang.String access$102(com.loopj.android.http.SyncHttpClient,java.lang.String) -> access$102
com.loopj.android.http.SyncHttpClient$1 -> com.loopj.android.http.SyncHttpClient$1:
    com.loopj.android.http.SyncHttpClient this$0 -> this$0
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendMessage(android.os.Message) -> sendMessage
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    java.lang.String actionUrl -> a
    java.lang.String schema -> b
    java.lang.String identify -> c
    java.lang.String title -> d
    java.lang.String description -> e
    byte[] thumbData -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject$1 -> com.sina.weibo.sdk.api.a:
    com.sina.weibo.sdk.api.CmdObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.CmdObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    byte[] imageData -> g
    java.lang.String imagePath -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.b:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.MusicObject$1 -> com.sina.weibo.sdk.api.c:
    com.sina.weibo.sdk.api.MusicObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.MusicObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.d:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.VideoObject$1 -> com.sina.weibo.sdk.api.e:
    com.sina.weibo.sdk.api.VideoObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.VideoObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String defaultText -> g
    java.lang.String h5Url -> h
    java.lang.String dataUrl -> i
    java.lang.String dataHdUrl -> j
    int duration -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.VoiceObject$1 -> com.sina.weibo.sdk.api.f:
    com.sina.weibo.sdk.api.VoiceObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.VoiceObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String defaultText -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.g:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> a
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> com.sina.weibo.sdk.api.h:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> a
    android.os.Bundle toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> a
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.i:
    com.sina.weibo.sdk.api.TextObject textObject -> a
    com.sina.weibo.sdk.api.ImageObject imageObject -> b
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> c
    android.os.Bundle toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> a
com.sina.weibo.sdk.api.share.ApiUtils -> com.sina.weibo.sdk.api.a.a:
    android.net.Uri WEIBO_NAME_URI -> a
    boolean isWeiboAppSupportAPI(int) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByPackage(android.content.Context,java.lang.String) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfo(android.content.Context) -> a
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> b
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByFile(android.content.Context) -> c
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByAsset(android.content.Context,java.lang.String) -> c
com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo -> com.sina.weibo.sdk.api.a.b:
    java.lang.String packageName -> a
    int supportApi -> b
    java.lang.String toString() -> toString
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.a.c:
    java.lang.String transaction -> a
    int getType() -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.a.d:
    void toBundle(android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.a.e:
    int errCode -> b
    java.lang.String errMsg -> c
    java.lang.String reqPackageName -> d
    void fromBundle(android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.a.f:
    void onCancel() -> a
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.a.g:
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.a.h:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> a
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.a.i:
    boolean isWeiboAppInstalled() -> a
    boolean isWeiboAppSupportAPI() -> b
    int getWeiboAppSupportAPI() -> c
    boolean registerApp() -> d
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> a
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> a
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> a
    boolean checkEnvironment(boolean) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> com.sina.weibo.sdk.api.a.j:
    com.sina.weibo.sdk.api.WeiboMessage message -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.a.k:
    int getType() -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.a.l:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.a.m:
    java.lang.String mPackageName -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> a
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.a.n:
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> a
    void downloadWeibo(android.content.Context) -> b
    void access$0(android.content.Context) -> a
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> com.sina.weibo.sdk.api.a.o:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> com.sina.weibo.sdk.api.a.p:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> com.sina.weibo.sdk.api.a.q:
    android.content.Context mContext -> a
    java.lang.String mAppKey -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo mWeiboInfo -> c
    boolean mNeedDownloadWeibo -> d
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> e
    android.app.Dialog mDownloadConfirmDialog -> f
    boolean isWeiboAppInstalled() -> a
    boolean isWeiboAppSupportAPI() -> b
    int getWeiboAppSupportAPI() -> c
    boolean registerApp() -> d
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> a
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> a
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> a
    boolean checkEnvironment(boolean) -> a
    boolean shareWithWeibo(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.a.r:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> a
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> a
com.sina.weibo.sdk.auth.Oauth2AccessToken -> com.sina.weibo.sdk.a.a:
    java.lang.String mUid -> a
    java.lang.String mAccessToken -> b
    java.lang.String mRefreshToken -> c
    long mExpiresTime -> d
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> a
    boolean isSessionValid() -> a
    java.lang.String toString() -> toString
    java.lang.String getUid() -> b
    void setUid(java.lang.String) -> a
    java.lang.String getToken() -> c
    void setToken(java.lang.String) -> b
    void setRefreshToken(java.lang.String) -> c
    long getExpiresTime() -> d
    void setExpiresTime(long) -> a
    void setExpiresIn(java.lang.String) -> d
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.WeiboAuth -> com.sina.weibo.sdk.a.b:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo getAuthInfo() -> a
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> a
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> a
    void startDialog(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> b
com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo -> com.sina.weibo.sdk.a.c:
    java.lang.String mAppKey -> a
    java.lang.String mRedirectUrl -> b
    java.lang.String mScope -> c
    java.lang.String mPackageName -> d
    java.lang.String mKeyHash -> e
    android.os.Bundle mBundle -> f
    java.lang.String getRedirectUrl() -> a
    android.os.Bundle getAuthBundle() -> b
    void initAuthBundle() -> c
    java.lang.String access$0(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> a
    java.lang.String access$1(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> b
    java.lang.String access$2(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> c
    java.lang.String access$3(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> d
    java.lang.String access$4(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> e
com.sina.weibo.sdk.auth.WeiboAuthListener -> com.sina.weibo.sdk.a.d:
    void onComplete(android.os.Bundle) -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
    void onCancel() -> a
com.sina.weibo.sdk.auth.WeiboDialog -> com.sina.weibo.sdk.a.e:
    android.content.Context mContext -> a
    android.widget.RelativeLayout mRootContainer -> b
    android.widget.RelativeLayout mWebViewContainer -> c
    android.app.ProgressDialog mLoadingDlg -> d
    android.webkit.WebView mWebView -> e
    boolean mIsDetached -> f
    java.lang.String mAuthUrl -> g
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> h
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> i
    int theme -> j
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCreate(android.os.Bundle) -> onCreate
    void initWindow() -> a
    void initLoadingDlg() -> b
    void initWebView() -> c
    void initCloseButton() -> d
    void handleRedirectUrl(java.lang.String) -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener access$0(com.sina.weibo.sdk.auth.WeiboDialog) -> a
    com.sina.weibo.sdk.auth.WeiboAuth access$1(com.sina.weibo.sdk.auth.WeiboDialog) -> b
    void access$2(com.sina.weibo.sdk.auth.WeiboDialog,java.lang.String) -> a
    boolean access$3(com.sina.weibo.sdk.auth.WeiboDialog) -> c
    android.app.ProgressDialog access$4(com.sina.weibo.sdk.auth.WeiboDialog) -> d
    android.webkit.WebView access$5(com.sina.weibo.sdk.auth.WeiboDialog) -> e
com.sina.weibo.sdk.auth.WeiboDialog$1 -> com.sina.weibo.sdk.a.f:
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient -> com.sina.weibo.sdk.a.g:
    boolean isCallBacked -> b
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.sina.weibo.sdk.auth.sso.SsoHandler -> com.sina.weibo.sdk.a.a.a:
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> b
    android.app.Activity mAuthActivity -> c
    int mSSOAuthRequestCode -> d
    android.content.ServiceConnection mConnection -> e
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> a
    void authorize(int,com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> a
    void authorizeCallBack(int,int,android.content.Intent) -> a
    boolean bindRemoteSSOService(android.content.Context,java.lang.String) -> a
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> a
    com.sina.weibo.sdk.auth.WeiboAuth access$0(com.sina.weibo.sdk.auth.sso.SsoHandler) -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener access$1(com.sina.weibo.sdk.auth.sso.SsoHandler) -> b
    boolean access$2(com.sina.weibo.sdk.auth.sso.SsoHandler,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> com.sina.weibo.sdk.a.a.b:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.exception.WeiboAuthException -> com.sina.weibo.sdk.b.a:
    java.lang.String mErrorType -> a
    java.lang.String mErrorCode -> b
com.sina.weibo.sdk.exception.WeiboDialogException -> com.sina.weibo.sdk.b.b:
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.b.c:
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.b.d:
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.c.a:
    boolean sIsLogEnable -> a
    void d(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.c.b:
    char[] hexDigits -> a
    java.lang.String hexdigest(java.lang.String) -> a
    java.lang.String hexdigest(byte[]) -> a
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.c.c:
    boolean hasInternetPermission(android.content.Context) -> a
    boolean isNetworkAvailable(android.content.Context) -> b
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> c
    void clearCookies(android.content.Context,java.lang.String) -> a
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.c.d:
    java.lang.String TAG -> a
    android.util.SparseIntArray sLayoutMap -> b
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> c
    android.util.SparseArray sDrawableMap -> d
    java.util.HashMap sLanguageMap -> e
    java.lang.String getString(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,int) -> c
    java.util.Locale getLanguage() -> a
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> a
    boolean isFileExisted(android.content.Context,java.lang.String) -> b
    java.lang.String getCurrentDpiFolder(android.content.Context) -> a
com.sina.weibo.sdk.utils.SecurityHelper -> com.sina.weibo.sdk.c.e:
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> a
    boolean checkResponseAppLegal(android.content.Context,android.content.Intent) -> b
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> a
com.sina.weibo.sdk.utils.UIUtils -> com.sina.weibo.sdk.c.f:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> a
    void showToast(android.content.Context,java.lang.CharSequence,int) -> a
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.c.g:
    char[] encodes -> a
    byte[] decodes -> b
    android.os.Bundle parseUrl(java.lang.String) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    java.lang.String packUrl(java.util.HashMap) -> a
    boolean isChineseLocale(android.content.Context) -> a
    java.lang.String getSign(android.content.Context,java.lang.String) -> a
com.tencent.mm.algorithm.MD5 -> com.tencent.mm.a.a:
    java.lang.String getMessageDigest(byte[]) -> a
com.tencent.mm.algorithm.TypeTransform -> com.tencent.mm.a.b:
    byte[] intToByteArrayLH(int) -> a
com.tencent.mm.sdk.channel.MMessage -> com.tencent.mm.sdk.channel.MMessage:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.channel.MMessage$CallBack -> com.tencent.mm.sdk.channel.a:
    void handleMessage(android.content.Intent) -> a
com.tencent.mm.sdk.channel.MMessage$Receiver -> com.tencent.mm.sdk.channel.MMessage$Receiver:
    java.util.Map callbacks -> a
    com.tencent.mm.sdk.channel.MMessage$CallBack o -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.channel.MMessageAct -> com.tencent.mm.sdk.channel.b:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle) -> a
com.tencent.mm.sdk.channel.MMessageUtil -> com.tencent.mm.sdk.channel.c:
    byte[] a(java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.openapi.BaseReq -> com.tencent.mm.sdk.openapi.a:
    java.lang.String transaction -> a
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.BaseResp -> com.tencent.mm.sdk.openapi.b:
    int errCode -> a
    java.lang.String errStr -> b
    java.lang.String transaction -> c
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.GetMessageFromWX -> com.tencent.mm.sdk.openapi.c:
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req -> com.tencent.mm.sdk.openapi.d:
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.e:
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.f:
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> a
com.tencent.mm.sdk.openapi.SendAuth -> com.tencent.mm.sdk.openapi.g:
com.tencent.mm.sdk.openapi.SendAuth$Resp -> com.tencent.mm.sdk.openapi.h:
    java.lang.String userName -> d
    java.lang.String token -> e
    int expireDate -> f
    java.lang.String state -> g
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.SendMessageToWX -> com.tencent.mm.sdk.openapi.i:
com.tencent.mm.sdk.openapi.SendMessageToWX$Req -> com.tencent.mm.sdk.openapi.j:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> b
    int scene -> c
    int getType() -> a
    void fromBundle(android.os.Bundle) -> b
    void toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp -> com.tencent.mm.sdk.openapi.k:
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.ShowMessageFromWX -> com.tencent.mm.sdk.openapi.l:
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req -> com.tencent.mm.sdk.openapi.m:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.n:
    com.tencent.mm.sdk.openapi.WXAPIFactory p -> a
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> a
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.o:
    android.content.Context q -> a
    java.lang.String r -> b
    boolean s -> c
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    boolean a(java.lang.String) -> b
    boolean a(android.content.pm.Signature[]) -> a
    boolean a(byte[],byte[]) -> a
com.tencent.mm.sdk.openapi.WXAppExtendObject -> com.tencent.mm.sdk.openapi.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXEmojiObject -> com.tencent.mm.sdk.openapi.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXFileObject -> com.tencent.mm.sdk.openapi.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXImageObject -> com.tencent.mm.sdk.openapi.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage -> com.tencent.mm.sdk.openapi.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder -> com.tencent.mm.sdk.openapi.p:
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage) -> a
    com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.openapi.q:
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMusicObject -> com.tencent.mm.sdk.openapi.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXTextObject -> com.tencent.mm.sdk.openapi.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXVideoObject -> com.tencent.mm.sdk.openapi.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXWebpageObject -> com.tencent.mm.sdk.openapi.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.platformtools.LBSManager -> com.tencent.mm.sdk.platformtools.LBSManager:
    com.tencent.mm.sdk.platformtools.LBSManager$LocationCache F -> e
    com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener G -> f
    android.content.Context q -> g
    boolean K -> a
    boolean L -> b
    boolean M -> c
    int N -> d
    com.tencent.mm.sdk.platformtools.MTimerHandler O -> h
    void b() -> c
    java.lang.String getTelLocation() -> a
    java.lang.String getWIFILocation() -> b
    void setLocationCache(float,float,int,int) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache -> com.tencent.mm.sdk.platformtools.a:
    float Q -> a
    float R -> b
    int S -> c
    long time -> d
    int T -> e
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener -> com.tencent.mm.sdk.platformtools.b:
    void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean) -> a
com.tencent.mm.sdk.platformtools.Log -> com.tencent.mm.sdk.platformtools.c:
    int level -> a
    java.io.PrintStream W -> b
    byte[] X -> c
    java.lang.String Y -> d
    void e(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> c
    void v(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> b
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> c
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> d
com.tencent.mm.sdk.platformtools.LogHelper -> com.tencent.mm.sdk.platformtools.d:
    java.text.SimpleDateFormat aa -> a
    byte[] ab -> b
    void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.platformtools.MTimerHandler -> com.tencent.mm.sdk.platformtools.e:
    int ad -> a
    boolean av -> b
    long aw -> c
    com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack ax -> d
    void finalize() -> finalize
    void handleMessage(android.os.Message) -> handleMessage
    void stopTimer() -> a
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack -> com.tencent.mm.sdk.platformtools.f:
    boolean onTimerExpired() -> a
com.tencent.mm.sdk.platformtools.PhoneUtil -> com.tencent.mm.sdk.platformtools.g:
    int aI -> a
    java.lang.String getMacXml(java.util.List) -> a
    java.lang.String getCellXml(java.util.List) -> b
    java.util.List getCellInfoList(android.content.Context) -> a
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo -> com.tencent.mm.sdk.platformtools.h:
    java.lang.String mcc -> a
    java.lang.String mnc -> b
    java.lang.String lac -> c
    java.lang.String cellid -> d
    java.lang.String type -> e
    java.lang.String stationId -> f
    java.lang.String networkId -> g
    java.lang.String systemId -> h
    java.lang.String dbm -> i
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo -> com.tencent.mm.sdk.platformtools.i:
    java.lang.String mac -> a
    java.lang.String dbm -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl -> com.tencent.mm.sdk.platformtools.j:
    int aJ -> a
    int aK -> b
    android.telephony.TelephonyManager aL -> c
    android.telephony.PhoneStateListener aM -> d
    java.util.List getCellInfoList(android.content.Context) -> a
    int c(int) -> a
    android.telephony.TelephonyManager a(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> a
    android.telephony.PhoneStateListener b(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1 -> com.tencent.mm.sdk.platformtools.k:
    com.tencent.mm.sdk.platformtools.PhoneUtil16Impl aN -> a
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl -> com.tencent.mm.sdk.platformtools.l:
    int aJ -> a
    int aK -> b
    android.telephony.TelephonyManager aL -> c
    int aO -> d
    android.telephony.PhoneStateListener aM -> e
    java.util.List getCellInfoList(android.content.Context) -> a
    int a(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> a
    int d(int) -> a
    android.telephony.TelephonyManager b(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> b
    android.telephony.PhoneStateListener c(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> c
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1 -> com.tencent.mm.sdk.platformtools.m:
    com.tencent.mm.sdk.platformtools.PhoneUtil20Impl aP -> a
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.tencent.mm.sdk.platformtools.SensorController -> com.tencent.mm.sdk.platformtools.SensorController:
    float aX -> a
    float aZ -> b
    float ba -> c
    com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack bb -> d
    boolean be -> e
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack -> com.tencent.mm.sdk.platformtools.n:
    void onSensorEvent(boolean) -> a
com.tencent.mm.sdk.platformtools.Util -> com.tencent.mm.sdk.platformtools.o:
    long[] bz -> a
    java.util.TimeZone GMT -> b
    char[] bA -> c
    char[] bB -> d
    java.lang.String[] bC -> e
    java.lang.String nullAsNil(java.lang.String) -> a
    boolean isNullOrNil(java.lang.String) -> b
    boolean isNullOrNil(byte[]) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth -> com.tencent.mm.sdk.plugin.MMPluginOAuth:
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult bG -> a
    java.lang.String bH -> b
    java.lang.String bI -> c
    java.lang.String a(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
    void a(com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult -> com.tencent.mm.sdk.plugin.a:
    void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver:
    java.util.Map ah -> a
    com.tencent.mm.sdk.plugin.MMPluginOAuth bK -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void unregister(java.lang.String) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1 -> com.tencent.mm.sdk.plugin.b:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bL -> a
    java.lang.String bM -> b
    com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver bN -> c
    void run() -> run
com.tencent.weibo.sdk.android.component.sso.AuthHelper -> com.tencent.weibo.sdk.android.component.sso.a:
    com.tencent.weibo.sdk.android.component.sso.OnAuthListener listener -> a
    com.tencent.weibo.sdk.android.component.sso.AuthReceiver mReceiver -> b
com.tencent.weibo.sdk.android.component.sso.AuthReceiver -> com.tencent.weibo.sdk.android.component.sso.AuthReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.tencent.weibo.sdk.android.component.sso.WeiboToken revert(byte[]) -> a
com.tencent.weibo.sdk.android.component.sso.OnAuthListener -> com.tencent.weibo.sdk.android.component.sso.b:
    void onAuthFail(int,java.lang.String) -> a
    void onAuthPassed(java.lang.String,com.tencent.weibo.sdk.android.component.sso.WeiboToken) -> a
com.tencent.weibo.sdk.android.component.sso.WeiboToken -> com.tencent.weibo.sdk.android.component.sso.c:
    java.lang.String accessToken -> a
    long expiresIn -> b
    java.lang.String refreshToken -> c
    java.lang.String openID -> d
    java.lang.String omasToken -> e
    java.lang.String omasKey -> f
com.tencent.weibo.sdk.android.component.sso.tools.Cryptor -> com.tencent.weibo.sdk.android.component.sso.a.a:
    byte[] prePlain -> a
    byte[] out -> b
    int crypt -> c
    int preCrypt -> d
    int pos -> e
    int padding -> f
    byte[] key -> g
    boolean header -> h
    int contextStart -> i
    java.util.Random random -> j
    long getUnsignedInt(byte[],int,int) -> a
    byte[] decrypt(byte[],int,int,byte[]) -> a
    byte[] decipher(byte[],int) -> a
    byte[] decipher(byte[]) -> a
    boolean decrypt8Bytes(byte[],int,int) -> b
    byte[] decrypt(byte[],byte[],int) -> a
    byte[] getRandomByte(int) -> a
com.umeng.analytics.Gender -> com.umeng.analytics.Gender:
    com.umeng.analytics.Gender Male -> Male
    com.umeng.analytics.Gender Female -> Female
    com.umeng.analytics.Gender Unknown -> Unknown
    com.umeng.analytics.Gender[] a -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
com.umeng.analytics.MobclickAgent -> com.umeng.analytics.MobclickAgent:
    com.umeng.analytics.b a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void setAutoLocation(boolean) -> setAutoLocation
    void setWrapper(java.lang.String,java.lang.String) -> setWrapper
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setEnableEventBuffer(boolean) -> setEnableEventBuffer
    void setOnlineConfigureListener(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> setOnlineConfigureListener
    com.umeng.analytics.b a() -> a
    void setOpenGLContext(javax.microedition.khronos.opengles.GL10) -> setOpenGLContext
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setDebugMode(boolean) -> setDebugMode
    void setDefaultReportPolicy(android.content.Context,int) -> setDefaultReportPolicy
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.HashMap) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.HashMap,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context,java.lang.String,java.lang.String) -> updateOnlineConfig
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setGender(android.content.Context,com.umeng.analytics.Gender) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String,java.lang.String) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
com.umeng.analytics.MobclickAgent$1 -> com.umeng.analytics.MobclickAgent$1:
    int[] a -> a
com.umeng.analytics.MobclickAgentJSInterface -> com.umeng.analytics.MobclickAgentJSInterface:
    android.content.Context a -> a
    android.content.Context a(com.umeng.analytics.MobclickAgentJSInterface) -> a
com.umeng.analytics.MobclickAgentJSInterface$a -> com.umeng.analytics.MobclickAgentJSInterface$a:
    android.webkit.WebChromeClient a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.MobclickAgentJSInterface b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.umeng.analytics.ReportPolicy -> com.umeng.analytics.ReportPolicy:
    int a -> a
    int BATCH_AT_LAUNCH -> BATCH_AT_LAUNCH
    int b -> b
    int c -> c
    int DAILY -> DAILY
    int d -> d
    int BATCH_BY_INTERVAL -> BATCH_BY_INTERVAL
com.umeng.analytics.a -> com.umeng.analytics.a:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.umeng.analytics.i b -> b
    android.content.Context c -> c
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.i) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
com.umeng.analytics.a.a -> com.umeng.analytics.a.a:
    java.util.HashMap a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.HashMap a(java.util.HashMap) -> a
    long b() -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.b -> com.umeng.analytics.a.b:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.b) -> a
com.umeng.analytics.a.c -> com.umeng.analytics.a.c:
    com.umeng.analytics.a.a a -> a
    com.umeng.analytics.a.b b -> b
com.umeng.analytics.a.d -> com.umeng.analytics.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.e -> com.umeng.analytics.a.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.f -> com.umeng.analytics.a.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    long p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    int y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void i(org.json.JSONObject) -> i
    void a(org.json.JSONObject) -> a
    void j(org.json.JSONObject) -> j
    void k(org.json.JSONObject) -> k
    void l(org.json.JSONObject) -> l
    void m(org.json.JSONObject) -> m
    void n(org.json.JSONObject) -> n
    void o(org.json.JSONObject) -> o
    void p(org.json.JSONObject) -> p
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
    boolean b() -> b
com.umeng.analytics.a.g -> com.umeng.analytics.a.g:
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.h -> com.umeng.analytics.a.h:
    com.umeng.analytics.a.o a -> a
    void a(com.umeng.analytics.a.o) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    org.json.JSONObject b() -> b
com.umeng.analytics.a.i -> com.umeng.analytics.a.i:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.e) -> a
    void a(java.lang.String,com.umeng.analytics.a.a) -> a
    void a(com.umeng.analytics.a.b) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.i) -> a
    void b(java.util.ArrayList) -> b
    int b() -> b
    void c() -> c
com.umeng.analytics.a.j -> com.umeng.analytics.a.j:
    com.umeng.analytics.a.g a -> a
    com.umeng.analytics.a.i b -> b
com.umeng.analytics.a.k -> com.umeng.analytics.a.k:
    java.lang.String a -> a
    int b -> b
com.umeng.analytics.a.l -> com.umeng.analytics.a.l:
    java.lang.String e -> e
    java.lang.String f -> f
    void a(java.lang.String) -> a
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.m -> com.umeng.analytics.a.m:
    com.umeng.analytics.a.o a -> a
    com.umeng.analytics.a.p b -> b
    long c -> c
    java.util.ArrayList d -> d
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    com.umeng.analytics.a.m a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String[] b(android.content.SharedPreferences) -> b
    java.util.ArrayList c(android.content.SharedPreferences) -> c
    long d(android.content.SharedPreferences) -> d
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.lang.String,long,long) -> a
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.util.ArrayList,long,long) -> a
    boolean a() -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.n -> com.umeng.analytics.a.n:
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.o -> com.umeng.analytics.a.o:
    double a -> a
    double b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.umeng.analytics.a.o a(android.content.Context) -> a
    com.umeng.analytics.a.o b(android.content.Context) -> b
    android.content.SharedPreferences$Editor a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.location.Location,android.content.SharedPreferences) -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    boolean a() -> a
com.umeng.analytics.a.p -> com.umeng.analytics.a.p:
    long a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    com.umeng.analytics.a.p a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
com.umeng.analytics.b -> com.umeng.analytics.b:
    java.util.concurrent.ExecutorService a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    long t -> t
    int u -> u
    int v -> v
    java.util.Stack w -> w
    java.util.ArrayList x -> x
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable) -> a
    void h(android.content.Context) -> h
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.util.HashMap,long) -> a
    void i(android.content.Context) -> i
    void j(android.content.Context) -> j
    void a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context,android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(android.content.Context,android.content.SharedPreferences) -> c
    void d(android.content.Context,java.lang.String) -> d
    int e(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String,int) -> a
    boolean a(java.util.Map) -> a
    void d(android.content.Context) -> d
    void b(android.content.Context,java.lang.Throwable) -> b
    void a(com.umeng.analytics.b,android.content.Context) -> a
    void b(com.umeng.analytics.b,android.content.Context) -> b
com.umeng.analytics.b$a -> com.umeng.analytics.b$a:
    java.lang.Object b -> b
    android.content.Context c -> c
    int d -> d
    com.umeng.analytics.b a -> a
    void run() -> run
com.umeng.analytics.c -> com.umeng.analytics.c:
    com.umeng.analytics.a.i a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    int d -> d
    void a(int) -> a
    int a() -> a
    boolean b() -> b
    void a(java.lang.String) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,java.util.HashMap) -> a
    java.util.HashMap c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.lang.String,java.util.HashMap,long) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    org.json.JSONObject d() -> d
    void e() -> e
com.umeng.analytics.d -> com.umeng.analytics.d:
    com.umeng.analytics.a a -> a
    java.lang.Object b -> b
    android.os.Handler c -> c
    com.umeng.analytics.c d -> d
    com.umeng.analytics.a.f e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    long p -> p
    long q -> q
    long r -> r
    java.lang.String k -> k
    java.lang.String l -> l
    boolean s -> s
    void e(android.content.Context) -> e
    void a(android.content.Context,int) -> a
    void a(android.content.Context) -> a
    void f(android.content.Context) -> f
    void b(android.content.Context) -> b
    boolean b(android.content.Context,int) -> b
    java.lang.String c(android.content.Context) -> c
    void d(android.content.Context) -> d
    org.json.JSONObject g(android.content.Context) -> g
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(int,long) -> a
    java.lang.Object a(com.umeng.analytics.d) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
com.umeng.analytics.d$a -> com.umeng.analytics.d$a:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.d$b -> com.umeng.analytics.d$b:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.e -> com.umeng.analytics.e:
    com.umeng.analytics.d a -> a
com.umeng.analytics.f -> com.umeng.analytics.f:
    java.lang.String a -> a
    long b -> b
com.umeng.analytics.g -> com.umeng.analytics.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    int e -> e
    int f -> f
    long g -> g
    int h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.Object p -> p
    java.lang.String q -> q
    java.lang.String[] r -> r
    java.lang.String[] s -> s
    boolean t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
com.umeng.analytics.h -> com.umeng.analytics.h:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.umeng.analytics.i -> com.umeng.analytics.i:
    void b(android.content.Context,java.lang.Throwable) -> b
com.umeng.analytics.j -> com.umeng.analytics.j:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    long a -> a
    long b -> b
    android.content.SharedPreferences a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    android.content.SharedPreferences c(android.content.Context) -> c
    android.content.SharedPreferences d(android.content.Context) -> d
    android.content.SharedPreferences e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    org.json.JSONObject h(android.content.Context) -> h
    int[] i(android.content.Context) -> i
    boolean a(java.io.File) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,com.umeng.analytics.a.g,java.lang.String) -> a
    void b(android.content.Context,org.json.JSONObject,java.lang.String) -> b
    void j(android.content.Context) -> j
com.umeng.analytics.k -> com.umeng.analytics.k:
    java.util.Vector a -> a
    int b -> b
    java.lang.String c -> c
    void a(java.lang.Long) -> a
    java.lang.Long a() -> a
    int b() -> b
    java.lang.String toString() -> toString
    com.umeng.analytics.k a(android.content.Context,java.lang.String) -> a
    com.umeng.analytics.k a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.umeng.analytics.onlineconfig.a -> com.umeng.analytics.onlineconfig.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener f -> f
    com.umeng.analytics.onlineconfig.c g -> g
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> a
    void a() -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    org.json.JSONObject d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.analytics.onlineconfig.a$a:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.analytics.onlineconfig.a$b:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> com.umeng.analytics.onlineconfig.b:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.analytics.onlineconfig.c:
    void a(int,long) -> a
com.umeng.common.Log -> com.umeng.common.Log:
    boolean LOG -> LOG
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.common.Res -> com.umeng.common.Res:
    java.lang.String a -> a
    com.umeng.common.Res b -> b
    java.lang.String c -> c
    java.lang.Class d -> d
    java.lang.Class e -> e
    java.lang.Class f -> f
    java.lang.Class g -> g
    java.lang.Class h -> h
    java.lang.Class i -> i
    java.lang.Class j -> j
    com.umeng.common.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int c(java.lang.String) -> c
    int d(java.lang.String) -> d
    int e(java.lang.String) -> e
    int f(java.lang.String) -> f
    int g(java.lang.String) -> g
    int a(java.lang.Class,java.lang.String) -> a
com.umeng.common.a -> com.umeng.common.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
com.umeng.common.a.a -> com.umeng.common.a.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
com.umeng.common.a.b -> com.umeng.common.a.b:
    int a(android.content.Context) -> a
com.umeng.common.a.c -> com.umeng.common.a.c:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
com.umeng.common.b -> com.umeng.common.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String d -> d
    java.lang.String e -> e
    int c -> c
    boolean a(java.lang.String,android.content.Context) -> a
    boolean a(android.content.Context) -> a
    java.util.Set b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String a() -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String[] k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    android.location.Location m(android.content.Context) -> m
    boolean n(android.content.Context) -> n
    boolean b() -> b
    int o(android.content.Context) -> o
    java.lang.String[] p(android.content.Context) -> p
    java.util.Locale y(android.content.Context) -> y
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> t
    java.lang.String a(java.util.Date) -> a
    java.lang.String c() -> c
    java.util.Date a(java.lang.String) -> a
    int a(java.util.Date,java.util.Date) -> a
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    boolean x(android.content.Context) -> x
com.umeng.common.net.DownloadingService -> com.umeng.common.net.DownloadingService:
    java.lang.String t -> t
    android.app.NotificationManager u -> u
    com.umeng.common.net.d v -> v
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    long w -> w
    long x -> x
    long y -> y
    int o -> o
    java.lang.String p -> p
    int z -> z
    android.content.Context A -> A
    android.os.Handler B -> B
    com.umeng.common.net.DownloadingService$a q -> q
    boolean r -> r
    long C -> C
    long D -> D
    java.util.Map E -> E
    android.util.SparseArray F -> F
    android.os.Messenger s -> s
    java.lang.Boolean G -> G
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void onCreate() -> onCreate
    void a(com.umeng.common.net.a$a) -> a
    void a(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void d() -> d
    java.lang.String a() -> a
    java.util.Map b() -> b
    com.umeng.common.net.d a(com.umeng.common.net.DownloadingService) -> a
    android.util.SparseArray c() -> c
    android.content.Context b(com.umeng.common.net.DownloadingService) -> b
    void a(com.umeng.common.net.DownloadingService,com.umeng.common.net.a$a) -> a
    android.app.NotificationManager a(com.umeng.common.net.DownloadingService,android.app.NotificationManager) -> a
    android.app.NotificationManager c(com.umeng.common.net.DownloadingService) -> c
    android.os.Handler d(com.umeng.common.net.DownloadingService) -> d
    void a(com.umeng.common.net.DownloadingService,java.lang.String) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
com.umeng.common.net.DownloadingService$a -> com.umeng.common.net.DownloadingService$a:
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.common.net.DownloadingService$b -> com.umeng.common.net.DownloadingService$b:
    android.content.Context b -> b
    boolean c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    long g -> g
    int h -> h
    int i -> i
    com.umeng.common.net.DownloadingService$a j -> j
    com.umeng.common.net.a$a k -> k
    com.umeng.common.net.DownloadingService a -> a
    void run() -> run
    void a(int) -> a
    void a(boolean) -> a
    void a() -> a
    void b(int) -> b
    java.net.HttpURLConnection a(java.net.URL,java.io.File) -> a
    java.lang.String a(com.umeng.common.net.a$a) -> a
    void b() -> b
    void a(java.io.File,java.lang.String) -> a
    void a(java.lang.Exception) -> a
    android.content.Context a(com.umeng.common.net.DownloadingService$b) -> a
com.umeng.common.net.DownloadingService$c -> com.umeng.common.net.DownloadingService$c:
    com.umeng.common.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.a -> com.umeng.common.net.a:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.common.net.k d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String[] k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.os.Messenger a -> a
    android.content.ServiceConnection o -> o
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String[]) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void a() -> a
    java.lang.String b() -> b
    com.umeng.common.net.k a(com.umeng.common.net.a) -> a
    android.content.ServiceConnection b(com.umeng.common.net.a) -> b
    android.content.Context c(com.umeng.common.net.a) -> c
    android.os.Messenger a(com.umeng.common.net.a,android.os.Messenger) -> a
    java.lang.String d(com.umeng.common.net.a) -> d
    java.lang.String e(com.umeng.common.net.a) -> e
    java.lang.String f(com.umeng.common.net.a) -> f
    java.lang.String g(com.umeng.common.net.a) -> g
    java.lang.String h(com.umeng.common.net.a) -> h
    java.lang.String[] i(com.umeng.common.net.a) -> i
    boolean j(com.umeng.common.net.a) -> j
    boolean k(com.umeng.common.net.a) -> k
    boolean l(com.umeng.common.net.a) -> l
    android.os.Messenger m(com.umeng.common.net.a) -> m
com.umeng.common.net.a$a -> com.umeng.common.net.a$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    android.os.Bundle a() -> a
    com.umeng.common.net.a$a a(android.os.Bundle) -> a
com.umeng.common.net.a$b -> com.umeng.common.net.a$b:
    com.umeng.common.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.b -> com.umeng.common.net.b:
    com.umeng.common.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.common.net.c -> com.umeng.common.net.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.content.Context i -> i
    java.lang.String j -> j
    com.umeng.common.net.c$a k -> k
    com.umeng.common.net.c a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.util.Date d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    java.util.List a(java.lang.String) -> a
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.common.net.c$1 -> com.umeng.common.net.c$1:
com.umeng.common.net.c$a -> com.umeng.common.net.c$a:
    int b -> b
    java.lang.String c -> c
    com.umeng.common.net.c a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.common.net.c$b -> com.umeng.common.net.c$b:
    com.umeng.common.net.c a -> a
com.umeng.common.net.d -> com.umeng.common.net.d:
    java.lang.String e -> e
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(com.umeng.common.net.a$a) -> a
    com.umeng.common.net.d$a a(android.content.Context,com.umeng.common.net.a$a,int,int) -> a
    void a(android.content.Context,com.umeng.common.net.d$a,int,int) -> a
    boolean a(android.content.Context) -> a
    boolean a(com.umeng.common.net.a$a,boolean,java.util.Map,android.os.Messenger) -> a
    int a(android.util.SparseArray,com.umeng.common.net.a$a) -> a
    void a(android.content.Context,com.umeng.common.net.d$a,int) -> a
    void a(android.content.Context,android.util.SparseArray,java.util.Map,int) -> a
    void a(com.umeng.common.net.a$a,long,long,long) -> a
    void a(java.util.Map,boolean,java.lang.String[]) -> a
    boolean a(com.umeng.common.net.DownloadingService,android.util.SparseArray,java.util.Map,android.content.Intent) -> a
    java.lang.String a() -> a
com.umeng.common.net.d$a -> com.umeng.common.net.d$a:
    com.umeng.common.net.d$a a(android.widget.RemoteViews) -> a
    com.umeng.common.net.d$a a(java.lang.CharSequence) -> a
    com.umeng.common.net.d$a b(java.lang.CharSequence) -> b
    com.umeng.common.net.d$a a(int,int,boolean) -> a
    com.umeng.common.net.d$a a() -> a
    com.umeng.common.net.d$a a(android.app.PendingIntent,android.app.PendingIntent) -> a
    com.umeng.common.net.d$a b() -> b
    com.umeng.common.net.d$a c() -> c
    android.app.Notification d() -> d
    void a(int,java.lang.String,android.app.PendingIntent) -> a
com.umeng.common.net.d$b -> com.umeng.common.net.d$b:
    com.umeng.common.net.DownloadingService$b a -> a
    com.umeng.common.net.d$a b -> b
    int c -> c
    int d -> d
    com.umeng.common.net.a$a e -> e
    long[] f -> f
    void a(android.util.SparseArray) -> a
    void b(android.util.SparseArray) -> b
com.umeng.common.net.d$c -> com.umeng.common.net.d$c:
    int a -> a
    java.lang.String b -> b
    com.umeng.common.net.a$a d -> d
    android.content.Context e -> e
    android.app.NotificationManager f -> f
    android.util.SparseArray g -> g
    java.util.Map h -> h
    com.umeng.common.net.d c -> c
    void onPreExecute() -> onPreExecute
    java.lang.Integer a(java.lang.String[]) -> a
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.e -> com.umeng.common.net.e:
    java.lang.String[] a -> a
    boolean b -> b
    java.util.Map c -> c
    com.umeng.common.net.d d -> d
    void run() -> run
com.umeng.common.net.f -> com.umeng.common.net.f:
    com.umeng.common.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.g -> com.umeng.common.net.g:
    android.util.SparseArray a -> a
    com.umeng.common.net.DownloadingService b -> b
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.common.net.h -> com.umeng.common.net.h:
    java.lang.String a -> a
    com.umeng.common.net.DownloadingService b -> b
    void run() -> run
com.umeng.common.net.i -> com.umeng.common.net.i:
    com.umeng.common.net.DownloadingService a -> a
    void run() -> run
com.umeng.common.net.j -> com.umeng.common.net.j:
    com.umeng.common.net.DownloadingService$b a -> a
    void run() -> run
com.umeng.common.net.k -> com.umeng.common.net.k:
    void a() -> a
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
com.umeng.common.net.l -> com.umeng.common.net.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(int,java.lang.String) -> a
    int a(com.umeng.common.net.a$a) -> a
    android.app.PendingIntent a(android.content.Context,java.lang.String) -> a
    android.app.PendingIntent b(android.content.Context,java.lang.String) -> b
com.umeng.common.net.m -> com.umeng.common.net.m:
    java.lang.String a -> a
    com.umeng.common.net.o$a a(com.umeng.common.net.n) -> a
    void a(com.umeng.common.net.n,com.umeng.common.net.m$a) -> a
com.umeng.common.net.m$a -> com.umeng.common.net.m$a:
    void a() -> a
    void a(com.umeng.common.net.o$a) -> a
com.umeng.common.net.m$b -> com.umeng.common.net.m$b:
    com.umeng.common.net.n b -> b
    com.umeng.common.net.m$a c -> c
    com.umeng.common.net.m a -> a
    void onPreExecute() -> onPreExecute
    void a(com.umeng.common.net.o$a) -> a
    com.umeng.common.net.o$a a(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.n -> com.umeng.common.net.n:
com.umeng.common.net.o -> com.umeng.common.net.o:
    com.umeng.common.net.o$a a -> a
com.umeng.common.net.o$a -> com.umeng.common.net.o$a:
    com.umeng.common.net.o$a a -> a
    com.umeng.common.net.o$a b -> b
    com.umeng.common.net.o$a[] c -> c
    com.umeng.common.net.o$a[] values() -> values
    com.umeng.common.net.o$a valueOf(java.lang.String) -> valueOf
com.umeng.common.net.p -> com.umeng.common.net.p:
    java.lang.String b -> b
    boolean a -> a
    long c -> c
    long d -> d
    long e -> e
    java.util.Map f -> f
    java.lang.Thread g -> g
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.io.File a(java.lang.String,android.content.Context,boolean[]) -> a
    boolean a(java.lang.String,int,int,int) -> a
    boolean a(java.lang.String,int) -> a
    void a(java.io.File,long,long) -> a
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.io.File b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.p$a) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.p$a,android.view.animation.Animation) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.p$a,android.view.animation.Animation,boolean) -> a
    boolean a(android.widget.ImageView,java.lang.String) -> a
    void b(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.common.net.p$a,android.view.animation.Animation,boolean,java.lang.String) -> b
    android.graphics.drawable.Drawable c(java.lang.String) -> c
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
    void a(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.common.net.p$a,android.view.animation.Animation,boolean,java.lang.String) -> a
    android.graphics.drawable.Drawable a(java.lang.String) -> a
    java.lang.String a() -> a
com.umeng.common.net.p$a -> com.umeng.common.net.p$a:
    void a(com.umeng.common.net.p$b) -> a
    void a(com.umeng.common.net.o$a) -> a
com.umeng.common.net.p$b -> com.umeng.common.net.p$b:
    com.umeng.common.net.p$b a -> a
    com.umeng.common.net.p$b b -> b
    com.umeng.common.net.p$b[] c -> c
    com.umeng.common.net.p$b[] values() -> values
    com.umeng.common.net.p$b valueOf(java.lang.String) -> valueOf
com.umeng.common.net.p$c -> com.umeng.common.net.p$c:
    android.content.Context a -> a
    java.lang.String b -> b
    android.widget.ImageView c -> c
    com.umeng.common.net.p$b d -> d
    boolean e -> e
    com.umeng.common.net.p$a f -> f
    android.view.animation.Animation g -> g
    boolean h -> h
    java.io.File i -> i
    void onPreExecute() -> onPreExecute
    void a(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.q -> com.umeng.common.net.q:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.common.net.r -> com.umeng.common.net.r:
    java.lang.String a -> a
    java.util.Map b -> b
    com.umeng.common.net.t a(com.umeng.common.net.s,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    com.umeng.common.net.r a(java.util.Map) -> a
    void b(java.lang.String) -> b
com.umeng.common.net.s -> com.umeng.common.net.s:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
com.umeng.common.net.t -> com.umeng.common.net.t:
com.umeng.common.util.DeltaUpdate -> com.umeng.common.util.DeltaUpdate:
    boolean a -> a
    java.lang.String b -> b
    boolean a() -> a
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int bspatch(java.lang.String,java.lang.String,java.lang.String) -> bspatch
com.umeng.common.util.a -> com.umeng.common.util.a:
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.IllegalStateException a(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    java.lang.String f(byte[]) -> f
com.umeng.common.util.b -> com.umeng.common.util.b:
    byte[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.umeng.common.util.c -> com.umeng.common.util.c:
    int m -> m
    int n -> n
    int o -> o
    byte[] a -> a
    byte[] p -> p
    byte[] q -> q
    byte[] r -> r
    int s -> s
    byte[] t -> t
    byte[] u -> u
    byte[] v -> v
    int w -> w
    int x -> x
    int y -> y
    boolean a() -> a
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean a(byte) -> a
    boolean a(java.lang.String) -> a
    boolean a(byte[]) -> a
    boolean b(byte[]) -> b
    byte[] c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    byte[] e(byte[]) -> e
    java.lang.String f(byte[]) -> f
    byte[] g(byte[]) -> g
    byte[] a(byte[],boolean) -> a
    byte[] a(byte[],boolean,boolean) -> a
    byte[] a(byte[],boolean,boolean,int) -> a
    byte[] b(java.lang.String) -> b
    byte[] h(byte[]) -> h
    java.math.BigInteger i(byte[]) -> i
    byte[] a(java.math.BigInteger) -> a
    byte[] b(java.math.BigInteger) -> b
    boolean b(byte) -> b
com.umeng.common.util.d -> com.umeng.common.util.d:
    int b -> b
    int c -> c
    int a -> a
    int m -> m
    int d -> d
    byte e -> e
    byte f -> f
    int n -> n
    int o -> o
    int g -> g
    int p -> p
    byte[] h -> h
    int i -> i
    int q -> q
    boolean j -> j
    int k -> k
    int l -> l
    boolean b() -> b
    int c() -> c
    int d() -> d
    void a() -> a
    void a(int) -> a
    int c(byte[],int,int) -> c
    boolean c(byte) -> c
    void e() -> e
    java.lang.Object a(java.lang.Object) -> a
    java.lang.String j(byte[]) -> j
    java.lang.Object b(java.lang.Object) -> b
    byte[] c(java.lang.String) -> c
    byte[] k(byte[]) -> k
    byte[] l(byte[]) -> l
    java.lang.String m(byte[]) -> m
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean b(byte) -> b
    boolean b(byte[],boolean) -> b
    boolean d(java.lang.String) -> d
    boolean n(byte[]) -> n
    long o(byte[]) -> o
com.umeng.common.util.e -> com.umeng.common.util.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
com.umeng.common.util.f -> com.umeng.common.util.f:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.umeng.common.util.g -> com.umeng.common.util.g:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
com.umeng.common.util.h -> com.umeng.common.util.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
com.umeng.common.util.i -> com.umeng.common.util.i:
    java.lang.String a(java.util.Map,java.lang.String) -> a
com.umeng.common.util.j -> com.umeng.common.util.j:
    android.content.Context a -> a
    android.app.Notification b -> b
    android.app.Notification$Builder c -> c
    void e() -> e
    com.umeng.common.util.j b(android.widget.RemoteViews) -> b
    com.umeng.common.util.j a(android.app.PendingIntent) -> a
    com.umeng.common.util.j a(boolean) -> a
    com.umeng.common.util.j b(boolean) -> b
    com.umeng.common.util.j a(int) -> a
    com.umeng.common.util.j c(java.lang.CharSequence) -> c
    com.umeng.common.util.j a(long) -> a
com.umeng.common.util.k -> com.umeng.common.util.k:
    float a -> a
    void a(android.content.Context) -> a
    int a(float) -> a
    int b(float) -> b
    int c(float) -> c
    int d(float) -> d
com.umeng.update.UmengDialogButtonListener -> com.umeng.update.UmengDialogButtonListener:
    void onClick(int) -> onClick
com.umeng.update.UmengDownloadListener -> com.umeng.update.UmengDownloadListener:
    void OnDownloadStart() -> OnDownloadStart
    void OnDownloadUpdate(int) -> OnDownloadUpdate
    void OnDownloadEnd(int,java.lang.String) -> OnDownloadEnd
com.umeng.update.UmengUpdateAgent -> com.umeng.update.UmengUpdateAgent:
    com.umeng.update.UmengUpdateListener a -> a
    com.umeng.update.UmengDialogButtonListener b -> b
    com.umeng.update.UmengDownloadListener c -> c
    android.content.Context d -> d
    com.umeng.update.f e -> e
    android.os.Handler f -> f
    void setDefault() -> setDefault
    void setUpdateCheckConfig(boolean) -> setUpdateCheckConfig
    void setUpdateOnlyWifi(boolean) -> setUpdateOnlyWifi
    void setUpdateAutoPopup(boolean) -> setUpdateAutoPopup
    void setUpdateUIStyle(int) -> setUpdateUIStyle
    void setDeltaUpdate(boolean) -> setDeltaUpdate
    void setAppkey(java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    void setUpdateListener(com.umeng.update.UmengUpdateListener) -> setUpdateListener
    void setDialogListener(com.umeng.update.UmengDialogButtonListener) -> setDialogListener
    void setDownloadListener(com.umeng.update.UmengDownloadListener) -> setDownloadListener
    void b(int,com.umeng.update.UpdateResponse) -> b
    void silentUpdate(android.content.Context) -> silentUpdate
    void forceUpdate(android.content.Context) -> forceUpdate
    void update(android.content.Context) -> update
    void update(android.content.Context,java.lang.String,java.lang.String) -> update
    void b(android.content.Context) -> b
    void b(android.content.Context,com.umeng.update.UpdateResponse,int) -> b
    void showUpdateDialog(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateDialog
    void showUpdateNotification(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateNotification
    java.io.File downloadedFile(android.content.Context,com.umeng.update.UpdateResponse) -> downloadedFile
    boolean isIgnore(android.content.Context,com.umeng.update.UpdateResponse) -> isIgnore
    void ignoreUpdate(android.content.Context,com.umeng.update.UpdateResponse) -> ignoreUpdate
    void a(int,android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void startInstall(android.content.Context,java.io.File) -> startInstall
    void startDownload(android.content.Context,com.umeng.update.UpdateResponse) -> startDownload
    boolean c(android.content.Context) -> c
    android.content.Context a() -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,int) -> a
    android.content.Context a(android.content.Context) -> a
    com.umeng.update.UmengUpdateListener b() -> b
    void a(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UmengUpdateAgent$a -> com.umeng.update.UmengUpdateAgent$a:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateListener -> com.umeng.update.UmengUpdateListener:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> onUpdateReturned
com.umeng.update.UpdateDialogActivity -> com.umeng.update.UpdateDialogActivity:
    int a -> a
    com.umeng.update.UpdateResponse b -> b
    boolean c -> c
    java.io.File d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.umeng.update.UpdateResponse -> com.umeng.update.UpdateResponse:
    long a -> a
    boolean hasUpdate -> hasUpdate
    java.lang.String updateLog -> updateLog
    java.lang.String version -> version
    java.lang.String path -> path
    java.lang.String origin -> origin
    java.lang.String proto_ver -> proto_ver
    java.lang.String new_md5 -> new_md5
    java.lang.String size -> size
    java.lang.String target_size -> target_size
    boolean delta -> delta
    java.lang.String patch_md5 -> patch_md5
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,boolean) -> a
com.umeng.update.UpdateStatus -> com.umeng.update.UpdateStatus:
    int Yes -> Yes
    int No -> No
    int NoneWifi -> NoneWifi
    int Timeout -> Timeout
    int IsUpdate -> IsUpdate
    int Update -> Update
    int NotNow -> NotNow
    int Ignore -> Ignore
    int STYLE_DIALOG -> STYLE_DIALOG
    int STYLE_NOTIFICATION -> STYLE_NOTIFICATION
    int DOWNLOAD_COMPLETE_FAIL -> DOWNLOAD_COMPLETE_FAIL
    int DOWNLOAD_COMPLETE_SUCCESS -> DOWNLOAD_COMPLETE_SUCCESS
    int DOWNLOAD_NEED_RESTART -> DOWNLOAD_NEED_RESTART
com.umeng.update.a -> com.umeng.update.a:
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.b -> com.umeng.update.b:
    android.content.Context a -> a
    java.lang.String[] b -> b
    java.lang.String c -> c
    boolean a() -> a
    com.umeng.update.UpdateResponse b() -> b
com.umeng.update.c -> com.umeng.update.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    int t -> t
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    boolean a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    void e(boolean) -> e
    int f() -> f
    void a(int) -> a
    boolean g() -> g
    void f(boolean) -> f
com.umeng.update.d -> com.umeng.update.d:
    int a -> a
    int b -> b
    com.umeng.update.UpdateDialogActivity c -> c
    void onClick(android.view.View) -> onClick
com.umeng.update.e -> com.umeng.update.e:
    com.umeng.update.UpdateDialogActivity a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.umeng.update.f -> com.umeng.update.f:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.update.UmengDownloadListener c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    java.lang.String i -> i
    com.umeng.common.net.a j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.umeng.update.UmengDownloadListener) -> a
    boolean b() -> b
    void c() -> c
    void d() -> d
    void a(com.umeng.common.net.a) -> a
    void a() -> a
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> a
    com.umeng.update.f$a b(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> b
com.umeng.update.f$a -> com.umeng.update.f$a:
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.update.f d -> d
    com.umeng.update.f$a a(java.lang.CharSequence) -> a
    com.umeng.update.f$a b(java.lang.CharSequence) -> b
    com.umeng.update.f$a d(java.lang.CharSequence) -> d
    android.app.Notification a() -> a
com.umeng.update.g -> com.umeng.update.g:
    java.lang.String a -> a
    java.lang.String e -> e
    org.json.JSONObject f -> f
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
de.greenrobot.dao.AbstractDao -> de.greenrobot.dao.AbstractDao:
    android.database.sqlite.SQLiteDatabase db -> db
    de.greenrobot.dao.internal.DaoConfig config -> config
    de.greenrobot.dao.identityscope.IdentityScope identityScope -> identityScope
    de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong -> identityScopeLong
    de.greenrobot.dao.internal.TableStatements statements -> statements
    de.greenrobot.dao.AbstractDaoSession session -> session
    int pkOrdinal -> pkOrdinal
    de.greenrobot.dao.AbstractDaoSession getSession() -> getSession
    de.greenrobot.dao.internal.TableStatements getStatements() -> getStatements
    java.lang.String getTablename() -> getTablename
    de.greenrobot.dao.Property[] getProperties() -> getProperties
    de.greenrobot.dao.Property getPkProperty() -> getPkProperty
    java.lang.String[] getAllColumns() -> getAllColumns
    java.lang.String[] getPkColumns() -> getPkColumns
    java.lang.String[] getNonPkColumns() -> getNonPkColumns
    java.lang.Object load(java.lang.Object) -> load
    java.lang.Object loadByRowId(long) -> loadByRowId
    java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor) -> loadUniqueAndCloseCursor
    java.lang.Object loadUnique(android.database.Cursor) -> loadUnique
    java.util.List loadAll() -> loadAll
    boolean detach(java.lang.Object) -> detach
    java.util.List loadAllAndCloseCursor(android.database.Cursor) -> loadAllAndCloseCursor
    void insertInTx(java.lang.Iterable) -> insertInTx
    void insertInTx(java.lang.Object[]) -> insertInTx
    void insertInTx(java.lang.Iterable,boolean) -> insertInTx
    void insertOrReplaceInTx(java.lang.Iterable,boolean) -> insertOrReplaceInTx
    void insertOrReplaceInTx(java.lang.Iterable) -> insertOrReplaceInTx
    void insertOrReplaceInTx(java.lang.Object[]) -> insertOrReplaceInTx
    void executeInsertInTx(android.database.sqlite.SQLiteStatement,java.lang.Iterable,boolean) -> executeInsertInTx
    long insert(java.lang.Object) -> insert
    long insertWithoutSettingPk(java.lang.Object) -> insertWithoutSettingPk
    long insertOrReplace(java.lang.Object) -> insertOrReplace
    long executeInsert(java.lang.Object,android.database.sqlite.SQLiteStatement) -> executeInsert
    void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean) -> updateKeyAfterInsertAndAttach
    java.util.List loadAllFromCursor(android.database.Cursor) -> loadAllFromCursor
    java.lang.Object loadCurrent(android.database.Cursor,int,boolean) -> loadCurrent
    java.lang.Object loadCurrentOther(de.greenrobot.dao.AbstractDao,android.database.Cursor,int) -> loadCurrentOther
    java.util.List queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    de.greenrobot.dao.query.Query queryRawCreate(java.lang.String,java.lang.Object[]) -> queryRawCreate
    de.greenrobot.dao.query.Query queryRawCreateListArgs(java.lang.String,java.util.Collection) -> queryRawCreateListArgs
    void deleteAll() -> deleteAll
    void delete(java.lang.Object) -> delete
    void deleteByKey(java.lang.Object) -> deleteByKey
    void deleteByKeyInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement) -> deleteByKeyInsideSynchronized
    void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable) -> deleteInTxInternal
    void deleteInTx(java.lang.Iterable) -> deleteInTx
    void deleteInTx(java.lang.Object[]) -> deleteInTx
    void deleteByKeyInTx(java.lang.Iterable) -> deleteByKeyInTx
    void deleteByKeyInTx(java.lang.Object[]) -> deleteByKeyInTx
    void refresh(java.lang.Object) -> refresh
    void update(java.lang.Object) -> update
    de.greenrobot.dao.query.QueryBuilder queryBuilder() -> queryBuilder
    void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean) -> updateInsideSynchronized
    void attachEntity(java.lang.Object,java.lang.Object,boolean) -> attachEntity
    void attachEntity(java.lang.Object) -> attachEntity
    void updateInTx(java.lang.Iterable) -> updateInTx
    void updateInTx(java.lang.Object[]) -> updateInTx
    void assertSinglePk() -> assertSinglePk
    long count() -> count
    java.lang.Object getKeyVerified(java.lang.Object) -> getKeyVerified
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    java.lang.Object getKey(java.lang.Object) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
de.greenrobot.dao.AbstractDaoMaster -> de.greenrobot.dao.AbstractDaoMaster:
    android.database.sqlite.SQLiteDatabase db -> db
    int schemaVersion -> schemaVersion
    java.util.Map daoConfigMap -> daoConfigMap
    void registerDaoClass(java.lang.Class) -> registerDaoClass
    int getSchemaVersion() -> getSchemaVersion
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    de.greenrobot.dao.AbstractDaoSession newSession() -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
de.greenrobot.dao.AbstractDaoSession -> de.greenrobot.dao.AbstractDaoSession:
    android.database.sqlite.SQLiteDatabase db -> db
    java.util.Map entityToDao -> entityToDao
    void registerDao(java.lang.Class,de.greenrobot.dao.AbstractDao) -> registerDao
    long insert(java.lang.Object) -> insert
    long insertOrReplace(java.lang.Object) -> insertOrReplace
    void refresh(java.lang.Object) -> refresh
    void update(java.lang.Object) -> update
    void delete(java.lang.Object) -> delete
    void deleteAll(java.lang.Class) -> deleteAll
    java.lang.Object load(java.lang.Class,java.lang.Object) -> load
    java.util.List loadAll(java.lang.Class) -> loadAll
    java.util.List queryRaw(java.lang.Class,java.lang.String,java.lang.String[]) -> queryRaw
    de.greenrobot.dao.query.QueryBuilder queryBuilder(java.lang.Class) -> queryBuilder
    de.greenrobot.dao.AbstractDao getDao(java.lang.Class) -> getDao
    void runInTx(java.lang.Runnable) -> runInTx
    java.lang.Object callInTx(java.util.concurrent.Callable) -> callInTx
    java.lang.Object callInTxNoException(java.util.concurrent.Callable) -> callInTxNoException
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    de.greenrobot.dao.async.AsyncSession startAsyncSession() -> startAsyncSession
de.greenrobot.dao.DaoException -> de.greenrobot.dao.DaoException:
    long serialVersionUID -> serialVersionUID
    void safeInitCause(java.lang.Throwable) -> safeInitCause
de.greenrobot.dao.DaoLog -> de.greenrobot.dao.DaoLog:
    java.lang.String TAG -> TAG
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int ASSERT -> ASSERT
    boolean isLoggable(int) -> isLoggable
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    int println(int,java.lang.String) -> println
    int v(java.lang.String) -> v
    int v(java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String) -> d
    int d(java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String) -> i
    int i(java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.Throwable) -> w
    int e(java.lang.String) -> e
    int e(java.lang.String,java.lang.Throwable) -> e
de.greenrobot.dao.DbUtils -> de.greenrobot.dao.DbUtils:
    void vacuum(android.database.sqlite.SQLiteDatabase) -> vacuum
    int executeSqlScript(android.content.Context,android.database.sqlite.SQLiteDatabase,java.lang.String) -> executeSqlScript
    int executeSqlScript(android.content.Context,android.database.sqlite.SQLiteDatabase,java.lang.String,boolean) -> executeSqlScript
    int executeSqlStatementsInTx(android.database.sqlite.SQLiteDatabase,java.lang.String[]) -> executeSqlStatementsInTx
    int executeSqlStatements(android.database.sqlite.SQLiteDatabase,java.lang.String[]) -> executeSqlStatements
    int copyAllBytes(java.io.InputStream,java.io.OutputStream) -> copyAllBytes
    byte[] readAllBytes(java.io.InputStream) -> readAllBytes
    byte[] readAsset(android.content.Context,java.lang.String) -> readAsset
    void logTableDump(android.database.sqlite.SQLiteDatabase,java.lang.String) -> logTableDump
de.greenrobot.dao.InternalQueryDaoAccess -> de.greenrobot.dao.InternalQueryDaoAccess:
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.Object loadCurrent(android.database.Cursor,int,boolean) -> loadCurrent
    java.util.List loadAllAndCloseCursor(android.database.Cursor) -> loadAllAndCloseCursor
    java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor) -> loadUniqueAndCloseCursor
    de.greenrobot.dao.internal.TableStatements getStatements() -> getStatements
    de.greenrobot.dao.internal.TableStatements getStatements(de.greenrobot.dao.AbstractDao) -> getStatements
de.greenrobot.dao.InternalUnitTestDaoAccess -> de.greenrobot.dao.InternalUnitTestDaoAccess:
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.Object getKey(java.lang.Object) -> getKey
    de.greenrobot.dao.Property[] getProperties() -> getProperties
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    de.greenrobot.dao.AbstractDao getDao() -> getDao
de.greenrobot.dao.Property -> de.greenrobot.dao.Property:
    int ordinal -> ordinal
    java.lang.Class type -> type
    java.lang.String name -> name
    boolean primaryKey -> primaryKey
    java.lang.String columnName -> columnName
    de.greenrobot.dao.query.WhereCondition eq(java.lang.Object) -> eq
    de.greenrobot.dao.query.WhereCondition notEq(java.lang.Object) -> notEq
    de.greenrobot.dao.query.WhereCondition like(java.lang.String) -> like
    de.greenrobot.dao.query.WhereCondition between(java.lang.Object,java.lang.Object) -> between
    de.greenrobot.dao.query.WhereCondition in(java.lang.Object[]) -> in
    de.greenrobot.dao.query.WhereCondition in(java.util.Collection) -> in
    de.greenrobot.dao.query.WhereCondition notIn(java.lang.Object[]) -> notIn
    de.greenrobot.dao.query.WhereCondition notIn(java.util.Collection) -> notIn
    de.greenrobot.dao.query.WhereCondition gt(java.lang.Object) -> gt
    de.greenrobot.dao.query.WhereCondition lt(java.lang.Object) -> lt
    de.greenrobot.dao.query.WhereCondition ge(java.lang.Object) -> ge
    de.greenrobot.dao.query.WhereCondition le(java.lang.Object) -> le
    de.greenrobot.dao.query.WhereCondition isNull() -> isNull
    de.greenrobot.dao.query.WhereCondition isNotNull() -> isNotNull
de.greenrobot.dao.async.AsyncDaoException -> de.greenrobot.dao.async.AsyncDaoException:
    long serialVersionUID -> serialVersionUID
    de.greenrobot.dao.async.AsyncOperation failedOperation -> failedOperation
    de.greenrobot.dao.async.AsyncOperation getFailedOperation() -> getFailedOperation
de.greenrobot.dao.async.AsyncOperation -> de.greenrobot.dao.async.AsyncOperation:
    int FLAG_MERGE_TX -> FLAG_MERGE_TX
    int FLAG_STOP_QUEUE_ON_EXCEPTION -> FLAG_STOP_QUEUE_ON_EXCEPTION
    de.greenrobot.dao.async.AsyncOperation$OperationType type -> type
    de.greenrobot.dao.AbstractDao dao -> dao
    android.database.sqlite.SQLiteDatabase database -> database
    java.lang.Object parameter -> parameter
    int flags -> flags
    long timeStarted -> timeStarted
    long timeCompleted -> timeCompleted
    boolean completed -> completed
    java.lang.Throwable throwable -> throwable
    java.lang.Object result -> result
    int mergedOperationsCount -> mergedOperationsCount
    int sequenceNumber -> sequenceNumber
    java.lang.Throwable getThrowable() -> getThrowable
    void setThrowable(java.lang.Throwable) -> setThrowable
    de.greenrobot.dao.async.AsyncOperation$OperationType getType() -> getType
    java.lang.Object getParameter() -> getParameter
    java.lang.Object getResult() -> getResult
    boolean isMergeTx() -> isMergeTx
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    boolean isMergeableWith(de.greenrobot.dao.async.AsyncOperation) -> isMergeableWith
    long getTimeStarted() -> getTimeStarted
    long getTimeCompleted() -> getTimeCompleted
    long getDuration() -> getDuration
    boolean isFailed() -> isFailed
    boolean isCompleted() -> isCompleted
    java.lang.Object waitForCompletion() -> waitForCompletion
    boolean waitForCompletion(int) -> waitForCompletion
    void setCompleted() -> setCompleted
    boolean isCompletedSucessfully() -> isCompletedSucessfully
    int getMergedOperationsCount() -> getMergedOperationsCount
    int getSequenceNumber() -> getSequenceNumber
    void reset() -> reset
de.greenrobot.dao.async.AsyncOperation$OperationType -> de.greenrobot.dao.async.AsyncOperation$OperationType:
    de.greenrobot.dao.async.AsyncOperation$OperationType Insert -> Insert
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertInTxIterable -> InsertInTxIterable
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertInTxArray -> InsertInTxArray
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplace -> InsertOrReplace
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplaceInTxIterable -> InsertOrReplaceInTxIterable
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplaceInTxArray -> InsertOrReplaceInTxArray
    de.greenrobot.dao.async.AsyncOperation$OperationType Update -> Update
    de.greenrobot.dao.async.AsyncOperation$OperationType UpdateInTxIterable -> UpdateInTxIterable
    de.greenrobot.dao.async.AsyncOperation$OperationType UpdateInTxArray -> UpdateInTxArray
    de.greenrobot.dao.async.AsyncOperation$OperationType Delete -> Delete
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteInTxIterable -> DeleteInTxIterable
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteInTxArray -> DeleteInTxArray
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteByKey -> DeleteByKey
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteAll -> DeleteAll
    de.greenrobot.dao.async.AsyncOperation$OperationType TransactionRunnable -> TransactionRunnable
    de.greenrobot.dao.async.AsyncOperation$OperationType TransactionCallable -> TransactionCallable
    de.greenrobot.dao.async.AsyncOperation$OperationType QueryList -> QueryList
    de.greenrobot.dao.async.AsyncOperation$OperationType QueryUnique -> QueryUnique
    de.greenrobot.dao.async.AsyncOperation$OperationType Load -> Load
    de.greenrobot.dao.async.AsyncOperation$OperationType LoadAll -> LoadAll
    de.greenrobot.dao.async.AsyncOperation$OperationType Count -> Count
    de.greenrobot.dao.async.AsyncOperation$OperationType Refresh -> Refresh
    de.greenrobot.dao.async.AsyncOperation$OperationType[] $VALUES -> $VALUES
    de.greenrobot.dao.async.AsyncOperation$OperationType[] values() -> values
    de.greenrobot.dao.async.AsyncOperation$OperationType valueOf(java.lang.String) -> valueOf
de.greenrobot.dao.async.AsyncOperationExecutor -> de.greenrobot.dao.async.AsyncOperationExecutor:
    java.util.concurrent.ExecutorService executorService -> executorService
    java.util.concurrent.BlockingQueue queue -> queue
    boolean executorRunning -> executorRunning
    int maxOperationCountToMerge -> maxOperationCountToMerge
    de.greenrobot.dao.async.AsyncOperationListener listener -> listener
    de.greenrobot.dao.async.AsyncOperationListener listenerMainThread -> listenerMainThread
    int waitForMergeMillis -> waitForMergeMillis
    int countOperationsEnqueued -> countOperationsEnqueued
    int countOperationsCompleted -> countOperationsCompleted
    android.os.Handler handlerMainThread -> handlerMainThread
    int lastSequenceNumber -> lastSequenceNumber
    void enqueue(de.greenrobot.dao.async.AsyncOperation) -> enqueue
    int getMaxOperationCountToMerge() -> getMaxOperationCountToMerge
    void setMaxOperationCountToMerge(int) -> setMaxOperationCountToMerge
    int getWaitForMergeMillis() -> getWaitForMergeMillis
    void setWaitForMergeMillis(int) -> setWaitForMergeMillis
    de.greenrobot.dao.async.AsyncOperationListener getListener() -> getListener
    void setListener(de.greenrobot.dao.async.AsyncOperationListener) -> setListener
    de.greenrobot.dao.async.AsyncOperationListener getListenerMainThread() -> getListenerMainThread
    void setListenerMainThread(de.greenrobot.dao.async.AsyncOperationListener) -> setListenerMainThread
    boolean isCompleted() -> isCompleted
    void waitForCompletion() -> waitForCompletion
    boolean waitForCompletion(int) -> waitForCompletion
    void run() -> run
    void mergeTxAndExecute(de.greenrobot.dao.async.AsyncOperation,de.greenrobot.dao.async.AsyncOperation) -> mergeTxAndExecute
    void handleOperationCompleted(de.greenrobot.dao.async.AsyncOperation) -> handleOperationCompleted
    void executeOperationAndPostCompleted(de.greenrobot.dao.async.AsyncOperation) -> executeOperationAndPostCompleted
    void executeOperation(de.greenrobot.dao.async.AsyncOperation) -> executeOperation
    void executeTransactionRunnable(de.greenrobot.dao.async.AsyncOperation) -> executeTransactionRunnable
    void executeTransactionCallable(de.greenrobot.dao.async.AsyncOperation) -> executeTransactionCallable
    boolean handleMessage(android.os.Message) -> handleMessage
de.greenrobot.dao.async.AsyncOperationExecutor$1 -> de.greenrobot.dao.async.AsyncOperationExecutor$1:
    int[] $SwitchMap$de$greenrobot$dao$async$AsyncOperation$OperationType -> $SwitchMap$de$greenrobot$dao$async$AsyncOperation$OperationType
de.greenrobot.dao.async.AsyncOperationListener -> de.greenrobot.dao.async.AsyncOperationListener:
    void onAsyncOperationCompleted(de.greenrobot.dao.async.AsyncOperation) -> onAsyncOperationCompleted
de.greenrobot.dao.async.AsyncSession -> de.greenrobot.dao.async.AsyncSession:
    de.greenrobot.dao.AbstractDaoSession daoSession -> daoSession
    de.greenrobot.dao.async.AsyncOperationExecutor executor -> executor
    int getMaxOperationCountToMerge() -> getMaxOperationCountToMerge
    void setMaxOperationCountToMerge(int) -> setMaxOperationCountToMerge
    int getWaitForMergeMillis() -> getWaitForMergeMillis
    void setWaitForMergeMillis(int) -> setWaitForMergeMillis
    de.greenrobot.dao.async.AsyncOperationListener getListener() -> getListener
    void setListener(de.greenrobot.dao.async.AsyncOperationListener) -> setListener
    de.greenrobot.dao.async.AsyncOperationListener getListenerMainThread() -> getListenerMainThread
    void setListenerMainThread(de.greenrobot.dao.async.AsyncOperationListener) -> setListenerMainThread
    boolean isCompleted() -> isCompleted
    void waitForCompletion() -> waitForCompletion
    boolean waitForCompletion(int) -> waitForCompletion
    de.greenrobot.dao.async.AsyncOperation insert(java.lang.Object) -> insert
    de.greenrobot.dao.async.AsyncOperation insert(java.lang.Object,int) -> insert
    de.greenrobot.dao.async.AsyncOperation insertInTx(java.lang.Class,java.lang.Object[]) -> insertInTx
    de.greenrobot.dao.async.AsyncOperation insertInTx(java.lang.Class,int,java.lang.Object[]) -> insertInTx
    de.greenrobot.dao.async.AsyncOperation insertInTx(java.lang.Class,java.lang.Iterable) -> insertInTx
    de.greenrobot.dao.async.AsyncOperation insertInTx(java.lang.Class,java.lang.Iterable,int) -> insertInTx
    de.greenrobot.dao.async.AsyncOperation insertOrReplace(java.lang.Object) -> insertOrReplace
    de.greenrobot.dao.async.AsyncOperation insertOrReplace(java.lang.Object,int) -> insertOrReplace
    de.greenrobot.dao.async.AsyncOperation insertOrReplaceInTx(java.lang.Class,java.lang.Object[]) -> insertOrReplaceInTx
    de.greenrobot.dao.async.AsyncOperation insertOrReplaceInTx(java.lang.Class,int,java.lang.Object[]) -> insertOrReplaceInTx
    de.greenrobot.dao.async.AsyncOperation insertOrReplaceInTx(java.lang.Class,java.lang.Iterable) -> insertOrReplaceInTx
    de.greenrobot.dao.async.AsyncOperation insertOrReplaceInTx(java.lang.Class,java.lang.Iterable,int) -> insertOrReplaceInTx
    de.greenrobot.dao.async.AsyncOperation update(java.lang.Object) -> update
    de.greenrobot.dao.async.AsyncOperation update(java.lang.Object,int) -> update
    de.greenrobot.dao.async.AsyncOperation updateInTx(java.lang.Class,java.lang.Object[]) -> updateInTx
    de.greenrobot.dao.async.AsyncOperation updateInTx(java.lang.Class,int,java.lang.Object[]) -> updateInTx
    de.greenrobot.dao.async.AsyncOperation updateInTx(java.lang.Class,java.lang.Iterable) -> updateInTx
    de.greenrobot.dao.async.AsyncOperation updateInTx(java.lang.Class,java.lang.Iterable,int) -> updateInTx
    de.greenrobot.dao.async.AsyncOperation delete(java.lang.Object) -> delete
    de.greenrobot.dao.async.AsyncOperation delete(java.lang.Object,int) -> delete
    de.greenrobot.dao.async.AsyncOperation deleteByKey(java.lang.Object) -> deleteByKey
    de.greenrobot.dao.async.AsyncOperation deleteByKey(java.lang.Object,int) -> deleteByKey
    de.greenrobot.dao.async.AsyncOperation deleteInTx(java.lang.Class,java.lang.Object[]) -> deleteInTx
    de.greenrobot.dao.async.AsyncOperation deleteInTx(java.lang.Class,int,java.lang.Object[]) -> deleteInTx
    de.greenrobot.dao.async.AsyncOperation deleteInTx(java.lang.Class,java.lang.Iterable) -> deleteInTx
    de.greenrobot.dao.async.AsyncOperation deleteInTx(java.lang.Class,java.lang.Iterable,int) -> deleteInTx
    de.greenrobot.dao.async.AsyncOperation deleteAll(java.lang.Class) -> deleteAll
    de.greenrobot.dao.async.AsyncOperation deleteAll(java.lang.Class,int) -> deleteAll
    de.greenrobot.dao.async.AsyncOperation runInTx(java.lang.Runnable) -> runInTx
    de.greenrobot.dao.async.AsyncOperation runInTx(java.lang.Runnable,int) -> runInTx
    de.greenrobot.dao.async.AsyncOperation callInTx(java.util.concurrent.Callable) -> callInTx
    de.greenrobot.dao.async.AsyncOperation callInTx(java.util.concurrent.Callable,int) -> callInTx
    de.greenrobot.dao.async.AsyncOperation queryList(de.greenrobot.dao.query.Query) -> queryList
    de.greenrobot.dao.async.AsyncOperation queryList(de.greenrobot.dao.query.Query,int) -> queryList
    de.greenrobot.dao.async.AsyncOperation queryUnique(de.greenrobot.dao.query.Query) -> queryUnique
    de.greenrobot.dao.async.AsyncOperation queryUnique(de.greenrobot.dao.query.Query,int) -> queryUnique
    de.greenrobot.dao.async.AsyncOperation load(java.lang.Class,java.lang.Object) -> load
    de.greenrobot.dao.async.AsyncOperation load(java.lang.Class,java.lang.Object,int) -> load
    de.greenrobot.dao.async.AsyncOperation loadAll(java.lang.Class) -> loadAll
    de.greenrobot.dao.async.AsyncOperation loadAll(java.lang.Class,int) -> loadAll
    de.greenrobot.dao.async.AsyncOperation count(java.lang.Class) -> count
    de.greenrobot.dao.async.AsyncOperation count(java.lang.Class,int) -> count
    de.greenrobot.dao.async.AsyncOperation refresh(java.lang.Object) -> refresh
    de.greenrobot.dao.async.AsyncOperation refresh(java.lang.Object,int) -> refresh
    de.greenrobot.dao.async.AsyncOperation enqueueDatabaseOperation(de.greenrobot.dao.async.AsyncOperation$OperationType,java.lang.Object,int) -> enqueueDatabaseOperation
    de.greenrobot.dao.async.AsyncOperation enqueueEntityOperation(de.greenrobot.dao.async.AsyncOperation$OperationType,java.lang.Object,int) -> enqueueEntityOperation
    de.greenrobot.dao.async.AsyncOperation enqueEntityOperation(de.greenrobot.dao.async.AsyncOperation$OperationType,java.lang.Class,java.lang.Object,int) -> enqueEntityOperation
de.greenrobot.dao.identityscope.IdentityScope -> de.greenrobot.dao.identityscope.IdentityScope:
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object getNoLock(java.lang.Object) -> getNoLock
    void putNoLock(java.lang.Object,java.lang.Object) -> putNoLock
    boolean detach(java.lang.Object,java.lang.Object) -> detach
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Iterable) -> remove
    void clear() -> clear
    void lock() -> lock
    void unlock() -> unlock
    void reserveRoom(int) -> reserveRoom
de.greenrobot.dao.identityscope.IdentityScopeLong -> de.greenrobot.dao.identityscope.IdentityScopeLong:
    de.greenrobot.dao.internal.LongHashMap map -> map
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.lang.Object get(java.lang.Long) -> get
    java.lang.Object getNoLock(java.lang.Long) -> getNoLock
    java.lang.Object get2(long) -> get2
    java.lang.Object get2NoLock(long) -> get2NoLock
    void put(java.lang.Long,java.lang.Object) -> put
    void putNoLock(java.lang.Long,java.lang.Object) -> putNoLock
    void put2(long,java.lang.Object) -> put2
    void put2NoLock(long,java.lang.Object) -> put2NoLock
    boolean detach(java.lang.Long,java.lang.Object) -> detach
    void remove(java.lang.Long) -> remove
    void remove(java.lang.Iterable) -> remove
    void clear() -> clear
    void lock() -> lock
    void unlock() -> unlock
    void reserveRoom(int) -> reserveRoom
    void remove(java.lang.Object) -> remove
    boolean detach(java.lang.Object,java.lang.Object) -> detach
    void putNoLock(java.lang.Object,java.lang.Object) -> putNoLock
    java.lang.Object getNoLock(java.lang.Object) -> getNoLock
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
de.greenrobot.dao.identityscope.IdentityScopeObject -> de.greenrobot.dao.identityscope.IdentityScopeObject:
    java.util.HashMap map -> map
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getNoLock(java.lang.Object) -> getNoLock
    void put(java.lang.Object,java.lang.Object) -> put
    void putNoLock(java.lang.Object,java.lang.Object) -> putNoLock
    boolean detach(java.lang.Object,java.lang.Object) -> detach
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Iterable) -> remove
    void clear() -> clear
    void lock() -> lock
    void unlock() -> unlock
    void reserveRoom(int) -> reserveRoom
de.greenrobot.dao.identityscope.IdentityScopeType -> de.greenrobot.dao.identityscope.IdentityScopeType:
    de.greenrobot.dao.identityscope.IdentityScopeType Session -> Session
    de.greenrobot.dao.identityscope.IdentityScopeType None -> None
    de.greenrobot.dao.identityscope.IdentityScopeType[] $VALUES -> $VALUES
    de.greenrobot.dao.identityscope.IdentityScopeType[] values() -> values
    de.greenrobot.dao.identityscope.IdentityScopeType valueOf(java.lang.String) -> valueOf
de.greenrobot.dao.internal.DaoConfig -> de.greenrobot.dao.internal.DaoConfig:
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String tablename -> tablename
    de.greenrobot.dao.Property[] properties -> properties
    java.lang.String[] allColumns -> allColumns
    java.lang.String[] pkColumns -> pkColumns
    java.lang.String[] nonPkColumns -> nonPkColumns
    de.greenrobot.dao.Property pkProperty -> pkProperty
    boolean keyIsNumeric -> keyIsNumeric
    de.greenrobot.dao.internal.TableStatements statements -> statements
    de.greenrobot.dao.identityscope.IdentityScope identityScope -> identityScope
    de.greenrobot.dao.Property[] reflectProperties(java.lang.Class) -> reflectProperties
    de.greenrobot.dao.internal.DaoConfig clone() -> clone
    de.greenrobot.dao.identityscope.IdentityScope getIdentityScope() -> getIdentityScope
    void setIdentityScope(de.greenrobot.dao.identityscope.IdentityScope) -> setIdentityScope
    void initIdentityScope(de.greenrobot.dao.identityscope.IdentityScopeType) -> initIdentityScope
    java.lang.Object clone() -> clone
de.greenrobot.dao.internal.FastCursor -> de.greenrobot.dao.internal.FastCursor:
    android.database.CursorWindow window -> window
    int position -> position
    int count -> count
    int getCount() -> getCount
    int getPosition() -> getPosition
    boolean move(int) -> move
    boolean moveToPosition(int) -> moveToPosition
    boolean moveToFirst() -> moveToFirst
    boolean moveToLast() -> moveToLast
    boolean moveToNext() -> moveToNext
    boolean moveToPrevious() -> moveToPrevious
    boolean isFirst() -> isFirst
    boolean isLast() -> isLast
    boolean isBeforeFirst() -> isBeforeFirst
    boolean isAfterLast() -> isAfterLast
    int getColumnIndex(java.lang.String) -> getColumnIndex
    int getColumnIndexOrThrow(java.lang.String) -> getColumnIndexOrThrow
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.String[] getColumnNames() -> getColumnNames
    int getColumnCount() -> getColumnCount
    byte[] getBlob(int) -> getBlob
    java.lang.String getString(int) -> getString
    void copyStringToBuffer(int,android.database.CharArrayBuffer) -> copyStringToBuffer
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    boolean isNull(int) -> isNull
    void deactivate() -> deactivate
    boolean requery() -> requery
    void close() -> close
    boolean isClosed() -> isClosed
    void registerContentObserver(android.database.ContentObserver) -> registerContentObserver
    void unregisterContentObserver(android.database.ContentObserver) -> unregisterContentObserver
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void setNotificationUri(android.content.ContentResolver,android.net.Uri) -> setNotificationUri
    boolean getWantsAllOnMoveCalls() -> getWantsAllOnMoveCalls
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle respond(android.os.Bundle) -> respond
    int getType(int) -> getType
de.greenrobot.dao.internal.LongHashMap -> de.greenrobot.dao.internal.LongHashMap:
    de.greenrobot.dao.internal.LongHashMap$Entry[] table -> table
    int capacity -> capacity
    int threshold -> threshold
    int size -> size
    boolean containsKey(long) -> containsKey
    java.lang.Object get(long) -> get
    java.lang.Object put(long,java.lang.Object) -> put
    java.lang.Object remove(long) -> remove
    void clear() -> clear
    int size() -> size
    void setCapacity(int) -> setCapacity
    void reserveRoom(int) -> reserveRoom
    void logStats() -> logStats
de.greenrobot.dao.internal.LongHashMap$Entry -> de.greenrobot.dao.internal.LongHashMap$Entry:
    long key -> key
    java.lang.Object value -> value
    de.greenrobot.dao.internal.LongHashMap$Entry next -> next
de.greenrobot.dao.internal.SqlUtils -> de.greenrobot.dao.internal.SqlUtils:
    java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String) -> appendColumn
    java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendColumn
    java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String,java.lang.String[]) -> appendColumns
    java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String[]) -> appendColumns
    java.lang.StringBuilder appendPlaceholders(java.lang.StringBuilder,int) -> appendPlaceholders
    java.lang.StringBuilder appendColumnsEqualPlaceholders(java.lang.StringBuilder,java.lang.String[]) -> appendColumnsEqualPlaceholders
    java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[]) -> appendColumnsEqValue
    java.lang.String createSqlInsert(java.lang.String,java.lang.String,java.lang.String[]) -> createSqlInsert
    java.lang.String createSqlSelect(java.lang.String,java.lang.String,java.lang.String[]) -> createSqlSelect
    java.lang.String createSqlSelectCountStar(java.lang.String) -> createSqlSelectCountStar
    java.lang.String createSqlDelete(java.lang.String,java.lang.String[]) -> createSqlDelete
    java.lang.String createSqlUpdate(java.lang.String,java.lang.String[],java.lang.String[]) -> createSqlUpdate
de.greenrobot.dao.internal.TableStatements -> de.greenrobot.dao.internal.TableStatements:
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String tablename -> tablename
    java.lang.String[] allColumns -> allColumns
    java.lang.String[] pkColumns -> pkColumns
    android.database.sqlite.SQLiteStatement insertStatement -> insertStatement
    android.database.sqlite.SQLiteStatement insertOrReplaceStatement -> insertOrReplaceStatement
    android.database.sqlite.SQLiteStatement updateStatement -> updateStatement
    android.database.sqlite.SQLiteStatement deleteStatement -> deleteStatement
    java.lang.String selectAll -> selectAll
    java.lang.String selectByKey -> selectByKey
    java.lang.String selectByRowId -> selectByRowId
    java.lang.String selectKeys -> selectKeys
    android.database.sqlite.SQLiteStatement getInsertStatement() -> getInsertStatement
    android.database.sqlite.SQLiteStatement getInsertOrReplaceStatement() -> getInsertOrReplaceStatement
    android.database.sqlite.SQLiteStatement getDeleteStatement() -> getDeleteStatement
    android.database.sqlite.SQLiteStatement getUpdateStatement() -> getUpdateStatement
    java.lang.String getSelectAll() -> getSelectAll
    java.lang.String getSelectKeys() -> getSelectKeys
    java.lang.String getSelectByKey() -> getSelectByKey
    java.lang.String getSelectByRowId() -> getSelectByRowId
de.greenrobot.dao.query.AbstractQuery -> de.greenrobot.dao.query.AbstractQuery:
    de.greenrobot.dao.AbstractDao dao -> dao
    de.greenrobot.dao.InternalQueryDaoAccess daoAccess -> daoAccess
    java.lang.String sql -> sql
    java.lang.String[] parameters -> parameters
    java.lang.Thread ownerThread -> ownerThread
    java.lang.String[] toStringArray(java.lang.Object[]) -> toStringArray
    void setParameter(int,java.lang.Object) -> setParameter
    void checkThread() -> checkThread
de.greenrobot.dao.query.CloseableListIterator -> de.greenrobot.dao.query.CloseableListIterator:
de.greenrobot.dao.query.CountQuery -> de.greenrobot.dao.query.CountQuery:
    de.greenrobot.dao.query.CountQuery$ThreadLocalQuery threadLocalQuery -> threadLocalQuery
    de.greenrobot.dao.query.CountQuery create(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[]) -> create
    de.greenrobot.dao.query.CountQuery forCurrentThread() -> forCurrentThread
    long count() -> count
    void setParameter(int,java.lang.Object) -> setParameter
de.greenrobot.dao.query.CountQuery$1 -> de.greenrobot.dao.query.CountQuery$1:
de.greenrobot.dao.query.CountQuery$ThreadLocalQuery -> de.greenrobot.dao.query.CountQuery$ThreadLocalQuery:
    java.lang.String sql -> sql
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.String[] initialValues -> initialValues
    de.greenrobot.dao.query.CountQuery initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
    java.lang.String[] access$200(de.greenrobot.dao.query.CountQuery$ThreadLocalQuery) -> access$200
de.greenrobot.dao.query.DeleteQuery -> de.greenrobot.dao.query.DeleteQuery:
    android.database.sqlite.SQLiteStatement compiledStatement -> compiledStatement
    de.greenrobot.dao.query.DeleteQuery$ThreadLocalQuery threadLocalQuery -> threadLocalQuery
    de.greenrobot.dao.query.DeleteQuery create(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[]) -> create
    de.greenrobot.dao.query.DeleteQuery forCurrentThread() -> forCurrentThread
    void executeDeleteWithoutDetachingEntities() -> executeDeleteWithoutDetachingEntities
    void executeDeleteWithoutDetachingEntitiesInsideTx() -> executeDeleteWithoutDetachingEntitiesInsideTx
    void setParameter(int,java.lang.Object) -> setParameter
de.greenrobot.dao.query.DeleteQuery$1 -> de.greenrobot.dao.query.DeleteQuery$1:
de.greenrobot.dao.query.DeleteQuery$ThreadLocalQuery -> de.greenrobot.dao.query.DeleteQuery$ThreadLocalQuery:
    java.lang.String sql -> sql
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.String[] initialValues -> initialValues
    de.greenrobot.dao.query.DeleteQuery initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
    java.lang.String[] access$200(de.greenrobot.dao.query.DeleteQuery$ThreadLocalQuery) -> access$200
de.greenrobot.dao.query.LazyList -> de.greenrobot.dao.query.LazyList:
    de.greenrobot.dao.InternalQueryDaoAccess daoAccess -> daoAccess
    android.database.Cursor cursor -> cursor
    java.util.List entities -> entities
    int size -> size
    java.util.concurrent.locks.ReentrantLock lock -> lock
    int loadedCount -> loadedCount
    void loadRemaining() -> loadRemaining
    void checkCached() -> checkCached
    java.lang.Object peak(int) -> peak
    void close() -> close
    boolean isClosed() -> isClosed
    int getLoadedCount() -> getLoadedCount
    boolean isLoadedCompletely() -> isLoadedCompletely
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object get(int) -> get
    java.lang.Object loadEntity(int) -> loadEntity
    int indexOf(java.lang.Object) -> indexOf
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    de.greenrobot.dao.query.CloseableListIterator listIterator() -> listIterator
    de.greenrobot.dao.query.CloseableListIterator listIteratorAutoClose() -> listIteratorAutoClose
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object set(int,java.lang.Object) -> set
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.ListIterator listIterator() -> listIterator
    int access$000(de.greenrobot.dao.query.LazyList) -> access$000
de.greenrobot.dao.query.LazyList$LazyIterator -> de.greenrobot.dao.query.LazyList$LazyIterator:
    int index -> index
    boolean closeWhenDone -> closeWhenDone
    de.greenrobot.dao.query.LazyList this$0 -> this$0
    void add(java.lang.Object) -> add
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> close
de.greenrobot.dao.query.Query -> de.greenrobot.dao.query.Query:
    int limitPosition -> limitPosition
    int offsetPosition -> offsetPosition
    de.greenrobot.dao.query.Query$ThreadLocalQuery threadLocalQuery -> threadLocalQuery
    de.greenrobot.dao.query.Query internalCreate(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[]) -> internalCreate
    de.greenrobot.dao.query.Query create(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[],int,int) -> create
    de.greenrobot.dao.query.Query forCurrentThread() -> forCurrentThread
    void setParameter(int,java.lang.Object) -> setParameter
    void setLimit(int) -> setLimit
    void setOffset(int) -> setOffset
    java.util.List list() -> list
    de.greenrobot.dao.query.LazyList listLazy() -> listLazy
    de.greenrobot.dao.query.LazyList listLazyUncached() -> listLazyUncached
    de.greenrobot.dao.query.CloseableListIterator listIterator() -> listIterator
    java.lang.Object unique() -> unique
    java.lang.Object uniqueOrThrow() -> uniqueOrThrow
de.greenrobot.dao.query.Query$1 -> de.greenrobot.dao.query.Query$1:
de.greenrobot.dao.query.Query$ThreadLocalQuery -> de.greenrobot.dao.query.Query$ThreadLocalQuery:
    java.lang.String sql -> sql
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.String[] initialValues -> initialValues
    int limitPosition -> limitPosition
    int offsetPosition -> offsetPosition
    de.greenrobot.dao.query.Query initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
    java.lang.String[] access$200(de.greenrobot.dao.query.Query$ThreadLocalQuery) -> access$200
de.greenrobot.dao.query.QueryBuilder -> de.greenrobot.dao.query.QueryBuilder:
    boolean LOG_SQL -> LOG_SQL
    boolean LOG_VALUES -> LOG_VALUES
    java.lang.StringBuilder orderBuilder -> orderBuilder
    java.lang.StringBuilder joinBuilder -> joinBuilder
    java.util.List whereConditions -> whereConditions
    java.util.List values -> values
    de.greenrobot.dao.AbstractDao dao -> dao
    java.lang.String tablePrefix -> tablePrefix
    java.lang.Integer limit -> limit
    java.lang.Integer offset -> offset
    de.greenrobot.dao.query.QueryBuilder internalCreate(de.greenrobot.dao.AbstractDao) -> internalCreate
    void checkOrderBuilder() -> checkOrderBuilder
    de.greenrobot.dao.query.QueryBuilder where(de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> where
    de.greenrobot.dao.query.QueryBuilder whereOr(de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> whereOr
    de.greenrobot.dao.query.WhereCondition or(de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> or
    de.greenrobot.dao.query.WhereCondition and(de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> and
    de.greenrobot.dao.query.WhereCondition combineWhereConditions(java.lang.String,de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> combineWhereConditions
    void addCondition(java.lang.StringBuilder,java.util.List,de.greenrobot.dao.query.WhereCondition) -> addCondition
    void checkCondition(de.greenrobot.dao.query.WhereCondition) -> checkCondition
    de.greenrobot.dao.query.QueryBuilder join(java.lang.Class,de.greenrobot.dao.Property) -> join
    de.greenrobot.dao.query.QueryBuilder joinToMany(java.lang.Class,de.greenrobot.dao.Property) -> joinToMany
    de.greenrobot.dao.query.QueryBuilder orderAsc(de.greenrobot.dao.Property[]) -> orderAsc
    de.greenrobot.dao.query.QueryBuilder orderDesc(de.greenrobot.dao.Property[]) -> orderDesc
    void orderAscOrDesc(java.lang.String,de.greenrobot.dao.Property[]) -> orderAscOrDesc
    de.greenrobot.dao.query.QueryBuilder orderCustom(de.greenrobot.dao.Property,java.lang.String) -> orderCustom
    de.greenrobot.dao.query.QueryBuilder orderRaw(java.lang.String) -> orderRaw
    java.lang.StringBuilder append(java.lang.StringBuilder,de.greenrobot.dao.Property) -> append
    void checkProperty(de.greenrobot.dao.Property) -> checkProperty
    de.greenrobot.dao.query.QueryBuilder limit(int) -> limit
    de.greenrobot.dao.query.QueryBuilder offset(int) -> offset
    de.greenrobot.dao.query.Query build() -> build
    de.greenrobot.dao.query.DeleteQuery buildDelete() -> buildDelete
    de.greenrobot.dao.query.CountQuery buildCount() -> buildCount
    void appendWhereClause(java.lang.StringBuilder,java.lang.String) -> appendWhereClause
    java.util.List list() -> list
    de.greenrobot.dao.query.LazyList listLazy() -> listLazy
    de.greenrobot.dao.query.LazyList listLazyUncached() -> listLazyUncached
    de.greenrobot.dao.query.CloseableListIterator listIterator() -> listIterator
    java.lang.Object unique() -> unique
    java.lang.Object uniqueOrThrow() -> uniqueOrThrow
    long count() -> count
de.greenrobot.dao.query.WhereCondition -> de.greenrobot.dao.query.WhereCondition:
    void appendTo(java.lang.StringBuilder,java.lang.String) -> appendTo
    void appendValuesTo(java.util.List) -> appendValuesTo
de.greenrobot.dao.query.WhereCondition$AbstractCondition -> de.greenrobot.dao.query.WhereCondition$AbstractCondition:
    boolean hasSingleValue -> hasSingleValue
    java.lang.Object value -> value
    java.lang.Object[] values -> values
    void appendValuesTo(java.util.List) -> appendValuesTo
de.greenrobot.dao.query.WhereCondition$PropertyCondition -> de.greenrobot.dao.query.WhereCondition$PropertyCondition:
    de.greenrobot.dao.Property property -> property
    java.lang.String op -> op
    java.lang.Object checkValueForType(de.greenrobot.dao.Property,java.lang.Object) -> checkValueForType
    java.lang.Object[] checkValuesForType(de.greenrobot.dao.Property,java.lang.Object[]) -> checkValuesForType
    void appendTo(java.lang.StringBuilder,java.lang.String) -> appendTo
de.greenrobot.dao.query.WhereCondition$StringCondition -> de.greenrobot.dao.query.WhereCondition$StringCondition:
    java.lang.String string -> string
    void appendTo(java.lang.StringBuilder,java.lang.String) -> appendTo
de.greenrobot.dao.test.AbstractDaoSessionTest -> de.greenrobot.dao.test.AbstractDaoSessionTest:
    java.lang.Class daoMasterClass -> daoMasterClass
    de.greenrobot.dao.AbstractDaoMaster daoMaster -> daoMaster
    de.greenrobot.dao.AbstractDaoSession daoSession -> daoSession
    void setUp() -> setUp
de.greenrobot.dao.test.AbstractDaoTest -> de.greenrobot.dao.test.AbstractDaoTest:
    java.lang.Class daoClass -> daoClass
    de.greenrobot.dao.AbstractDao dao -> dao
    de.greenrobot.dao.InternalUnitTestDaoAccess daoAccess -> daoAccess
    de.greenrobot.dao.Property pkColumn -> pkColumn
    de.greenrobot.dao.identityscope.IdentityScope identityScopeForDao -> identityScopeForDao
    void setIdentityScopeBeforeSetUp(de.greenrobot.dao.identityscope.IdentityScope) -> setIdentityScopeBeforeSetUp
    void setUp() -> setUp
    void setUpTableForDao() -> setUpTableForDao
    void clearIdentityScopeIfAny() -> clearIdentityScopeIfAny
    void logTableDump() -> logTableDump
de.greenrobot.dao.test.AbstractDaoTestLongPk -> de.greenrobot.dao.test.AbstractDaoTestLongPk:
    java.lang.Long createRandomPk() -> createRandomPk
    void testAssignPk() -> testAssignPk
    java.lang.Object createRandomPk() -> createRandomPk
de.greenrobot.dao.test.AbstractDaoTestSinglePk -> de.greenrobot.dao.test.AbstractDaoTestSinglePk:
    java.util.Set usedPks -> usedPks
    de.greenrobot.dao.Property pkColumn -> pkColumn
    void setUp() -> setUp
    void testInsertAndLoad() -> testInsertAndLoad
    void testInsertInTx() -> testInsertInTx
    void testCount() -> testCount
    void testInsertTwice() -> testInsertTwice
    void testInsertOrReplaceTwice() -> testInsertOrReplaceTwice
    void testInsertOrReplaceInTx() -> testInsertOrReplaceInTx
    void testDelete() -> testDelete
    void testDeleteAll() -> testDeleteAll
    void testDeleteInTx() -> testDeleteInTx
    void testDeleteByKeyInTx() -> testDeleteByKeyInTx
    void testRowId() -> testRowId
    void testLoadAll() -> testLoadAll
    void testQuery() -> testQuery
    void testUpdate() -> testUpdate
    void testReadWithOffset() -> testReadWithOffset
    void testLoadPkWithOffset() -> testLoadPkWithOffset
    void testLoadPk() -> testLoadPk
    void runLoadPkTest(int) -> runLoadPkTest
    android.database.Cursor queryWithDummyColumnsInFront(int,java.lang.String,java.lang.Object) -> queryWithDummyColumnsInFront
    java.lang.Object nextPk() -> nextPk
    java.lang.Object createEntityWithRandomPk() -> createEntityWithRandomPk
    java.lang.Object createRandomPk() -> createRandomPk
    java.lang.Object createEntity(java.lang.Object) -> createEntity
de.greenrobot.dao.test.AbstractDaoTestStringPk -> de.greenrobot.dao.test.AbstractDaoTestStringPk:
    java.lang.String createRandomPk() -> createRandomPk
    java.lang.Object createRandomPk() -> createRandomPk
de.greenrobot.dao.test.DbTest -> de.greenrobot.dao.test.DbTest:
    android.database.sqlite.SQLiteDatabase db -> db
    java.util.Random random -> random
    boolean inMemory -> inMemory
    void setUp() -> setUp
    void setUpDb() -> setUpDb
    void tearDown() -> tearDown
    void logTableDump(java.lang.String) -> logTableDump
org.apache.commons.httpclient.AutoCloseInputStream -> org.apache.commons.httpclient.AutoCloseInputStream:
    boolean streamOpen -> streamOpen
    boolean selfClosed -> selfClosed
    org.apache.commons.httpclient.ResponseConsumedWatcher watcher -> watcher
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void close() -> close
    void checkClose(int) -> checkClose
    boolean isReadAllowed() -> isReadAllowed
    void notifyWatcher() -> notifyWatcher
org.apache.commons.httpclient.ChunkedInputStream -> org.apache.commons.httpclient.ChunkedInputStream:
    java.io.InputStream in -> in
    int chunkSize -> chunkSize
    int pos -> pos
    boolean bof -> bof
    boolean eof -> eof
    boolean closed -> closed
    org.apache.commons.httpclient.HttpMethod method -> method
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$ChunkedInputStream -> class$org$apache$commons$httpclient$ChunkedInputStream
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void readCRLF() -> readCRLF
    void nextChunk() -> nextChunk
    int getChunkSizeFromInputStream(java.io.InputStream) -> getChunkSizeFromInputStream
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    void exhaustInputStream(java.io.InputStream) -> exhaustInputStream
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.ChunkedOutputStream -> org.apache.commons.httpclient.ChunkedOutputStream:
    byte[] CRLF -> CRLF
    byte[] ENDCHUNK -> ENDCHUNK
    byte[] ZERO -> ZERO
    java.io.OutputStream stream -> stream
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.httpclient.CircularRedirectException -> org.apache.commons.httpclient.CircularRedirectException:
org.apache.commons.httpclient.ConnectMethod -> org.apache.commons.httpclient.ConnectMethod:
    java.lang.String NAME -> NAME
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$ConnectMethod -> class$org$apache$commons$httpclient$ConnectMethod
    java.lang.String getName() -> getName
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addCookieRequestHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestLine
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> shouldCloseConnection
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.ConnectTimeoutException -> org.apache.commons.httpclient.ConnectTimeoutException:
org.apache.commons.httpclient.ConnectionPoolTimeoutException -> org.apache.commons.httpclient.ConnectionPoolTimeoutException:
org.apache.commons.httpclient.ContentLengthInputStream -> org.apache.commons.httpclient.ContentLengthInputStream:
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    java.io.InputStream wrappedStream -> wrappedStream
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.commons.httpclient.Cookie -> org.apache.commons.httpclient.Cookie:
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    boolean hasPathAttribute -> hasPathAttribute
    boolean hasDomainAttribute -> hasDomainAttribute
    int cookieVersion -> cookieVersion
    java.text.RuleBasedCollator STRING_COLLATOR -> STRING_COLLATOR
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$Cookie -> class$org$apache$commons$httpclient$Cookie
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean getSecure() -> getSecure
    void setSecure(boolean) -> setSecure
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired() -> isExpired
    boolean isExpired(java.util.Date) -> isExpired
    void setPathAttributeSpecified(boolean) -> setPathAttributeSpecified
    boolean isPathAttributeSpecified() -> isPathAttributeSpecified
    void setDomainAttributeSpecified(boolean) -> setDomainAttributeSpecified
    boolean isDomainAttributeSpecified() -> isDomainAttributeSpecified
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toExternalForm() -> toExternalForm
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.Credentials -> org.apache.commons.httpclient.Credentials:
org.apache.commons.httpclient.DefaultHttpMethodRetryHandler -> org.apache.commons.httpclient.DefaultHttpMethodRetryHandler:
    java.lang.Class SSL_HANDSHAKE_EXCEPTION -> SSL_HANDSHAKE_EXCEPTION
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> retryMethod
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
org.apache.commons.httpclient.DefaultMethodRetryHandler -> org.apache.commons.httpclient.DefaultMethodRetryHandler:
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpRecoverableException,int,boolean) -> retryMethod
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    void setRequestSentRetryEnabled(boolean) -> setRequestSentRetryEnabled
    void setRetryCount(int) -> setRetryCount
org.apache.commons.httpclient.Header -> org.apache.commons.httpclient.Header:
    boolean isAutogenerated -> isAutogenerated
    java.lang.String toExternalForm() -> toExternalForm
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HeaderElement[] getValues() -> getValues
    org.apache.commons.httpclient.HeaderElement[] getElements() -> getElements
    boolean isAutogenerated() -> isAutogenerated
org.apache.commons.httpclient.HeaderElement -> org.apache.commons.httpclient.HeaderElement:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.NameValuePair[] parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$HeaderElement -> class$org$apache$commons$httpclient$HeaderElement
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> getParameters
    org.apache.commons.httpclient.HeaderElement[] parseElements(char[]) -> parseElements
    org.apache.commons.httpclient.HeaderElement[] parseElements(java.lang.String) -> parseElements
    org.apache.commons.httpclient.HeaderElement[] parse(java.lang.String) -> parse
    org.apache.commons.httpclient.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HeaderGroup -> org.apache.commons.httpclient.HeaderGroup:
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.commons.httpclient.Header) -> addHeader
    void removeHeader(org.apache.commons.httpclient.Header) -> removeHeader
    void setHeaders(org.apache.commons.httpclient.Header[]) -> setHeaders
    org.apache.commons.httpclient.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.commons.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.commons.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.commons.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.commons.httpclient.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    java.util.Iterator getIterator() -> getIterator
org.apache.commons.httpclient.HostConfiguration -> org.apache.commons.httpclient.HostConfiguration:
    org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION -> ANY_HOST_CONFIGURATION
    org.apache.commons.httpclient.HttpHost host -> host
    org.apache.commons.httpclient.ProxyHost proxyHost -> proxyHost
    java.net.InetAddress localAddress -> localAddress
    org.apache.commons.httpclient.params.HostParams params -> params
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean hostEquals(org.apache.commons.httpclient.HttpConnection) -> hostEquals
    boolean proxyEquals(org.apache.commons.httpclient.HttpConnection) -> proxyEquals
    boolean isHostSet() -> isHostSet
    void setHost(org.apache.commons.httpclient.HttpHost) -> setHost
    void setHost(java.lang.String,int,java.lang.String) -> setHost
    void setHost(java.lang.String,java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol) -> setHost
    void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol) -> setHost
    void setHost(java.lang.String,int) -> setHost
    void setHost(java.lang.String) -> setHost
    void setHost(org.apache.commons.httpclient.URI) -> setHost
    java.lang.String getHostURL() -> getHostURL
    java.lang.String getHost() -> getHost
    java.lang.String getVirtualHost() -> getVirtualHost
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    boolean isProxySet() -> isProxySet
    void setProxyHost(org.apache.commons.httpclient.ProxyHost) -> setProxyHost
    void setProxy(java.lang.String,int) -> setProxy
    java.lang.String getProxyHost() -> getProxyHost
    int getProxyPort() -> getProxyPort
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    org.apache.commons.httpclient.params.HostParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HostParams) -> setParams
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpClient -> org.apache.commons.httpclient.HttpClient:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> httpConnectionManager
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    java.lang.Class class$org$apache$commons$httpclient$HttpClient -> class$org$apache$commons$httpclient$HttpClient
    org.apache.commons.httpclient.HttpState getState() -> getState
    void setState(org.apache.commons.httpclient.HttpState) -> setState
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void setTimeout(int) -> setTimeout
    void setHttpConnectionFactoryTimeout(long) -> setHttpConnectionFactoryTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    int executeMethod(org.apache.commons.httpclient.HttpMethod) -> executeMethod
    int executeMethod(org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.HttpMethod) -> executeMethod
    int executeMethod(org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpState) -> executeMethod
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    org.apache.commons.httpclient.params.HttpClientParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpClientParams) -> setParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpClientError -> org.apache.commons.httpclient.HttpClientError:
org.apache.commons.httpclient.HttpConnection -> org.apache.commons.httpclient.HttpConnection:
    byte[] CRLF -> CRLF
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String hostName -> hostName
    int portNumber -> portNumber
    java.lang.String proxyHostName -> proxyHostName
    int proxyPortNumber -> proxyPortNumber
    java.net.Socket socket -> socket
    java.io.InputStream inputStream -> inputStream
    java.io.OutputStream outputStream -> outputStream
    java.io.InputStream lastResponseInputStream -> lastResponseInputStream
    boolean isOpen -> isOpen
    org.apache.commons.httpclient.protocol.Protocol protocolInUse -> protocolInUse
    org.apache.commons.httpclient.params.HttpConnectionParams params -> params
    boolean locked -> locked
    boolean usingSecureSocket -> usingSecureSocket
    boolean tunnelEstablished -> tunnelEstablished
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> httpConnectionManager
    java.net.InetAddress localAddress -> localAddress
    java.lang.Class class$org$apache$commons$httpclient$HttpConnection -> class$org$apache$commons$httpclient$HttpConnection
    java.net.Socket getSocket() -> getSocket
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    java.lang.String getVirtualHost() -> getVirtualHost
    void setVirtualHost(java.lang.String) -> setVirtualHost
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.lang.String getProxyHost() -> getProxyHost
    void setProxyHost(java.lang.String) -> setProxyHost
    int getProxyPort() -> getProxyPort
    void setProxyPort(int) -> setProxyPort
    boolean isSecure() -> isSecure
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    void setProtocol(org.apache.commons.httpclient.protocol.Protocol) -> setProtocol
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    boolean isOpen() -> isOpen
    boolean closeIfStale() -> closeIfStale
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
    boolean isStale() -> isStale
    boolean isProxied() -> isProxied
    void setLastResponseInputStream(java.io.InputStream) -> setLastResponseInputStream
    java.io.InputStream getLastResponseInputStream() -> getLastResponseInputStream
    org.apache.commons.httpclient.params.HttpConnectionParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionParams) -> setParams
    void setSoTimeout(int) -> setSoTimeout
    void setSocketTimeout(int) -> setSocketTimeout
    int getSoTimeout() -> getSoTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    void open() -> open
    void tunnelCreated() -> tunnelCreated
    boolean isTransparent() -> isTransparent
    void flushRequestOutputStream() -> flushRequestOutputStream
    java.io.OutputStream getRequestOutputStream() -> getRequestOutputStream
    java.io.InputStream getResponseInputStream() -> getResponseInputStream
    boolean isResponseAvailable() -> isResponseAvailable
    boolean isResponseAvailable(int) -> isResponseAvailable
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeLine(byte[]) -> writeLine
    void writeLine() -> writeLine
    void print(java.lang.String) -> print
    void print(java.lang.String,java.lang.String) -> print
    void printLine(java.lang.String) -> printLine
    void printLine(java.lang.String,java.lang.String) -> printLine
    void printLine() -> printLine
    java.lang.String readLine() -> readLine
    java.lang.String readLine(java.lang.String) -> readLine
    void shutdownOutput() -> shutdownOutput
    void close() -> close
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    void releaseConnection() -> releaseConnection
    boolean isLocked() -> isLocked
    void setLocked(boolean) -> setLocked
    void closeSocketAndStreams() -> closeSocketAndStreams
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpConnectionManager -> org.apache.commons.httpclient.HttpConnectionManager:
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    void closeIdleConnections(long) -> closeIdleConnections
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
org.apache.commons.httpclient.HttpConstants -> org.apache.commons.httpclient.HttpConstants:
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpConstants -> class$org$apache$commons$httpclient$HttpConstants
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getString(byte[],int,int) -> getString
    java.lang.String getString(byte[]) -> getString
    byte[] getContentBytes(java.lang.String,java.lang.String) -> getContentBytes
    java.lang.String getContentString(byte[],int,int,java.lang.String) -> getContentString
    java.lang.String getContentString(byte[],java.lang.String) -> getContentString
    byte[] getContentBytes(java.lang.String) -> getContentBytes
    java.lang.String getContentString(byte[],int,int) -> getContentString
    java.lang.String getContentString(byte[]) -> getContentString
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpException -> org.apache.commons.httpclient.HttpException:
    java.lang.String reason -> reason
    int reasonCode -> reasonCode
    java.lang.Throwable cause -> cause
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    java.lang.Throwable getCause() -> getCause
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void setReason(java.lang.String) -> setReason
    java.lang.String getReason() -> getReason
    void setReasonCode(int) -> setReasonCode
    int getReasonCode() -> getReasonCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpHost -> org.apache.commons.httpclient.HttpHost:
    java.lang.String hostname -> hostname
    int port -> port
    org.apache.commons.httpclient.protocol.Protocol protocol -> protocol
    java.lang.Object clone() -> clone
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    java.lang.String toURI() -> toURI
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpMethod -> org.apache.commons.httpclient.HttpMethod:
    java.lang.String getName() -> getName
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setPath(java.lang.String) -> setPath
    java.lang.String getPath() -> getPath
    org.apache.commons.httpclient.URI getURI() -> getURI
    void setURI(org.apache.commons.httpclient.URI) -> setURI
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    void setRequestHeader(org.apache.commons.httpclient.Header) -> setRequestHeader
    void addRequestHeader(java.lang.String,java.lang.String) -> addRequestHeader
    void addRequestHeader(org.apache.commons.httpclient.Header) -> addRequestHeader
    org.apache.commons.httpclient.Header getRequestHeader(java.lang.String) -> getRequestHeader
    void removeRequestHeader(java.lang.String) -> removeRequestHeader
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> removeRequestHeader
    boolean getFollowRedirects() -> getFollowRedirects
    void setFollowRedirects(boolean) -> setFollowRedirects
    void setQueryString(java.lang.String) -> setQueryString
    void setQueryString(org.apache.commons.httpclient.NameValuePair[]) -> setQueryString
    java.lang.String getQueryString() -> getQueryString
    org.apache.commons.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> getRequestHeaders
    boolean validate() -> validate
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusText() -> getStatusText
    org.apache.commons.httpclient.Header[] getResponseHeaders() -> getResponseHeaders
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> getResponseHeader
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> getResponseHeaders
    org.apache.commons.httpclient.Header[] getResponseFooters() -> getResponseFooters
    org.apache.commons.httpclient.Header getResponseFooter(java.lang.String) -> getResponseFooter
    byte[] getResponseBody() -> getResponseBody
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    java.io.InputStream getResponseBodyAsStream() -> getResponseBodyAsStream
    boolean hasBeenUsed() -> hasBeenUsed
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void abort() -> abort
    void recycle() -> recycle
    void releaseConnection() -> releaseConnection
    void addResponseFooter(org.apache.commons.httpclient.Header) -> addResponseFooter
    org.apache.commons.httpclient.StatusLine getStatusLine() -> getStatusLine
    boolean getDoAuthentication() -> getDoAuthentication
    void setDoAuthentication(boolean) -> setDoAuthentication
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpMethodParams) -> setParams
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> getHostAuthState
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    boolean isRequestSent() -> isRequestSent
org.apache.commons.httpclient.HttpMethodBase -> org.apache.commons.httpclient.HttpMethodBase:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HeaderGroup requestHeaders -> requestHeaders
    org.apache.commons.httpclient.StatusLine statusLine -> statusLine
    org.apache.commons.httpclient.HeaderGroup responseHeaders -> responseHeaders
    org.apache.commons.httpclient.HeaderGroup responseTrailerHeaders -> responseTrailerHeaders
    java.lang.String path -> path
    java.lang.String queryString -> queryString
    java.io.InputStream responseStream -> responseStream
    org.apache.commons.httpclient.HttpConnection responseConnection -> responseConnection
    byte[] responseBody -> responseBody
    boolean followRedirects -> followRedirects
    boolean doAuthentication -> doAuthentication
    org.apache.commons.httpclient.params.HttpMethodParams params -> params
    org.apache.commons.httpclient.auth.AuthState hostAuthState -> hostAuthState
    org.apache.commons.httpclient.auth.AuthState proxyAuthState -> proxyAuthState
    boolean used -> used
    int recoverableExceptionCount -> recoverableExceptionCount
    org.apache.commons.httpclient.HttpHost httphost -> httphost
    org.apache.commons.httpclient.MethodRetryHandler methodRetryHandler -> methodRetryHandler
    boolean connectionCloseForced -> connectionCloseForced
    int RESPONSE_WAIT_TIME_MS -> RESPONSE_WAIT_TIME_MS
    org.apache.commons.httpclient.HttpVersion effectiveVersion -> effectiveVersion
    boolean aborted -> aborted
    boolean requestSent -> requestSent
    org.apache.commons.httpclient.cookie.CookieSpec cookiespec -> cookiespec
    int DEFAULT_INITIAL_BUFFER_SIZE -> DEFAULT_INITIAL_BUFFER_SIZE
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodBase -> class$org$apache$commons$httpclient$HttpMethodBase
    java.lang.String getName() -> getName
    org.apache.commons.httpclient.URI getURI() -> getURI
    void setURI(org.apache.commons.httpclient.URI) -> setURI
    void setFollowRedirects(boolean) -> setFollowRedirects
    boolean getFollowRedirects() -> getFollowRedirects
    void setHttp11(boolean) -> setHttp11
    boolean getDoAuthentication() -> getDoAuthentication
    void setDoAuthentication(boolean) -> setDoAuthentication
    boolean isHttp11() -> isHttp11
    void setPath(java.lang.String) -> setPath
    void addRequestHeader(org.apache.commons.httpclient.Header) -> addRequestHeader
    void addResponseFooter(org.apache.commons.httpclient.Header) -> addResponseFooter
    java.lang.String getPath() -> getPath
    void setQueryString(java.lang.String) -> setQueryString
    void setQueryString(org.apache.commons.httpclient.NameValuePair[]) -> setQueryString
    java.lang.String getQueryString() -> getQueryString
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    void setRequestHeader(org.apache.commons.httpclient.Header) -> setRequestHeader
    org.apache.commons.httpclient.Header getRequestHeader(java.lang.String) -> getRequestHeader
    org.apache.commons.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> getRequestHeaders
    org.apache.commons.httpclient.HeaderGroup getRequestHeaderGroup() -> getRequestHeaderGroup
    org.apache.commons.httpclient.HeaderGroup getResponseTrailerHeaderGroup() -> getResponseTrailerHeaderGroup
    org.apache.commons.httpclient.HeaderGroup getResponseHeaderGroup() -> getResponseHeaderGroup
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> getResponseHeaders
    int getStatusCode() -> getStatusCode
    org.apache.commons.httpclient.StatusLine getStatusLine() -> getStatusLine
    boolean responseAvailable() -> responseAvailable
    org.apache.commons.httpclient.Header[] getResponseHeaders() -> getResponseHeaders
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> getResponseHeader
    long getResponseContentLength() -> getResponseContentLength
    byte[] getResponseBody() -> getResponseBody
    java.io.InputStream getResponseBodyAsStream() -> getResponseBodyAsStream
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    org.apache.commons.httpclient.Header[] getResponseFooters() -> getResponseFooters
    org.apache.commons.httpclient.Header getResponseFooter(java.lang.String) -> getResponseFooter
    void setResponseStream(java.io.InputStream) -> setResponseStream
    java.io.InputStream getResponseStream() -> getResponseStream
    java.lang.String getStatusText() -> getStatusText
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void addRequestHeader(java.lang.String,java.lang.String) -> addRequestHeader
    boolean isConnectionCloseForced() -> isConnectionCloseForced
    void setConnectionCloseForced(boolean) -> setConnectionCloseForced
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> shouldCloseConnection
    void checkExecuteConditions(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> checkExecuteConditions
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void abort() -> abort
    boolean hasBeenUsed() -> hasBeenUsed
    void recycle() -> recycle
    void releaseConnection() -> releaseConnection
    void removeRequestHeader(java.lang.String) -> removeRequestHeader
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> removeRequestHeader
    boolean validate() -> validate
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(org.apache.commons.httpclient.HttpState) -> getCookieSpec
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addCookieRequestHeader
    void addHostRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addHostRequestHeader
    void addProxyConnectionHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addProxyConnectionHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    void addUserAgentRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addUserAgentRequestHeader
    void checkNotUsed() -> checkNotUsed
    void checkUsed() -> checkUsed
    java.lang.String generateRequestLine(org.apache.commons.httpclient.HttpConnection,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateRequestLine
    void processResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseBody
    void processResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseHeaders
    void processStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processStatusLine
    void readResponse(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponse
    void readResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    java.io.InputStream readResponseBody(org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    void readResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseHeaders
    void readStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readStatusLine
    void writeRequest(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequest
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    void writeRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestHeaders
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestLine
    java.lang.String getRequestLine(org.apache.commons.httpclient.HttpConnection) -> getRequestLine
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpMethodParams) -> setParams
    org.apache.commons.httpclient.HttpVersion getEffectiveVersion() -> getEffectiveVersion
    boolean canResponseHaveBody(int) -> canResponseHaveBody
    java.lang.String getProxyAuthenticationRealm() -> getProxyAuthenticationRealm
    java.lang.String getAuthenticationRealm() -> getAuthenticationRealm
    java.lang.String getContentCharSet(org.apache.commons.httpclient.Header) -> getContentCharSet
    java.lang.String getRequestCharSet() -> getRequestCharSet
    java.lang.String getResponseCharSet() -> getResponseCharSet
    int getRecoverableExceptionCount() -> getRecoverableExceptionCount
    void responseBodyConsumed() -> responseBodyConsumed
    void ensureConnectionRelease() -> ensureConnectionRelease
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.MethodRetryHandler getMethodRetryHandler() -> getMethodRetryHandler
    void setMethodRetryHandler(org.apache.commons.httpclient.MethodRetryHandler) -> setMethodRetryHandler
    void fakeResponse(org.apache.commons.httpclient.StatusLine,org.apache.commons.httpclient.HeaderGroup,java.io.InputStream) -> fakeResponse
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> getHostAuthState
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    boolean isAborted() -> isAborted
    boolean isRequestSent() -> isRequestSent
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpMethodBase$1 -> org.apache.commons.httpclient.HttpMethodBase$1:
    org.apache.commons.httpclient.HttpMethodBase this$0 -> this$0
    void responseConsumed() -> responseConsumed
org.apache.commons.httpclient.HttpMethodDirector -> org.apache.commons.httpclient.HttpMethodDirector:
    java.lang.String WWW_AUTH_CHALLENGE -> WWW_AUTH_CHALLENGE
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH_CHALLENGE -> PROXY_AUTH_CHALLENGE
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.ConnectMethod connectMethod -> connectMethod
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    org.apache.commons.httpclient.HttpConnectionManager connectionManager -> connectionManager
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HttpConnection conn -> conn
    boolean releaseConnection -> releaseConnection
    org.apache.commons.httpclient.auth.AuthChallengeProcessor authProcessor -> authProcessor
    java.util.Set redirectLocations -> redirectLocations
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodDirector -> class$org$apache$commons$httpclient$HttpMethodDirector
    void executeMethod(org.apache.commons.httpclient.HttpMethod) -> executeMethod
    void authenticate(org.apache.commons.httpclient.HttpMethod) -> authenticate
    boolean cleanAuthHeaders(org.apache.commons.httpclient.HttpMethod,java.lang.String) -> cleanAuthHeaders
    void authenticateHost(org.apache.commons.httpclient.HttpMethod) -> authenticateHost
    void authenticateProxy(org.apache.commons.httpclient.HttpMethod) -> authenticateProxy
    void applyConnectionParams(org.apache.commons.httpclient.HttpMethod) -> applyConnectionParams
    void executeWithRetry(org.apache.commons.httpclient.HttpMethod) -> executeWithRetry
    boolean executeConnect() -> executeConnect
    void fakeResponse(org.apache.commons.httpclient.HttpMethod) -> fakeResponse
    boolean processRedirectResponse(org.apache.commons.httpclient.HttpMethod) -> processRedirectResponse
    boolean processAuthenticationResponse(org.apache.commons.httpclient.HttpMethod) -> processAuthenticationResponse
    boolean processWWWAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> processWWWAuthChallenge
    boolean processProxyAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> processProxyAuthChallenge
    boolean isRedirectNeeded(org.apache.commons.httpclient.HttpMethod) -> isRedirectNeeded
    boolean isAuthenticationNeeded(org.apache.commons.httpclient.HttpMethod) -> isAuthenticationNeeded
    org.apache.commons.httpclient.Credentials promptForCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> promptForCredentials
    org.apache.commons.httpclient.Credentials promptForProxyCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> promptForProxyCredentials
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    org.apache.commons.httpclient.HttpState getState() -> getState
    org.apache.commons.httpclient.HttpConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.commons.httpclient.params.HttpParams getParams() -> getParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpMethodRetryHandler -> org.apache.commons.httpclient.HttpMethodRetryHandler:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> retryMethod
org.apache.commons.httpclient.HttpParser -> org.apache.commons.httpclient.HttpParser:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpParser -> class$org$apache$commons$httpclient$HttpParser
    byte[] readRawLine(java.io.InputStream) -> readRawLine
    java.lang.String readLine(java.io.InputStream,java.lang.String) -> readLine
    java.lang.String readLine(java.io.InputStream) -> readLine
    org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream,java.lang.String) -> parseHeaders
    org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream) -> parseHeaders
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpRecoverableException -> org.apache.commons.httpclient.HttpRecoverableException:
org.apache.commons.httpclient.HttpState -> org.apache.commons.httpclient.HttpState:
    java.util.HashMap credMap -> credMap
    java.util.HashMap proxyCred -> proxyCred
    java.util.ArrayList cookies -> cookies
    boolean preemptive -> preemptive
    int cookiePolicy -> cookiePolicy
    java.lang.String PREEMPTIVE_PROPERTY -> PREEMPTIVE_PROPERTY
    java.lang.String PREEMPTIVE_DEFAULT -> PREEMPTIVE_DEFAULT
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpState -> class$org$apache$commons$httpclient$HttpState
    void addCookie(org.apache.commons.httpclient.Cookie) -> addCookie
    void addCookies(org.apache.commons.httpclient.Cookie[]) -> addCookies
    org.apache.commons.httpclient.Cookie[] getCookies() -> getCookies
    org.apache.commons.httpclient.Cookie[] getCookies(java.lang.String,int,java.lang.String,boolean) -> getCookies
    boolean purgeExpiredCookies() -> purgeExpiredCookies
    boolean purgeExpiredCookies(java.util.Date) -> purgeExpiredCookies
    int getCookiePolicy() -> getCookiePolicy
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    boolean isAuthenticationPreemptive() -> isAuthenticationPreemptive
    void setCookiePolicy(int) -> setCookiePolicy
    void setCredentials(java.lang.String,java.lang.String,org.apache.commons.httpclient.Credentials) -> setCredentials
    void setCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> setCredentials
    org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope) -> matchCredentials
    org.apache.commons.httpclient.Credentials getCredentials(java.lang.String,java.lang.String) -> getCredentials
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScope) -> getCredentials
    void setProxyCredentials(java.lang.String,java.lang.String,org.apache.commons.httpclient.Credentials) -> setProxyCredentials
    void setProxyCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> setProxyCredentials
    org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String,java.lang.String) -> getProxyCredentials
    org.apache.commons.httpclient.Credentials getProxyCredentials(org.apache.commons.httpclient.auth.AuthScope) -> getProxyCredentials
    java.lang.String toString() -> toString
    java.lang.String getCredentialsStringRepresentation(java.util.Map) -> getCredentialsStringRepresentation
    java.lang.String getCookiesStringRepresentation(java.util.List) -> getCookiesStringRepresentation
    void clearCredentials() -> clearCredentials
    void clearProxyCredentials() -> clearProxyCredentials
    void clearCookies() -> clearCookies
    void clear() -> clear
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpStatus -> org.apache.commons.httpclient.HttpStatus:
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    java.lang.String getStatusText(int) -> getStatusText
    void addStatusCodeMap(int,java.lang.String) -> addStatusCodeMap
org.apache.commons.httpclient.HttpURL -> org.apache.commons.httpclient.HttpURL:
    char[] DEFAULT_SCHEME -> DEFAULT_SCHEME
    char[] _default_scheme -> _default_scheme
    int DEFAULT_PORT -> DEFAULT_PORT
    int _default_port -> _default_port
    long serialVersionUID -> serialVersionUID
    java.lang.String toUserinfo(java.lang.String,java.lang.String) -> toUserinfo
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    int getPort() -> getPort
    void setRawUserinfo(char[],char[]) -> setRawUserinfo
    void setEscapedUserinfo(java.lang.String,java.lang.String) -> setEscapedUserinfo
    void setUserinfo(java.lang.String,java.lang.String) -> setUserinfo
    void setRawUser(char[]) -> setRawUser
    void setEscapedUser(java.lang.String) -> setEscapedUser
    void setUser(java.lang.String) -> setUser
    char[] getRawUser() -> getRawUser
    java.lang.String getEscapedUser() -> getEscapedUser
    java.lang.String getUser() -> getUser
    void setRawPassword(char[]) -> setRawPassword
    void setEscapedPassword(java.lang.String) -> setEscapedPassword
    void setPassword(java.lang.String) -> setPassword
    char[] getRawPassword() -> getRawPassword
    java.lang.String getEscapedPassword() -> getEscapedPassword
    java.lang.String getPassword() -> getPassword
    char[] getRawCurrentHierPath() -> getRawCurrentHierPath
    char[] getRawAboveHierPath() -> getRawAboveHierPath
    char[] getRawPath() -> getRawPath
    void setQuery(java.lang.String,java.lang.String) -> setQuery
    void setQuery(java.lang.String[],java.lang.String[]) -> setQuery
    void checkValid() -> checkValid
    void setURI() -> setURI
org.apache.commons.httpclient.HttpVersion -> org.apache.commons.httpclient.HttpVersion:
    int major -> major
    int minor -> minor
    org.apache.commons.httpclient.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.commons.httpclient.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.commons.httpclient.HttpVersion HTTP_1_1 -> HTTP_1_1
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.apache.commons.httpclient.HttpVersion) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(org.apache.commons.httpclient.HttpVersion) -> equals
    boolean greaterEquals(org.apache.commons.httpclient.HttpVersion) -> greaterEquals
    boolean lessEquals(org.apache.commons.httpclient.HttpVersion) -> lessEquals
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HttpVersion parse(java.lang.String) -> parse
org.apache.commons.httpclient.HttpsURL -> org.apache.commons.httpclient.HttpsURL:
    char[] DEFAULT_SCHEME -> DEFAULT_SCHEME
    char[] _default_scheme -> _default_scheme
    int DEFAULT_PORT -> DEFAULT_PORT
    int _default_port -> _default_port
    long serialVersionUID -> serialVersionUID
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    int getPort() -> getPort
    void checkValid() -> checkValid
org.apache.commons.httpclient.MethodRetryHandler -> org.apache.commons.httpclient.MethodRetryHandler:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpRecoverableException,int,boolean) -> retryMethod
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager:
    org.apache.commons.logging.Log LOG -> LOG
    int DEFAULT_MAX_HOST_CONNECTIONS -> DEFAULT_MAX_HOST_CONNECTIONS
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    java.util.Map REFERENCE_TO_CONNECTION_SOURCE -> REFERENCE_TO_CONNECTION_SOURCE
    java.lang.ref.ReferenceQueue REFERENCE_QUEUE -> REFERENCE_QUEUE
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread REFERENCE_QUEUE_THREAD -> REFERENCE_QUEUE_THREAD
    java.util.WeakHashMap ALL_CONNECTION_MANAGERS -> ALL_CONNECTION_MANAGERS
    org.apache.commons.httpclient.params.HttpConnectionManagerParams params -> params
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool connectionPool -> connectionPool
    boolean shutdown -> shutdown
    java.lang.Class class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager -> class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager
    void shutdownAll() -> shutdownAll
    void storeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference,org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> storeReferenceToConnection
    void shutdownCheckedOutConnections(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> shutdownCheckedOutConnections
    void removeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference) -> removeReferenceToConnection
    void shutdown() -> shutdown
    boolean isConnectionStaleCheckingEnabled() -> isConnectionStaleCheckingEnabled
    void setConnectionStaleCheckingEnabled(boolean) -> setConnectionStaleCheckingEnabled
    void setMaxConnectionsPerHost(int) -> setMaxConnectionsPerHost
    int getMaxConnectionsPerHost() -> getMaxConnectionsPerHost
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection doGetConnection(org.apache.commons.httpclient.HostConfiguration,long) -> doGetConnection
    int getConnectionsInPool(org.apache.commons.httpclient.HostConfiguration) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    int getConnectionsInUse(org.apache.commons.httpclient.HostConfiguration) -> getConnectionsInUse
    int getConnectionsInUse() -> getConnectionsInUse
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long) -> closeIdleConnections
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.HostConfiguration configurationForConnection(org.apache.commons.httpclient.HttpConnection) -> configurationForConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
    java.lang.Class class$(java.lang.String) -> class$
    void access$600(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$600
    org.apache.commons.logging.Log access$700() -> access$700
    org.apache.commons.httpclient.params.HttpConnectionManagerParams access$800(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager) -> access$800
    void access$900(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference,org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$900
    org.apache.commons.httpclient.HostConfiguration access$1100(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager,org.apache.commons.httpclient.HttpConnection) -> access$1100
    boolean access$1200(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager) -> access$1200
    void access$1300(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference) -> access$1300
    java.util.Map access$1400() -> access$1400
    java.lang.ref.ReferenceQueue access$1500() -> access$1500
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1 -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1:
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool:
    java.util.LinkedList freeConnections -> freeConnections
    java.util.LinkedList waitingThreads -> waitingThreads
    java.util.Map mapHosts -> mapHosts
    org.apache.commons.httpclient.util.IdleConnectionHandler idleConnectionHandler -> idleConnectionHandler
    int numConnections -> numConnections
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager this$0 -> this$0
    void shutdown() -> shutdown
    org.apache.commons.httpclient.HttpConnection createConnection(org.apache.commons.httpclient.HostConfiguration) -> createConnection
    void handleLostConnection(org.apache.commons.httpclient.HostConfiguration) -> handleLostConnection
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool getHostPool(org.apache.commons.httpclient.HostConfiguration) -> getHostPool
    org.apache.commons.httpclient.HttpConnection getFreeConnection(org.apache.commons.httpclient.HostConfiguration) -> getFreeConnection
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long) -> closeIdleConnections
    void deleteConnection(org.apache.commons.httpclient.HttpConnection) -> deleteConnection
    void deleteLeastUsedConnection() -> deleteLeastUsedConnection
    void notifyWaitingThread(org.apache.commons.httpclient.HostConfiguration) -> notifyWaitingThread
    void notifyWaitingThread(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool) -> notifyWaitingThread
    void freeConnection(org.apache.commons.httpclient.HttpConnection) -> freeConnection
    int access$200(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$200
    java.util.LinkedList access$300(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$300
    java.util.LinkedList access$500(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$500
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionSource -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionSource:
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool connectionPool -> connectionPool
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool:
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    java.util.LinkedList freeConnections -> freeConnections
    java.util.LinkedList waitingThreads -> waitingThreads
    int numConnections -> numConnections
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter:
    org.apache.commons.httpclient.HttpConnection wrappedConnection -> wrappedConnection
    boolean hasConnection() -> hasConnection
    org.apache.commons.httpclient.HttpConnection getWrappedConnection() -> getWrappedConnection
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
    java.lang.String getHost() -> getHost
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    java.io.InputStream getLastResponseInputStream() -> getLastResponseInputStream
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    java.lang.String getProxyHost() -> getProxyHost
    int getProxyPort() -> getProxyPort
    java.io.OutputStream getRequestOutputStream() -> getRequestOutputStream
    java.io.InputStream getResponseInputStream() -> getResponseInputStream
    boolean isOpen() -> isOpen
    boolean closeIfStale() -> closeIfStale
    boolean isProxied() -> isProxied
    boolean isResponseAvailable() -> isResponseAvailable
    boolean isResponseAvailable(int) -> isResponseAvailable
    boolean isSecure() -> isSecure
    boolean isTransparent() -> isTransparent
    void open() -> open
    void print(java.lang.String) -> print
    void printLine() -> printLine
    void printLine(java.lang.String) -> printLine
    java.lang.String readLine() -> readLine
    java.lang.String readLine(java.lang.String) -> readLine
    void releaseConnection() -> releaseConnection
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setHost(java.lang.String) -> setHost
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    void setLastResponseInputStream(java.io.InputStream) -> setLastResponseInputStream
    void setPort(int) -> setPort
    void setProtocol(org.apache.commons.httpclient.protocol.Protocol) -> setProtocol
    void setProxyHost(java.lang.String) -> setProxyHost
    void setProxyPort(int) -> setProxyPort
    void setSoTimeout(int) -> setSoTimeout
    void shutdownOutput() -> shutdownOutput
    void tunnelCreated() -> tunnelCreated
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void writeLine() -> writeLine
    void writeLine(byte[]) -> writeLine
    void flushRequestOutputStream() -> flushRequestOutputStream
    int getSoTimeout() -> getSoTimeout
    java.lang.String getVirtualHost() -> getVirtualHost
    void setVirtualHost(java.lang.String) -> setVirtualHost
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    org.apache.commons.httpclient.params.HttpConnectionParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionParams) -> setParams
    void print(java.lang.String,java.lang.String) -> print
    void printLine(java.lang.String,java.lang.String) -> printLine
    void setSocketTimeout(int) -> setSocketTimeout
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference:
    java.lang.ref.WeakReference reference -> reference
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread:
    boolean shutdown -> shutdown
    void shutdown() -> shutdown
    void handleReference(java.lang.ref.Reference) -> handleReference
    void run() -> run
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$WaitingThread -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$WaitingThread:
    java.lang.Thread thread -> thread
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool hostConnectionPool -> hostConnectionPool
org.apache.commons.httpclient.NTCredentials -> org.apache.commons.httpclient.NTCredentials:
    java.lang.String domain -> domain
    java.lang.String host -> host
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getDomain() -> getDomain
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.NameValuePair -> org.apache.commons.httpclient.NameValuePair:
    java.lang.String name -> name
    java.lang.String value -> value
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.NoHttpResponseException -> org.apache.commons.httpclient.NoHttpResponseException:
org.apache.commons.httpclient.ProtocolException -> org.apache.commons.httpclient.ProtocolException:
org.apache.commons.httpclient.ProxyClient -> org.apache.commons.httpclient.ProxyClient:
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    org.apache.commons.httpclient.HttpState getState() -> getState
    void setState(org.apache.commons.httpclient.HttpState) -> setState
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.params.HttpClientParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpClientParams) -> setParams
    org.apache.commons.httpclient.ProxyClient$ConnectResponse connect() -> connect
org.apache.commons.httpclient.ProxyClient$1 -> org.apache.commons.httpclient.ProxyClient$1:
org.apache.commons.httpclient.ProxyClient$ConnectResponse -> org.apache.commons.httpclient.ProxyClient$ConnectResponse:
    org.apache.commons.httpclient.ConnectMethod connectMethod -> connectMethod
    java.net.Socket socket -> socket
    org.apache.commons.httpclient.ConnectMethod getConnectMethod() -> getConnectMethod
    void setConnectMethod(org.apache.commons.httpclient.ConnectMethod) -> setConnectMethod
    java.net.Socket getSocket() -> getSocket
    void setSocket(java.net.Socket) -> setSocket
    void access$100(org.apache.commons.httpclient.ProxyClient$ConnectResponse,org.apache.commons.httpclient.ConnectMethod) -> access$100
    void access$200(org.apache.commons.httpclient.ProxyClient$ConnectResponse,java.net.Socket) -> access$200
org.apache.commons.httpclient.ProxyClient$DummyConnectionManager -> org.apache.commons.httpclient.ProxyClient$DummyConnectionManager:
    org.apache.commons.httpclient.HttpConnection httpConnection -> httpConnection
    org.apache.commons.httpclient.params.HttpParams connectionParams -> connectionParams
    void closeIdleConnections(long) -> closeIdleConnections
    org.apache.commons.httpclient.HttpConnection getConnection() -> getConnection
    void setConnectionParams(org.apache.commons.httpclient.params.HttpParams) -> setConnectionParams
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
org.apache.commons.httpclient.ProxyHost -> org.apache.commons.httpclient.ProxyHost:
    java.lang.Object clone() -> clone
org.apache.commons.httpclient.RedirectException -> org.apache.commons.httpclient.RedirectException:
org.apache.commons.httpclient.ResponseConsumedWatcher -> org.apache.commons.httpclient.ResponseConsumedWatcher:
    void responseConsumed() -> responseConsumed
org.apache.commons.httpclient.SimpleHttpConnectionManager -> org.apache.commons.httpclient.SimpleHttpConnectionManager:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.commons.httpclient.HttpConnection httpConnection -> httpConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams params -> params
    long idleStartTime -> idleStartTime
    boolean inUse -> inUse
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> class$org$apache$commons$httpclient$SimpleHttpConnectionManager
    void finishLastResponse(org.apache.commons.httpclient.HttpConnection) -> finishLastResponse
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    boolean isConnectionStaleCheckingEnabled() -> isConnectionStaleCheckingEnabled
    void setConnectionStaleCheckingEnabled(boolean) -> setConnectionStaleCheckingEnabled
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
    void closeIdleConnections(long) -> closeIdleConnections
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.StatusLine -> org.apache.commons.httpclient.StatusLine:
    java.lang.String statusLine -> statusLine
    java.lang.String httpVersion -> httpVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    java.lang.String getHttpVersion() -> getHttpVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    boolean startsWithHTTP(java.lang.String) -> startsWithHTTP
org.apache.commons.httpclient.URI -> org.apache.commons.httpclient.URI:
    long serialVersionUID -> serialVersionUID
    int hash -> hash
    char[] _uri -> _uri
    java.lang.String protocolCharset -> protocolCharset
    java.lang.String defaultProtocolCharset -> defaultProtocolCharset
    java.lang.String defaultDocumentCharset -> defaultDocumentCharset
    java.lang.String defaultDocumentCharsetByLocale -> defaultDocumentCharsetByLocale
    java.lang.String defaultDocumentCharsetByPlatform -> defaultDocumentCharsetByPlatform
    char[] _scheme -> _scheme
    char[] _opaque -> _opaque
    char[] _authority -> _authority
    char[] _userinfo -> _userinfo
    char[] _host -> _host
    int _port -> _port
    char[] _path -> _path
    char[] _query -> _query
    char[] _fragment -> _fragment
    char[] rootPath -> rootPath
    java.util.BitSet percent -> percent
    java.util.BitSet digit -> digit
    java.util.BitSet alpha -> alpha
    java.util.BitSet alphanum -> alphanum
    java.util.BitSet hex -> hex
    java.util.BitSet escaped -> escaped
    java.util.BitSet mark -> mark
    java.util.BitSet unreserved -> unreserved
    java.util.BitSet reserved -> reserved
    java.util.BitSet uric -> uric
    java.util.BitSet fragment -> fragment
    java.util.BitSet query -> query
    java.util.BitSet pchar -> pchar
    java.util.BitSet param -> param
    java.util.BitSet segment -> segment
    java.util.BitSet path_segments -> path_segments
    java.util.BitSet abs_path -> abs_path
    java.util.BitSet uric_no_slash -> uric_no_slash
    java.util.BitSet opaque_part -> opaque_part
    java.util.BitSet path -> path
    java.util.BitSet port -> port
    java.util.BitSet IPv4address -> IPv4address
    java.util.BitSet IPv6address -> IPv6address
    java.util.BitSet IPv6reference -> IPv6reference
    java.util.BitSet toplabel -> toplabel
    java.util.BitSet domainlabel -> domainlabel
    java.util.BitSet hostname -> hostname
    java.util.BitSet host -> host
    java.util.BitSet hostport -> hostport
    java.util.BitSet userinfo -> userinfo
    java.util.BitSet within_userinfo -> within_userinfo
    java.util.BitSet server -> server
    java.util.BitSet reg_name -> reg_name
    java.util.BitSet authority -> authority
    java.util.BitSet scheme -> scheme
    java.util.BitSet rel_segment -> rel_segment
    java.util.BitSet rel_path -> rel_path
    java.util.BitSet net_path -> net_path
    java.util.BitSet hier_part -> hier_part
    java.util.BitSet relativeURI -> relativeURI
    java.util.BitSet absoluteURI -> absoluteURI
    java.util.BitSet URI_reference -> URI_reference
    java.util.BitSet control -> control
    java.util.BitSet space -> space
    java.util.BitSet delims -> delims
    java.util.BitSet unwise -> unwise
    java.util.BitSet disallowed_rel_path -> disallowed_rel_path
    java.util.BitSet disallowed_opaque_part -> disallowed_opaque_part
    java.util.BitSet allowed_authority -> allowed_authority
    java.util.BitSet allowed_opaque_part -> allowed_opaque_part
    java.util.BitSet allowed_reg_name -> allowed_reg_name
    java.util.BitSet allowed_userinfo -> allowed_userinfo
    java.util.BitSet allowed_within_userinfo -> allowed_within_userinfo
    java.util.BitSet allowed_IPv6reference -> allowed_IPv6reference
    java.util.BitSet allowed_host -> allowed_host
    java.util.BitSet allowed_within_authority -> allowed_within_authority
    java.util.BitSet allowed_abs_path -> allowed_abs_path
    java.util.BitSet allowed_rel_path -> allowed_rel_path
    java.util.BitSet allowed_within_path -> allowed_within_path
    java.util.BitSet allowed_query -> allowed_query
    java.util.BitSet allowed_within_query -> allowed_within_query
    java.util.BitSet allowed_fragment -> allowed_fragment
    boolean _is_hier_part -> _is_hier_part
    boolean _is_opaque_part -> _is_opaque_part
    boolean _is_net_path -> _is_net_path
    boolean _is_abs_path -> _is_abs_path
    boolean _is_rel_path -> _is_rel_path
    boolean _is_reg_name -> _is_reg_name
    boolean _is_server -> _is_server
    boolean _is_hostname -> _is_hostname
    boolean _is_IPv4address -> _is_IPv4address
    boolean _is_IPv6reference -> _is_IPv6reference
    char[] encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(char[],java.lang.String) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    boolean prevalidate(java.lang.String,java.util.BitSet) -> prevalidate
    boolean validate(char[],java.util.BitSet) -> validate
    boolean validate(char[],int,int,java.util.BitSet) -> validate
    void parseUriReference(java.lang.String,boolean) -> parseUriReference
    int indexFirstOf(java.lang.String,java.lang.String) -> indexFirstOf
    int indexFirstOf(java.lang.String,java.lang.String,int) -> indexFirstOf
    int indexFirstOf(char[],char) -> indexFirstOf
    int indexFirstOf(char[],char,int) -> indexFirstOf
    void parseAuthority(java.lang.String,boolean) -> parseAuthority
    void setURI() -> setURI
    boolean isAbsoluteURI() -> isAbsoluteURI
    boolean isRelativeURI() -> isRelativeURI
    boolean isHierPart() -> isHierPart
    boolean isOpaquePart() -> isOpaquePart
    boolean isNetPath() -> isNetPath
    boolean isAbsPath() -> isAbsPath
    boolean isRelPath() -> isRelPath
    boolean hasAuthority() -> hasAuthority
    boolean isRegName() -> isRegName
    boolean isServer() -> isServer
    boolean hasUserinfo() -> hasUserinfo
    boolean isHostname() -> isHostname
    boolean isIPv4address() -> isIPv4address
    boolean isIPv6reference() -> isIPv6reference
    boolean hasQuery() -> hasQuery
    boolean hasFragment() -> hasFragment
    void setDefaultProtocolCharset(java.lang.String) -> setDefaultProtocolCharset
    java.lang.String getDefaultProtocolCharset() -> getDefaultProtocolCharset
    java.lang.String getProtocolCharset() -> getProtocolCharset
    void setDefaultDocumentCharset(java.lang.String) -> setDefaultDocumentCharset
    java.lang.String getDefaultDocumentCharset() -> getDefaultDocumentCharset
    java.lang.String getDefaultDocumentCharsetByLocale() -> getDefaultDocumentCharsetByLocale
    java.lang.String getDefaultDocumentCharsetByPlatform() -> getDefaultDocumentCharsetByPlatform
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    void setRawAuthority(char[]) -> setRawAuthority
    void setEscapedAuthority(java.lang.String) -> setEscapedAuthority
    char[] getRawAuthority() -> getRawAuthority
    java.lang.String getEscapedAuthority() -> getEscapedAuthority
    java.lang.String getAuthority() -> getAuthority
    char[] getRawUserinfo() -> getRawUserinfo
    java.lang.String getEscapedUserinfo() -> getEscapedUserinfo
    java.lang.String getUserinfo() -> getUserinfo
    char[] getRawHost() -> getRawHost
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    void setRawPath(char[]) -> setRawPath
    void setEscapedPath(java.lang.String) -> setEscapedPath
    void setPath(java.lang.String) -> setPath
    char[] resolvePath(char[],char[]) -> resolvePath
    char[] getRawCurrentHierPath(char[]) -> getRawCurrentHierPath
    char[] getRawCurrentHierPath() -> getRawCurrentHierPath
    java.lang.String getEscapedCurrentHierPath() -> getEscapedCurrentHierPath
    java.lang.String getCurrentHierPath() -> getCurrentHierPath
    char[] getRawAboveHierPath() -> getRawAboveHierPath
    java.lang.String getEscapedAboveHierPath() -> getEscapedAboveHierPath
    java.lang.String getAboveHierPath() -> getAboveHierPath
    char[] getRawPath() -> getRawPath
    java.lang.String getEscapedPath() -> getEscapedPath
    java.lang.String getPath() -> getPath
    char[] getRawName() -> getRawName
    java.lang.String getEscapedName() -> getEscapedName
    java.lang.String getName() -> getName
    char[] getRawPathQuery() -> getRawPathQuery
    java.lang.String getEscapedPathQuery() -> getEscapedPathQuery
    java.lang.String getPathQuery() -> getPathQuery
    void setRawQuery(char[]) -> setRawQuery
    void setEscapedQuery(java.lang.String) -> setEscapedQuery
    void setQuery(java.lang.String) -> setQuery
    char[] getRawQuery() -> getRawQuery
    java.lang.String getEscapedQuery() -> getEscapedQuery
    java.lang.String getQuery() -> getQuery
    void setRawFragment(char[]) -> setRawFragment
    void setEscapedFragment(java.lang.String) -> setEscapedFragment
    void setFragment(java.lang.String) -> setFragment
    char[] getRawFragment() -> getRawFragment
    java.lang.String getEscapedFragment() -> getEscapedFragment
    java.lang.String getFragment() -> getFragment
    char[] removeFragmentIdentifier(char[]) -> removeFragmentIdentifier
    char[] normalize(char[]) -> normalize
    void normalize() -> normalize
    boolean equals(char[],char[]) -> equals
    boolean equals(java.lang.Object) -> equals
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.Object clone() -> clone
    char[] getRawURI() -> getRawURI
    java.lang.String getEscapedURI() -> getEscapedURI
    java.lang.String getURI() -> getURI
    char[] getRawURIReference() -> getRawURIReference
    java.lang.String getEscapedURIReference() -> getEscapedURIReference
    java.lang.String getURIReference() -> getURIReference
    java.lang.String toString() -> toString
org.apache.commons.httpclient.URI$DefaultCharsetChanged -> org.apache.commons.httpclient.URI$DefaultCharsetChanged:
    int UNKNOWN -> UNKNOWN
    int PROTOCOL_CHARSET -> PROTOCOL_CHARSET
    int DOCUMENT_CHARSET -> DOCUMENT_CHARSET
    int reasonCode -> reasonCode
    java.lang.String reason -> reason
    int getReasonCode() -> getReasonCode
    java.lang.String getReason() -> getReason
org.apache.commons.httpclient.URI$LocaleToCharsetMap -> org.apache.commons.httpclient.URI$LocaleToCharsetMap:
    java.util.Hashtable LOCALE_TO_CHARSET_MAP -> LOCALE_TO_CHARSET_MAP
    java.lang.String getCharset(java.util.Locale) -> getCharset
org.apache.commons.httpclient.URIException -> org.apache.commons.httpclient.URIException:
    int UNKNOWN -> UNKNOWN
    int PARSING -> PARSING
    int UNSUPPORTED_ENCODING -> UNSUPPORTED_ENCODING
    int ESCAPING -> ESCAPING
    int PUNYCODE -> PUNYCODE
    int reasonCode -> reasonCode
    java.lang.String reason -> reason
    int getReasonCode() -> getReasonCode
    void setReasonCode(int) -> setReasonCode
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
org.apache.commons.httpclient.UsernamePasswordCredentials -> org.apache.commons.httpclient.UsernamePasswordCredentials:
    java.lang.String userName -> userName
    java.lang.String password -> password
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getUserName() -> getUserName
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.Wire -> org.apache.commons.httpclient.Wire:
    org.apache.commons.httpclient.Wire HEADER_WIRE -> HEADER_WIRE
    org.apache.commons.httpclient.Wire CONTENT_WIRE -> CONTENT_WIRE
    org.apache.commons.logging.Log log -> log
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.commons.httpclient.WireLogInputStream -> org.apache.commons.httpclient.WireLogInputStream:
    java.io.InputStream in -> in
    org.apache.commons.httpclient.Wire wire -> wire
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
org.apache.commons.httpclient.WireLogOutputStream -> org.apache.commons.httpclient.WireLogOutputStream:
    java.io.OutputStream out -> out
    org.apache.commons.httpclient.Wire wire -> wire
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
org.apache.commons.httpclient.auth.AuthChallengeException -> org.apache.commons.httpclient.auth.AuthChallengeException:
org.apache.commons.httpclient.auth.AuthChallengeParser -> org.apache.commons.httpclient.auth.AuthChallengeParser:
    java.lang.String extractScheme(java.lang.String) -> extractScheme
    java.util.Map extractParams(java.lang.String) -> extractParams
    java.util.Map parseChallenges(org.apache.commons.httpclient.Header[]) -> parseChallenges
org.apache.commons.httpclient.auth.AuthChallengeProcessor -> org.apache.commons.httpclient.auth.AuthChallengeProcessor:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.params.HttpParams params -> params
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthChallengeProcessor -> class$org$apache$commons$httpclient$auth$AuthChallengeProcessor
    org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(java.util.Map) -> selectAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme processChallenge(org.apache.commons.httpclient.auth.AuthState,java.util.Map) -> processChallenge
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.AuthPolicy -> org.apache.commons.httpclient.auth.AuthPolicy:
    java.util.HashMap SCHEMES -> SCHEMES
    java.util.ArrayList SCHEME_LIST -> SCHEME_LIST
    java.lang.String AUTH_SCHEME_PRIORITY -> AUTH_SCHEME_PRIORITY
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> class$org$apache$commons$httpclient$auth$NTLMScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> class$org$apache$commons$httpclient$auth$DigestScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> class$org$apache$commons$httpclient$auth$BasicScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthPolicy -> class$org$apache$commons$httpclient$auth$AuthPolicy
    void registerAuthScheme(java.lang.String,java.lang.Class) -> registerAuthScheme
    void unregisterAuthScheme(java.lang.String) -> unregisterAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme(java.lang.String) -> getAuthScheme
    java.util.List getDefaultAuthPrefs() -> getDefaultAuthPrefs
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.AuthScheme -> org.apache.commons.httpclient.auth.AuthScheme:
    void processChallenge(java.lang.String) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
org.apache.commons.httpclient.auth.AuthSchemeBase -> org.apache.commons.httpclient.auth.AuthSchemeBase:
    java.lang.String challenge -> challenge
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String getID() -> getID
    java.lang.String getRealm() -> getRealm
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(java.lang.String) -> processChallenge
org.apache.commons.httpclient.auth.AuthScope -> org.apache.commons.httpclient.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.commons.httpclient.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    boolean paramsEqual(java.lang.String,java.lang.String) -> paramsEqual
    boolean paramsEqual(int,int) -> paramsEqual
    int match(org.apache.commons.httpclient.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.commons.httpclient.auth.AuthState -> org.apache.commons.httpclient.auth.AuthState:
    java.lang.String PREEMPTIVE_AUTH_SCHEME -> PREEMPTIVE_AUTH_SCHEME
    org.apache.commons.httpclient.auth.AuthScheme authScheme -> authScheme
    boolean authRequested -> authRequested
    boolean authAttempted -> authAttempted
    boolean preemptive -> preemptive
    void invalidate() -> invalidate
    boolean isAuthRequested() -> isAuthRequested
    void setAuthRequested(boolean) -> setAuthRequested
    boolean isAuthAttempted() -> isAuthAttempted
    void setAuthAttempted(boolean) -> setAuthAttempted
    void setPreemptive() -> setPreemptive
    boolean isPreemptive() -> isPreemptive
    void setAuthScheme(org.apache.commons.httpclient.auth.AuthScheme) -> setAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    java.lang.String getRealm() -> getRealm
    java.lang.String toString() -> toString
org.apache.commons.httpclient.auth.AuthenticationException -> org.apache.commons.httpclient.auth.AuthenticationException:
org.apache.commons.httpclient.auth.BasicScheme -> org.apache.commons.httpclient.auth.BasicScheme:
    org.apache.commons.logging.Log LOG -> LOG
    boolean complete -> complete
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> class$org$apache$commons$httpclient$auth$BasicScheme
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials,java.lang.String) -> authenticate
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.CredentialsNotAvailableException -> org.apache.commons.httpclient.auth.CredentialsNotAvailableException:
org.apache.commons.httpclient.auth.CredentialsProvider -> org.apache.commons.httpclient.auth.CredentialsProvider:
    java.lang.String PROVIDER -> PROVIDER
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScheme,java.lang.String,int,boolean) -> getCredentials
org.apache.commons.httpclient.auth.DigestScheme -> org.apache.commons.httpclient.auth.DigestScheme:
    org.apache.commons.logging.Log LOG -> LOG
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    java.lang.String NC -> NC
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    int qopVariant -> qopVariant
    java.lang.String cnonce -> cnonce
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> formatter
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> class$org$apache$commons$httpclient$auth$DigestScheme
    java.lang.String getID() -> getID
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String createDigest(java.lang.String,java.lang.String) -> createDigest
    java.lang.String createDigestHeader(java.lang.String,java.lang.String) -> createDigestHeader
    java.lang.String getQopVariantString() -> getQopVariantString
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.HttpAuthRealm -> org.apache.commons.httpclient.auth.HttpAuthRealm:
org.apache.commons.httpclient.auth.HttpAuthenticator -> org.apache.commons.httpclient.auth.HttpAuthenticator:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    java.lang.Class class$org$apache$commons$httpclient$auth$HttpAuthenticator -> class$org$apache$commons$httpclient$auth$HttpAuthenticator
    org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(org.apache.commons.httpclient.Header[]) -> selectAuthScheme
    boolean doAuthenticateDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState,boolean) -> doAuthenticateDefault
    boolean authenticateDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateDefault
    boolean authenticateProxyDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateProxyDefault
    boolean doAuthenticate(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState,boolean) -> doAuthenticate
    boolean authenticate(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticate
    boolean authenticateProxy(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateProxy
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.InvalidCredentialsException -> org.apache.commons.httpclient.auth.InvalidCredentialsException:
org.apache.commons.httpclient.auth.MalformedChallengeException -> org.apache.commons.httpclient.auth.MalformedChallengeException:
org.apache.commons.httpclient.auth.NTLM -> org.apache.commons.httpclient.auth.NTLM:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    byte[] currentResponse -> currentResponse
    int currentPosition -> currentPosition
    java.lang.String credentialCharset -> credentialCharset
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    javax.crypto.Cipher getCipher(byte[]) -> getCipher
    byte[] setupKey(byte[]) -> setupKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    void prepareResponse(int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    java.lang.String getResponse() -> getResponse
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    byte[] parseType2Message(java.lang.String) -> parseType2Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[]) -> getType3Message
    byte[] hashPassword(java.lang.String,byte[]) -> hashPassword
    void calcResp(byte[],byte[],byte[]) -> calcResp
    byte[] convertShort(int) -> convertShort
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.commons.httpclient.auth.NTLMScheme -> org.apache.commons.httpclient.auth.NTLMScheme:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String ntlmchallenge -> ntlmchallenge
    int UNINITIATED -> UNINITIATED
    int INITIATED -> INITIATED
    int TYPE1_MSG_GENERATED -> TYPE1_MSG_GENERATED
    int TYPE2_MSG_RECEIVED -> TYPE2_MSG_RECEIVED
    int TYPE3_MSG_GENERATED -> TYPE3_MSG_GENERATED
    int FAILED -> FAILED
    int state -> state
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> class$org$apache$commons$httpclient$auth$NTLMScheme
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.RFC2617Scheme -> org.apache.commons.httpclient.auth.RFC2617Scheme:
    java.util.Map params -> params
    void processChallenge(java.lang.String) -> processChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String getSchemeName() -> getSchemeName
org.apache.commons.httpclient.cookie.CookiePolicy -> org.apache.commons.httpclient.cookie.CookiePolicy:
    java.util.Map SPECS -> SPECS
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
    java.lang.String DEFAULT -> DEFAULT
    int COMPATIBILITY -> COMPATIBILITY
    int NETSCAPE_DRAFT -> NETSCAPE_DRAFT
    int RFC2109 -> RFC2109
    int defaultPolicy -> defaultPolicy
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec -> class$org$apache$commons$httpclient$cookie$RFC2109Spec
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase -> class$org$apache$commons$httpclient$cookie$CookieSpecBase
    java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec -> class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec
    java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec -> class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy -> class$org$apache$commons$httpclient$cookie$CookiePolicy
    void registerCookieSpec(java.lang.String,java.lang.Class) -> registerCookieSpec
    void unregisterCookieSpec(java.lang.String) -> unregisterCookieSpec
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    int getDefaultPolicy() -> getDefaultPolicy
    void setDefaultPolicy(int) -> setDefaultPolicy
    org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int) -> getSpecByPolicy
    org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec() -> getDefaultSpec
    org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int) -> getSpecByVersion
    org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec() -> getCompatibilitySpec
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.cookie.CookieSpec -> org.apache.commons.httpclient.cookie.CookieSpec:
    java.lang.String PATH_DELIM -> PATH_DELIM
    char PATH_DELIM_CHAR -> PATH_DELIM_CHAR
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
org.apache.commons.httpclient.cookie.CookieSpecBase -> org.apache.commons.httpclient.cookie.CookieSpecBase:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Collection datepatterns -> datepatterns
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec -> class$org$apache$commons$httpclient$cookie$CookieSpec
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    void addInPathOrder(java.util.List,org.apache.commons.httpclient.Cookie) -> addInPathOrder
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.cookie.IgnoreCookiesSpec -> org.apache.commons.httpclient.cookie.IgnoreCookiesSpec:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
org.apache.commons.httpclient.cookie.MalformedCookieException -> org.apache.commons.httpclient.cookie.MalformedCookieException:
org.apache.commons.httpclient.cookie.NetscapeDraftSpec -> org.apache.commons.httpclient.cookie.NetscapeDraftSpec:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
org.apache.commons.httpclient.cookie.RFC2109Spec -> org.apache.commons.httpclient.cookie.RFC2109Spec:
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> formatter
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void formatParam(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair,int) -> formatParam
    void formatCookieAsVer(java.lang.StringBuffer,org.apache.commons.httpclient.Cookie,int) -> formatCookieAsVer
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
org.apache.commons.httpclient.methods.ByteArrayRequestEntity -> org.apache.commons.httpclient.methods.ByteArrayRequestEntity:
    byte[] content -> content
    java.lang.String contentType -> contentType
    boolean isRepeatable() -> isRepeatable
    java.lang.String getContentType() -> getContentType
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    byte[] getContent() -> getContent
org.apache.commons.httpclient.methods.DeleteMethod -> org.apache.commons.httpclient.methods.DeleteMethod:
    java.lang.String getName() -> getName
org.apache.commons.httpclient.methods.EntityEnclosingMethod -> org.apache.commons.httpclient.methods.EntityEnclosingMethod:
    long CONTENT_LENGTH_AUTO -> CONTENT_LENGTH_AUTO
    long CONTENT_LENGTH_CHUNKED -> CONTENT_LENGTH_CHUNKED
    org.apache.commons.logging.Log LOG -> LOG
    java.io.InputStream requestStream -> requestStream
    java.lang.String requestString -> requestString
    org.apache.commons.httpclient.methods.RequestEntity requestEntity -> requestEntity
    int repeatCount -> repeatCount
    long requestContentLength -> requestContentLength
    boolean chunked -> chunked
    java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod -> class$org$apache$commons$httpclient$methods$EntityEnclosingMethod
    boolean hasRequestContent() -> hasRequestContent
    void clearRequestBody() -> clearRequestBody
    byte[] generateRequestBody() -> generateRequestBody
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> generateRequestEntity
    boolean getFollowRedirects() -> getFollowRedirects
    void setFollowRedirects(boolean) -> setFollowRedirects
    void setRequestContentLength(int) -> setRequestContentLength
    java.lang.String getRequestCharSet() -> getRequestCharSet
    void setRequestContentLength(long) -> setRequestContentLength
    void setContentChunked(boolean) -> setContentChunked
    long getRequestContentLength() -> getRequestContentLength
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentLengthRequestHeader
    void setRequestBody(java.io.InputStream) -> setRequestBody
    void setRequestBody(java.lang.String) -> setRequestBody
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    void recycle() -> recycle
    org.apache.commons.httpclient.methods.RequestEntity getRequestEntity() -> getRequestEntity
    void setRequestEntity(org.apache.commons.httpclient.methods.RequestEntity) -> setRequestEntity
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.ExpectContinueMethod -> org.apache.commons.httpclient.methods.ExpectContinueMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$ExpectContinueMethod -> class$org$apache$commons$httpclient$methods$ExpectContinueMethod
    boolean getUseExpectHeader() -> getUseExpectHeader
    void setUseExpectHeader(boolean) -> setUseExpectHeader
    boolean hasRequestContent() -> hasRequestContent
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.GetMethod -> org.apache.commons.httpclient.methods.GetMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod -> class$org$apache$commons$httpclient$methods$GetMethod
    java.lang.String getName() -> getName
    void recycle() -> recycle
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.HeadMethod -> org.apache.commons.httpclient.methods.HeadMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$HeadMethod -> class$org$apache$commons$httpclient$methods$HeadMethod
    java.lang.String getName() -> getName
    void recycle() -> recycle
    void readResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    int getBodyCheckTimeout() -> getBodyCheckTimeout
    void setBodyCheckTimeout(int) -> setBodyCheckTimeout
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.InputStreamRequestEntity -> org.apache.commons.httpclient.methods.InputStreamRequestEntity:
    int CONTENT_LENGTH_AUTO -> CONTENT_LENGTH_AUTO
    org.apache.commons.logging.Log LOG -> LOG
    long contentLength -> contentLength
    java.io.InputStream content -> content
    byte[] buffer -> buffer
    java.lang.String contentType -> contentType
    java.lang.Class class$org$apache$commons$httpclient$methods$InputStreamRequestEntity -> class$org$apache$commons$httpclient$methods$InputStreamRequestEntity
    java.lang.String getContentType() -> getContentType
    void bufferContent() -> bufferContent
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.MultipartPostMethod -> org.apache.commons.httpclient.methods.MultipartPostMethod:
    java.lang.String MULTIPART_FORM_CONTENT_TYPE -> MULTIPART_FORM_CONTENT_TYPE
    org.apache.commons.logging.Log LOG -> LOG
    java.util.List parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$methods$MultipartPostMethod -> class$org$apache$commons$httpclient$methods$MultipartPostMethod
    boolean hasRequestContent() -> hasRequestContent
    java.lang.String getName() -> getName
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void addParameter(java.lang.String,java.io.File) -> addParameter
    void addParameter(java.lang.String,java.lang.String,java.io.File) -> addParameter
    void addPart(org.apache.commons.httpclient.methods.multipart.Part) -> addPart
    org.apache.commons.httpclient.methods.multipart.Part[] getParts() -> getParts
    void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentLengthRequestHeader
    void addContentTypeRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentTypeRequestHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    long getRequestContentLength() -> getRequestContentLength
    void recycle() -> recycle
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.OptionsMethod -> org.apache.commons.httpclient.methods.OptionsMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Vector methodsAllowed -> methodsAllowed
    java.lang.Class class$org$apache$commons$httpclient$methods$OptionsMethod -> class$org$apache$commons$httpclient$methods$OptionsMethod
    java.lang.String getName() -> getName
    boolean isAllowed(java.lang.String) -> isAllowed
    java.util.Enumeration getAllowedMethods() -> getAllowedMethods
    void processResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseHeaders
    boolean needContentLength() -> needContentLength
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.PostMethod -> org.apache.commons.httpclient.methods.PostMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String FORM_URL_ENCODED_CONTENT_TYPE -> FORM_URL_ENCODED_CONTENT_TYPE
    java.util.Vector params -> params
    java.lang.Class class$org$apache$commons$httpclient$methods$PostMethod -> class$org$apache$commons$httpclient$methods$PostMethod
    java.lang.String getName() -> getName
    boolean hasRequestContent() -> hasRequestContent
    void clearRequestBody() -> clearRequestBody
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> generateRequestEntity
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    org.apache.commons.httpclient.NameValuePair getParameter(java.lang.String) -> getParameter
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> getParameters
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void addParameter(org.apache.commons.httpclient.NameValuePair) -> addParameter
    void addParameters(org.apache.commons.httpclient.NameValuePair[]) -> addParameters
    boolean removeParameter(java.lang.String) -> removeParameter
    boolean removeParameter(java.lang.String,java.lang.String) -> removeParameter
    void setRequestBody(org.apache.commons.httpclient.NameValuePair[]) -> setRequestBody
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.PutMethod -> org.apache.commons.httpclient.methods.PutMethod:
    java.lang.String getName() -> getName
org.apache.commons.httpclient.methods.RequestEntity -> org.apache.commons.httpclient.methods.RequestEntity:
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
org.apache.commons.httpclient.methods.StringRequestEntity -> org.apache.commons.httpclient.methods.StringRequestEntity:
    byte[] content -> content
    java.lang.String charset -> charset
    java.lang.String contentType -> contentType
    java.lang.String getContentType() -> getContentType
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContent() -> getContent
    java.lang.String getCharset() -> getCharset
org.apache.commons.httpclient.methods.TraceMethod -> org.apache.commons.httpclient.methods.TraceMethod:
    java.lang.String getName() -> getName
    void recycle() -> recycle
org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource -> org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource:
    java.lang.String fileName -> fileName
    byte[] bytes -> bytes
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.FilePart -> org.apache.commons.httpclient.methods.multipart.FilePart:
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String FILE_NAME -> FILE_NAME
    byte[] FILE_NAME_BYTES -> FILE_NAME_BYTES
    org.apache.commons.httpclient.methods.multipart.PartSource source -> source
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$FilePart -> class$org$apache$commons$httpclient$methods$multipart$FilePart
    void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    void sendData(java.io.OutputStream) -> sendData
    org.apache.commons.httpclient.methods.multipart.PartSource getSource() -> getSource
    long lengthOfData() -> lengthOfData
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.FilePartSource -> org.apache.commons.httpclient.methods.multipart.FilePartSource:
    java.io.File file -> file
    java.lang.String fileName -> fileName
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity -> org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity:
    org.apache.commons.logging.Log log -> log
    java.lang.String MULTIPART_FORM_CONTENT_TYPE -> MULTIPART_FORM_CONTENT_TYPE
    byte[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.commons.httpclient.methods.multipart.Part[] parts -> parts
    byte[] multipartBoundary -> multipartBoundary
    org.apache.commons.httpclient.params.HttpMethodParams params -> params
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$MultipartRequestEntity -> class$org$apache$commons$httpclient$methods$multipart$MultipartRequestEntity
    byte[] generateMultipartBoundary() -> generateMultipartBoundary
    byte[] getMultipartBoundary() -> getMultipartBoundary
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.Part -> org.apache.commons.httpclient.methods.multipart.Part:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String BOUNDARY -> BOUNDARY
    byte[] BOUNDARY_BYTES -> BOUNDARY_BYTES
    byte[] DEFAULT_BOUNDARY_BYTES -> DEFAULT_BOUNDARY_BYTES
    java.lang.String CRLF -> CRLF
    byte[] CRLF_BYTES -> CRLF_BYTES
    java.lang.String QUOTE -> QUOTE
    byte[] QUOTE_BYTES -> QUOTE_BYTES
    java.lang.String EXTRA -> EXTRA
    byte[] EXTRA_BYTES -> EXTRA_BYTES
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    byte[] CONTENT_DISPOSITION_BYTES -> CONTENT_DISPOSITION_BYTES
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] CONTENT_TYPE_BYTES -> CONTENT_TYPE_BYTES
    java.lang.String CHARSET -> CHARSET
    byte[] CHARSET_BYTES -> CHARSET_BYTES
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    byte[] CONTENT_TRANSFER_ENCODING_BYTES -> CONTENT_TRANSFER_ENCODING_BYTES
    byte[] boundaryBytes -> boundaryBytes
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$Part -> class$org$apache$commons$httpclient$methods$multipart$Part
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    byte[] getPartBoundary() -> getPartBoundary
    void setPartBoundary(byte[]) -> setPartBoundary
    boolean isRepeatable() -> isRepeatable
    void sendStart(java.io.OutputStream) -> sendStart
    void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    void sendContentTypeHeader(java.io.OutputStream) -> sendContentTypeHeader
    void sendTransferEncodingHeader(java.io.OutputStream) -> sendTransferEncodingHeader
    void sendEndOfHeader(java.io.OutputStream) -> sendEndOfHeader
    void sendData(java.io.OutputStream) -> sendData
    long lengthOfData() -> lengthOfData
    void sendEnd(java.io.OutputStream) -> sendEnd
    void send(java.io.OutputStream) -> send
    long length() -> length
    java.lang.String toString() -> toString
    void sendParts(java.io.OutputStream,org.apache.commons.httpclient.methods.multipart.Part[]) -> sendParts
    void sendParts(java.io.OutputStream,org.apache.commons.httpclient.methods.multipart.Part[],byte[]) -> sendParts
    long getLengthOfParts(org.apache.commons.httpclient.methods.multipart.Part[]) -> getLengthOfParts
    long getLengthOfParts(org.apache.commons.httpclient.methods.multipart.Part[],byte[]) -> getLengthOfParts
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.PartBase -> org.apache.commons.httpclient.methods.multipart.PartBase:
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    java.lang.String charSet -> charSet
    java.lang.String transferEncoding -> transferEncoding
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    void setCharSet(java.lang.String) -> setCharSet
    void setContentType(java.lang.String) -> setContentType
    void setName(java.lang.String) -> setName
    void setTransferEncoding(java.lang.String) -> setTransferEncoding
org.apache.commons.httpclient.methods.multipart.PartSource -> org.apache.commons.httpclient.methods.multipart.PartSource:
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.StringPart -> org.apache.commons.httpclient.methods.multipart.StringPart:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    byte[] content -> content
    java.lang.String value -> value
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$StringPart -> class$org$apache$commons$httpclient$methods$multipart$StringPart
    byte[] getContent() -> getContent
    void sendData(java.io.OutputStream) -> sendData
    long lengthOfData() -> lengthOfData
    void setCharSet(java.lang.String) -> setCharSet
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.DefaultHttpParams -> org.apache.commons.httpclient.params.DefaultHttpParams:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory -> httpParamsFactory
    org.apache.commons.httpclient.params.HttpParams defaults -> defaults
    java.util.HashMap parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams -> class$org$apache$commons$httpclient$params$DefaultHttpParams
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
    void setHttpParamsFactory(org.apache.commons.httpclient.params.HttpParamsFactory) -> setHttpParamsFactory
    org.apache.commons.httpclient.params.HttpParams getDefaults() -> getDefaults
    void setDefaults(org.apache.commons.httpclient.params.HttpParams) -> setDefaults
    java.lang.Object getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.Object) -> setParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    long getLongParameter(java.lang.String,long) -> getLongParameter
    void setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    void setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    void setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    void setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    void clear() -> clear
    java.lang.Object clone() -> clone
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.DefaultHttpParamsFactory -> org.apache.commons.httpclient.params.DefaultHttpParamsFactory:
    org.apache.commons.httpclient.params.HttpParams httpParams -> httpParams
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> class$org$apache$commons$httpclient$SimpleHttpConnectionManager
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
    org.apache.commons.httpclient.params.HttpParams createParams() -> createParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.HostParams -> org.apache.commons.httpclient.params.HostParams:
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    void setVirtualHost(java.lang.String) -> setVirtualHost
    java.lang.String getVirtualHost() -> getVirtualHost
org.apache.commons.httpclient.params.HttpClientParams -> org.apache.commons.httpclient.params.HttpClientParams:
    java.lang.String CONNECTION_MANAGER_TIMEOUT -> CONNECTION_MANAGER_TIMEOUT
    java.lang.String CONNECTION_MANAGER_CLASS -> CONNECTION_MANAGER_CLASS
    java.lang.String PREEMPTIVE_AUTHENTICATION -> PREEMPTIVE_AUTHENTICATION
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> PROTOCOL_STRICTNESS_PARAMETERS
    long getConnectionManagerTimeout() -> getConnectionManagerTimeout
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
    java.lang.Class getConnectionManagerClass() -> getConnectionManagerClass
    void setConnectionManagerClass(java.lang.Class) -> setConnectionManagerClass
    boolean isAuthenticationPreemptive() -> isAuthenticationPreemptive
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void makeStrict() -> makeStrict
    void makeLenient() -> makeLenient
org.apache.commons.httpclient.params.HttpConnectionManagerParams -> org.apache.commons.httpclient.params.HttpConnectionManagerParams:
    java.lang.String MAX_HOST_CONNECTIONS -> MAX_HOST_CONNECTIONS
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
    void setDefaultMaxConnectionsPerHost(int) -> setDefaultMaxConnectionsPerHost
    void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration,int) -> setMaxConnectionsPerHost
    int getDefaultMaxConnectionsPerHost() -> getDefaultMaxConnectionsPerHost
    int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration) -> getMaxConnectionsPerHost
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
org.apache.commons.httpclient.params.HttpConnectionParams -> org.apache.commons.httpclient.params.HttpConnectionParams:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SO_SNDBUF -> SO_SNDBUF
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    int getSoTimeout() -> getSoTimeout
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    boolean getTcpNoDelay() -> getTcpNoDelay
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    int getLinger() -> getLinger
    void setLinger(int) -> setLinger
    int getConnectionTimeout() -> getConnectionTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.commons.httpclient.params.HttpMethodParams -> org.apache.commons.httpclient.params.HttpMethodParams:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String UNAMBIGUOUS_STATUS_LINE -> UNAMBIGUOUS_STATUS_LINE
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String REJECT_HEAD_BODY -> REJECT_HEAD_BODY
    java.lang.String HEAD_BODY_CHECK_TIMEOUT -> HEAD_BODY_CHECK_TIMEOUT
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String WARN_EXTRA_INPUT -> WARN_EXTRA_INPUT
    java.lang.String STATUS_LINE_GARBAGE_LIMIT -> STATUS_LINE_GARBAGE_LIMIT
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String RETRY_HANDLER -> RETRY_HANDLER
    java.lang.String BUFFER_WARN_TRIGGER_LIMIT -> BUFFER_WARN_TRIGGER_LIMIT
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String MULTIPART_BOUNDARY -> MULTIPART_BOUNDARY
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> PROTOCOL_STRICTNESS_PARAMETERS
    java.lang.Class class$org$apache$commons$httpclient$params$HttpMethodParams -> class$org$apache$commons$httpclient$params$HttpMethodParams
    java.lang.String getHttpElementCharset() -> getHttpElementCharset
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset() -> getContentCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    org.apache.commons.httpclient.HttpVersion getVersion() -> getVersion
    void setVersion(org.apache.commons.httpclient.HttpVersion) -> setVersion
    java.lang.String getCookiePolicy() -> getCookiePolicy
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    int getSoTimeout() -> getSoTimeout
    void setSoTimeout(int) -> setSoTimeout
    void setVirtualHost(java.lang.String) -> setVirtualHost
    java.lang.String getVirtualHost() -> getVirtualHost
    void makeStrict() -> makeStrict
    void makeLenient() -> makeLenient
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.HttpParams -> org.apache.commons.httpclient.params.HttpParams:
    org.apache.commons.httpclient.params.HttpParams getDefaults() -> getDefaults
    void setDefaults(org.apache.commons.httpclient.params.HttpParams) -> setDefaults
    java.lang.Object getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.Object) -> setParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    void setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    void setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    void setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    void setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.commons.httpclient.params.HttpParamsFactory -> org.apache.commons.httpclient.params.HttpParamsFactory:
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory:
    java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int,int) -> createSocket
    java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask,int) -> createSocket
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1 -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1:
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory val$socketfactory -> val$socketfactory
    java.lang.String val$host -> val$host
    int val$port -> val$port
    java.net.InetAddress val$localAddress -> val$localAddress
    int val$localPort -> val$localPort
    void doit() -> doit
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask:
    java.net.Socket socket -> socket
    java.io.IOException exception -> exception
    void setSocket(java.net.Socket) -> setSocket
    java.net.Socket getSocket() -> getSocket
    void doit() -> doit
    void run() -> run
    java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask) -> access$000
org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory -> org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory:
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory -> factory
    java.lang.Class class$org$apache$commons$httpclient$protocol$DefaultProtocolSocketFactory -> class$org$apache$commons$httpclient$protocol$DefaultProtocolSocketFactory
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.Protocol -> org.apache.commons.httpclient.protocol.Protocol:
    java.util.Map PROTOCOLS -> PROTOCOLS
    java.lang.String scheme -> scheme
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean secure -> secure
    void registerProtocol(java.lang.String,org.apache.commons.httpclient.protocol.Protocol) -> registerProtocol
    void unregisterProtocol(java.lang.String) -> unregisterProtocol
    org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String) -> getProtocol
    org.apache.commons.httpclient.protocol.Protocol lazyRegisterProtocol(java.lang.String) -> lazyRegisterProtocol
    int getDefaultPort() -> getDefaultPort
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String getScheme() -> getScheme
    boolean isSecure() -> isSecure
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.protocol.ProtocolSocketFactory -> org.apache.commons.httpclient.protocol.ProtocolSocketFactory:
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
org.apache.commons.httpclient.protocol.ReflectionSocketFactory -> org.apache.commons.httpclient.protocol.ReflectionSocketFactory:
    boolean REFLECTION_FAILED -> REFLECTION_FAILED
    java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR -> INETSOCKETADDRESS_CONSTRUCTOR
    java.lang.reflect.Method SOCKETCONNECT_METHOD -> SOCKETCONNECT_METHOD
    java.lang.reflect.Method SOCKETBIND_METHOD -> SOCKETBIND_METHOD
    java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS -> SOCKETTIMEOUTEXCEPTION_CLASS
    java.lang.Class class$java$net$InetAddress -> class$java$net$InetAddress
    java.lang.Class class$java$net$Socket -> class$java$net$Socket
    java.net.Socket createSocket(java.lang.String,java.lang.String,int,java.net.InetAddress,int,int) -> createSocket
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory -> org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory:
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory factory -> factory
    java.lang.Class class$org$apache$commons$httpclient$protocol$SSLProtocolSocketFactory -> class$org$apache$commons$httpclient$protocol$SSLProtocolSocketFactory
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory -> org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.commons.httpclient.util.DateParseException -> org.apache.commons.httpclient.util.DateParseException:
org.apache.commons.httpclient.util.DateParser -> org.apache.commons.httpclient.util.DateParser:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.Collection DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection) -> parseDate
org.apache.commons.httpclient.util.DateUtil -> org.apache.commons.httpclient.util.DateUtil:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.Collection DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection,java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.commons.httpclient.util.EncodingUtil -> org.apache.commons.httpclient.util.EncodingUtil:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$util$EncodingUtil -> class$org$apache$commons$httpclient$util$EncodingUtil
    java.lang.String formUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> formUrlEncode
    java.lang.String doFormUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> doFormUrlEncode
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.ExceptionUtil -> org.apache.commons.httpclient.util.ExceptionUtil:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.Class SOCKET_TIMEOUT_CLASS -> SOCKET_TIMEOUT_CLASS
    java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil -> class$org$apache$commons$httpclient$util$ExceptionUtil
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    java.lang.Class SocketTimeoutExceptionClass() -> SocketTimeoutExceptionClass
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
    boolean isSocketTimeoutException(java.io.InterruptedIOException) -> isSocketTimeoutException
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.HttpURLConnection -> org.apache.commons.httpclient.util.HttpURLConnection:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HttpMethod method -> method
    java.net.URL url -> url
    java.lang.Class class$org$apache$commons$httpclient$util$HttpURLConnection -> class$org$apache$commons$httpclient$util$HttpURLConnection
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    void disconnect() -> disconnect
    void connect() -> connect
    boolean usingProxy() -> usingProxy
    java.lang.String getRequestMethod() -> getRequestMethod
    int getResponseCode() -> getResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    java.lang.String getHeaderField(int) -> getHeaderField
    java.net.URL getURL() -> getURL
    void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.security.Permission getPermission() -> getPermission
    java.lang.Object getContent() -> getContent
    java.lang.Object getContent(java.lang.Class[]) -> getContent
    java.io.OutputStream getOutputStream() -> getOutputStream
    void setDoInput(boolean) -> setDoInput
    boolean getDoInput() -> getDoInput
    void setDoOutput(boolean) -> setDoOutput
    boolean getDoOutput() -> getDoOutput
    void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    boolean getAllowUserInteraction() -> getAllowUserInteraction
    void setUseCaches(boolean) -> setUseCaches
    boolean getUseCaches() -> getUseCaches
    void setIfModifiedSince(long) -> setIfModifiedSince
    long getIfModifiedSince() -> getIfModifiedSince
    boolean getDefaultUseCaches() -> getDefaultUseCaches
    void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.IdleConnectionHandler -> org.apache.commons.httpclient.util.IdleConnectionHandler:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Map connectionToAdded -> connectionToAdded
    java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler -> class$org$apache$commons$httpclient$util$IdleConnectionHandler
    void add(org.apache.commons.httpclient.HttpConnection) -> add
    void remove(org.apache.commons.httpclient.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.IdleConnectionTimeoutThread -> org.apache.commons.httpclient.util.IdleConnectionTimeoutThread:
    java.util.List connectionManagers -> connectionManagers
    boolean shutdown -> shutdown
    long timeoutInterval -> timeoutInterval
    long connectionTimeout -> connectionTimeout
    void addConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> addConnectionManager
    void removeConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> removeConnectionManager
    void run() -> run
    void shutdown() -> shutdown
    void setConnectionTimeout(long) -> setConnectionTimeout
    void setTimeoutInterval(long) -> setTimeoutInterval
org.apache.commons.httpclient.util.LangUtils -> org.apache.commons.httpclient.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    int hashCode(int,boolean) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
org.apache.commons.httpclient.util.ParameterFormatter -> org.apache.commons.httpclient.util.ParameterFormatter:
    char[] SEPARATORS -> SEPARATORS
    char[] UNSAFE_CHARS -> UNSAFE_CHARS
    boolean alwaysUseQuotes -> alwaysUseQuotes
    boolean isOneOf(char[],char) -> isOneOf
    boolean isUnsafeChar(char) -> isUnsafeChar
    boolean isSeparator(char) -> isSeparator
    boolean isAlwaysUseQuotes() -> isAlwaysUseQuotes
    void setAlwaysUseQuotes(boolean) -> setAlwaysUseQuotes
    void formatValue(java.lang.StringBuffer,java.lang.String,boolean) -> formatValue
    void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair) -> format
    java.lang.String format(org.apache.commons.httpclient.NameValuePair) -> format
org.apache.commons.httpclient.util.ParameterParser -> org.apache.commons.httpclient.util.ParameterParser:
    char[] chars -> chars
    int pos -> pos
    int len -> len
    int i1 -> i1
    int i2 -> i2
    boolean hasChar() -> hasChar
    java.lang.String getToken(boolean) -> getToken
    boolean isOneOf(char,char[]) -> isOneOf
    java.lang.String parseToken(char[]) -> parseToken
    java.lang.String parseQuotedToken(char[]) -> parseQuotedToken
    java.util.List parse(java.lang.String,char) -> parse
    java.util.List parse(char[],char) -> parse
    java.util.List parse(char[],int,int,char) -> parse
org.apache.commons.httpclient.util.TimeoutController -> org.apache.commons.httpclient.util.TimeoutController:
    void execute(java.lang.Thread,long) -> execute
    void execute(java.lang.Runnable,long) -> execute
org.apache.commons.httpclient.util.TimeoutController$TimeoutException -> org.apache.commons.httpclient.util.TimeoutController$TimeoutException:
org.apache.commons.httpclient.util.URIUtil -> org.apache.commons.httpclient.util.URIUtil:
    java.util.BitSet empty -> empty
    java.lang.String getName(java.lang.String) -> getName
    java.lang.String getQuery(java.lang.String) -> getQuery
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getPathQuery(java.lang.String) -> getPathQuery
    java.lang.String getFromPath(java.lang.String) -> getFromPath
    java.lang.String encodeAll(java.lang.String) -> encodeAll
    java.lang.String encodeAll(java.lang.String,java.lang.String) -> encodeAll
    java.lang.String encodeWithinAuthority(java.lang.String) -> encodeWithinAuthority
    java.lang.String encodeWithinAuthority(java.lang.String,java.lang.String) -> encodeWithinAuthority
    java.lang.String encodePathQuery(java.lang.String) -> encodePathQuery
    java.lang.String encodePathQuery(java.lang.String,java.lang.String) -> encodePathQuery
    java.lang.String encodeWithinPath(java.lang.String) -> encodeWithinPath
    java.lang.String encodeWithinPath(java.lang.String,java.lang.String) -> encodeWithinPath
    java.lang.String encodePath(java.lang.String) -> encodePath
    java.lang.String encodePath(java.lang.String,java.lang.String) -> encodePath
    java.lang.String encodeWithinQuery(java.lang.String) -> encodeWithinQuery
    java.lang.String encodeWithinQuery(java.lang.String,java.lang.String) -> encodeWithinQuery
    java.lang.String encodeQuery(java.lang.String) -> encodeQuery
    java.lang.String encodeQuery(java.lang.String,java.lang.String) -> encodeQuery
    java.lang.String encode(java.lang.String,java.util.BitSet) -> encode
    java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
org.apache.commons.httpclient.util.URIUtil$Coder -> org.apache.commons.httpclient.util.URIUtil$Coder:
    char[] encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(char[],java.lang.String) -> decode
    boolean verifyEscaped(char[]) -> verifyEscaped
    java.lang.String replace(java.lang.String,char[],char[]) -> replace
    java.lang.String replace(java.lang.String,char,char) -> replace
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
uk.co.senab.bitmapcache.BitmapLruCache -> uk.co.senab.bitmapcache.BitmapLruCache:
    int DISK_CACHE_FLUSH_DELAY_SECS -> DISK_CACHE_FLUSH_DELAY_SECS
    java.io.File mTempDir -> mTempDir
    android.content.res.Resources mResources -> mResources
    uk.co.senab.bitmapcache.BitmapMemoryLruCache mMemoryCache -> mMemoryCache
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    com.jakewharton.disklrucache.DiskLruCache mDiskCache -> mDiskCache
    java.util.HashMap mDiskCacheEditLocks -> mDiskCacheEditLocks
    java.util.concurrent.ScheduledThreadPoolExecutor mDiskCacheFlusherExecutor -> mDiskCacheFlusherExecutor
    uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable mDiskCacheFlusherRunnable -> mDiskCacheFlusherRunnable
    java.util.concurrent.ScheduledFuture mDiskCacheFuture -> mDiskCacheFuture
    void checkNotOnMainThread() -> checkNotOnMainThread
    java.lang.String transformUrlForDiskCacheKey(java.lang.String) -> transformUrlForDiskCacheKey
    boolean contains(java.lang.String) -> contains
    boolean containsInDiskCache(java.lang.String) -> containsInDiskCache
    boolean containsInMemoryCache(java.lang.String) -> containsInMemoryCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable get(java.lang.String) -> get
    uk.co.senab.bitmapcache.CacheableBitmapDrawable get(java.lang.String,android.graphics.BitmapFactory$Options) -> get
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromDiskCache(java.lang.String,android.graphics.BitmapFactory$Options) -> getFromDiskCache
    uk.co.senab.bitmapcache.CacheableBitmapDrawable getFromMemoryCache(java.lang.String) -> getFromMemoryCache
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    uk.co.senab.bitmapcache.CacheableBitmapDrawable putOnlyToMem(java.lang.String,android.graphics.Bitmap) -> putOnlyToMem
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,android.graphics.Bitmap) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,java.io.InputStream) -> put
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(java.lang.String,java.io.InputStream,android.graphics.BitmapFactory$Options) -> put
    void remove(java.lang.String) -> remove
    void trimMemory() -> trimMemory
    void setDiskCache(com.jakewharton.disklrucache.DiskLruCache) -> setDiskCache
    void setMemoryCache(uk.co.senab.bitmapcache.BitmapMemoryLruCache,uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy) -> setMemoryCache
    java.util.concurrent.locks.ReentrantLock getLockForDiskCacheEdit(java.lang.String) -> getLockForDiskCacheEdit
    void scheduleDiskCacheFlush() -> scheduleDiskCacheFlush
uk.co.senab.bitmapcache.BitmapLruCache$1 -> uk.co.senab.bitmapcache.BitmapLruCache$1:
    int[] $SwitchMap$uk$co$senab$bitmapcache$BitmapLruCache$RecyclePolicy -> $SwitchMap$uk$co$senab$bitmapcache$BitmapLruCache$RecyclePolicy
uk.co.senab.bitmapcache.BitmapLruCache$Builder -> uk.co.senab.bitmapcache.BitmapLruCache$Builder:
    int MEGABYTE -> MEGABYTE
    float DEFAULT_MEMORY_CACHE_HEAP_RATIO -> DEFAULT_MEMORY_CACHE_HEAP_RATIO
    float MAX_MEMORY_CACHE_HEAP_RATIO -> MAX_MEMORY_CACHE_HEAP_RATIO
    int DEFAULT_DISK_CACHE_MAX_SIZE_MB -> DEFAULT_DISK_CACHE_MAX_SIZE_MB
    int DEFAULT_MEM_CACHE_MAX_SIZE_MB -> DEFAULT_MEM_CACHE_MAX_SIZE_MB
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy DEFAULT_RECYCLE_POLICY -> DEFAULT_RECYCLE_POLICY
    float DEFAULT_MEMORY_CACHE_HEAP_PERCENTAGE -> DEFAULT_MEMORY_CACHE_HEAP_PERCENTAGE
    float MAX_MEMORY_CACHE_HEAP_PERCENTAGE -> MAX_MEMORY_CACHE_HEAP_PERCENTAGE
    android.content.Context mContext -> mContext
    boolean mDiskCacheEnabled -> mDiskCacheEnabled
    java.io.File mDiskCacheLocation -> mDiskCacheLocation
    long mDiskCacheMaxSize -> mDiskCacheMaxSize
    boolean mMemoryCacheEnabled -> mMemoryCacheEnabled
    int mMemoryCacheMaxSize -> mMemoryCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    long getHeapSize() -> getHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache build() -> build
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheLocation(java.io.File) -> setDiskCacheLocation
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setDiskCacheMaxSize(long) -> setDiskCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSize(int) -> setMemoryCacheMaxSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSizeUsingHeapSize() -> setMemoryCacheMaxSizeUsingHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setMemoryCacheMaxSizeUsingHeapSize(float) -> setMemoryCacheMaxSizeUsingHeapSize
    uk.co.senab.bitmapcache.BitmapLruCache$Builder setRecyclePolicy(uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy) -> setRecyclePolicy
    boolean isValidOptionsForDiskCache() -> isValidOptionsForDiskCache
    boolean isValidOptionsForMemoryCache() -> isValidOptionsForMemoryCache
    java.io.File access$000(uk.co.senab.bitmapcache.BitmapLruCache$Builder) -> access$000
    long access$100(uk.co.senab.bitmapcache.BitmapLruCache$Builder) -> access$100
uk.co.senab.bitmapcache.BitmapLruCache$Builder$1 -> uk.co.senab.bitmapcache.BitmapLruCache$Builder$1:
    uk.co.senab.bitmapcache.BitmapLruCache val$cache -> val$cache
    uk.co.senab.bitmapcache.BitmapLruCache$Builder this$0 -> this$0
    com.jakewharton.disklrucache.DiskLruCache doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.jakewharton.disklrucache.DiskLruCache) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable -> uk.co.senab.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable:
    com.jakewharton.disklrucache.DiskLruCache mDiskCache -> mDiskCache
    void run() -> run
uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy -> uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy:
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy DISABLED -> DISABLED
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy PRE_HONEYCOMB_ONLY -> PRE_HONEYCOMB_ONLY
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy ALWAYS -> ALWAYS
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy[] $VALUES -> $VALUES
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy[] values() -> values
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy valueOf(java.lang.String) -> valueOf
    boolean canRecycle() -> canRecycle
uk.co.senab.bitmapcache.BitmapMemoryLruCache -> uk.co.senab.bitmapcache.BitmapMemoryLruCache:
    uk.co.senab.bitmapcache.CacheableBitmapDrawable put(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> put
    int sizeOf(java.lang.String,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> sizeOf
    void entryRemoved(boolean,java.lang.String,uk.co.senab.bitmapcache.CacheableBitmapDrawable,uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> entryRemoved
    void trimMemory() -> trimMemory
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
uk.co.senab.bitmapcache.CacheableBitmapDrawable -> uk.co.senab.bitmapcache.CacheableBitmapDrawable:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String mUrl -> mUrl
    uk.co.senab.bitmapcache.BitmapLruCache$RecyclePolicy mRecyclePolicy -> mRecyclePolicy
    int mDisplayingCount -> mDisplayingCount
    boolean mHasBeenDisplayed -> mHasBeenDisplayed
    int mCacheCount -> mCacheCount
    java.lang.Runnable mCheckStateRunnable -> mCheckStateRunnable
    java.lang.Throwable mStackTraceWhenRecycled -> mStackTraceWhenRecycled
    android.os.Handler sHandler -> sHandler
    int mMemorySize -> mMemorySize
    void draw(android.graphics.Canvas) -> draw
    int getMemorySize() -> getMemorySize
    java.lang.String getUrl() -> getUrl
    boolean hasValidBitmap() -> hasValidBitmap
    boolean isBeingDisplayed() -> isBeingDisplayed
    boolean isReferencedByCache() -> isReferencedByCache
    void setBeingUsed(boolean) -> setBeingUsed
    void setCached(boolean) -> setCached
    void cancelCheckStateCallback() -> cancelCheckStateCallback
    void checkState() -> checkState
    void checkState(boolean) -> checkState
    void access$000(uk.co.senab.bitmapcache.CacheableBitmapDrawable,boolean) -> access$000
uk.co.senab.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable -> uk.co.senab.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable:
    void run(uk.co.senab.bitmapcache.CacheableBitmapDrawable) -> run
    void run(java.lang.Object) -> run
uk.co.senab.bitmapcache.CacheableImageView -> uk.co.senab.bitmapcache.CacheableImageView:
    void onDrawableSet(android.graphics.drawable.Drawable) -> onDrawableSet
    void onDrawableUnset(android.graphics.drawable.Drawable) -> onDrawableUnset
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.bitmapcache.Constants -> uk.co.senab.bitmapcache.Constants:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    int UNUSED_DRAWABLE_RECYCLE_DELAY_MS -> UNUSED_DRAWABLE_RECYCLE_DELAY_MS
uk.co.senab.bitmapcache.IoUtils -> uk.co.senab.bitmapcache.IoUtils:
    long copy(java.io.File,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.File) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
uk.co.senab.bitmapcache.Md5 -> uk.co.senab.bitmapcache.Md5:
    char[] DIGITS -> DIGITS
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
uk.co.senab.bitmapcache.Util -> uk.co.senab.bitmapcache.Util:
    long copy(java.io.File,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.File) -> copy
    void saveBitmap(android.graphics.Bitmap,java.io.OutputStream) -> saveBitmap
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
uk.co.senab.bitmapcache.WeakReferenceRunnable -> uk.co.senab.bitmapcache.WeakReferenceRunnable:
    java.lang.ref.WeakReference mObjectRef -> mObjectRef
    void run() -> run
    void run(java.lang.Object) -> run
uk.co.senab.photoview.Compat -> uk.co.senab.photoview.Compat:
    int SIXTY_FPS_INTERVAL -> SIXTY_FPS_INTERVAL
    int VERSION_CODE_JELLY_BEAN -> VERSION_CODE_JELLY_BEAN
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
uk.co.senab.photoview.HackyViewPager -> uk.co.senab.photoview.HackyViewPager:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
uk.co.senab.photoview.IPhotoView -> uk.co.senab.photoview.IPhotoView:
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> mAttacher
    android.widget.ImageView$ScaleType mPendingScaleType -> mPendingScaleType
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.photoview.PhotoViewAttacher -> uk.co.senab.photoview.PhotoViewAttacher:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    int EDGE_NONE -> EDGE_NONE
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_BOTH -> EDGE_BOTH
    float DEFAULT_MAX_SCALE -> DEFAULT_MAX_SCALE
    float DEFAULT_MID_SCALE -> DEFAULT_MID_SCALE
    float DEFAULT_MIN_SCALE -> DEFAULT_MIN_SCALE
    float mMinScale -> mMinScale
    float mMidScale -> mMidScale
    float mMaxScale -> mMaxScale
    boolean mAllowParentInterceptOnEdge -> mAllowParentInterceptOnEdge
    java.lang.ref.WeakReference mImageView -> mImageView
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    uk.co.senab.photoview.VersionedGestureDetector mScaleDragDetector -> mScaleDragDetector
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mDrawMatrix -> mDrawMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.RectF mDisplayRect -> mDisplayRect
    float[] mMatrixValues -> mMatrixValues
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> mMatrixChangeListener
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> mPhotoTapListener
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> mViewTapListener
    android.view.View$OnLongClickListener mLongClickListener -> mLongClickListener
    int mIvTop -> mIvTop
    int mIvRight -> mIvRight
    int mIvBottom -> mIvBottom
    int mIvLeft -> mIvLeft
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> mCurrentFlingRunnable
    int mScrollEdge -> mScrollEdge
    boolean mZoomEnabled -> mZoomEnabled
    android.widget.ImageView$ScaleType mScaleType -> mScaleType
    void checkZoomLevels(float,float,float) -> checkZoomLevels
    boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> setImageViewScaleTypeMatrix
    boolean canZoom() -> canZoom
    void cleanup() -> cleanup
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.widget.ImageView getImageView() -> getImageView
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> onScale
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void update() -> update
    void zoomTo(float,float,float) -> zoomTo
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    void cancelFling() -> cancelFling
    void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    void checkImageViewScaleType() -> checkImageViewScaleType
    void checkMatrixBounds() -> checkMatrixBounds
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    float getValue(android.graphics.Matrix,int) -> getValue
    void resetMatrix() -> resetMatrix
    void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
    android.view.View$OnLongClickListener access$000(uk.co.senab.photoview.PhotoViewAttacher) -> access$000
    java.lang.ref.WeakReference access$100(uk.co.senab.photoview.PhotoViewAttacher) -> access$100
    android.graphics.Matrix access$200(uk.co.senab.photoview.PhotoViewAttacher) -> access$200
    void access$300(uk.co.senab.photoview.PhotoViewAttacher) -> access$300
    void access$400(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$400
uk.co.senab.photoview.PhotoViewAttacher$1 -> uk.co.senab.photoview.PhotoViewAttacher$1:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$2 -> uk.co.senab.photoview.PhotoViewAttacher$2:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    float ANIMATION_SCALE_PER_ITERATION_IN -> ANIMATION_SCALE_PER_ITERATION_IN
    float ANIMATION_SCALE_PER_ITERATION_OUT -> ANIMATION_SCALE_PER_ITERATION_OUT
    float mFocalX -> mFocalX
    float mFocalY -> mFocalY
    float mTargetZoom -> mTargetZoom
    float mDeltaScale -> mDeltaScale
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable:
    uk.co.senab.photoview.ScrollerProxy mScroller -> mScroller
    int mCurrentX -> mCurrentX
    int mCurrentY -> mCurrentY
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> this$0
    void cancelFling() -> cancelFling
    void fling(int,int,int,int) -> fling
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener:
    void onMatrixChanged(android.graphics.RectF) -> onMatrixChanged
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener:
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener:
    void onViewTap(android.view.View,float,float) -> onViewTap
uk.co.senab.photoview.SDK11 -> uk.co.senab.photoview.SDK11:
    void executeOnThreadPool(android.os.AsyncTask,java.lang.Object[]) -> executeOnThreadPool
uk.co.senab.photoview.SDK16 -> uk.co.senab.photoview.SDK16:
    java.lang.String TAG -> TAG
    java.lang.String METHOD_POST_ON_ANIMATION -> METHOD_POST_ON_ANIMATION
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void LOGD(java.lang.String) -> LOGD
uk.co.senab.photoview.ScrollerProxy -> uk.co.senab.photoview.ScrollerProxy:
    uk.co.senab.photoview.ScrollerProxy getScroller(android.content.Context) -> getScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
uk.co.senab.photoview.ScrollerProxy$GingerScroller -> uk.co.senab.photoview.ScrollerProxy$GingerScroller:
    android.widget.OverScroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
uk.co.senab.photoview.ScrollerProxy$PreGingerScroller -> uk.co.senab.photoview.ScrollerProxy$PreGingerScroller:
    android.widget.Scroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
uk.co.senab.photoview.VersionedGestureDetector -> uk.co.senab.photoview.VersionedGestureDetector:
    java.lang.String LOG_TAG -> LOG_TAG
    uk.co.senab.photoview.VersionedGestureDetector$OnGestureListener mListener -> mListener
    uk.co.senab.photoview.VersionedGestureDetector newInstance(android.content.Context,uk.co.senab.photoview.VersionedGestureDetector$OnGestureListener) -> newInstance
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isScaling() -> isScaling
uk.co.senab.photoview.VersionedGestureDetector$CupcakeDetector -> uk.co.senab.photoview.VersionedGestureDetector$CupcakeDetector:
    float mLastTouchX -> mLastTouchX
    float mLastTouchY -> mLastTouchY
    float mTouchSlop -> mTouchSlop
    float mMinimumVelocity -> mMinimumVelocity
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mIsDragging -> mIsDragging
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.VersionedGestureDetector$EclairDetector -> uk.co.senab.photoview.VersionedGestureDetector$EclairDetector:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.VersionedGestureDetector$FroyoDetector -> uk.co.senab.photoview.VersionedGestureDetector$FroyoDetector:
    android.view.ScaleGestureDetector mDetector -> mDetector
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleListener -> mScaleListener
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.VersionedGestureDetector$FroyoDetector$1 -> uk.co.senab.photoview.VersionedGestureDetector$FroyoDetector$1:
    uk.co.senab.photoview.VersionedGestureDetector$FroyoDetector this$0 -> this$0
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.VersionedGestureDetector$OnGestureListener -> uk.co.senab.photoview.VersionedGestureDetector$OnGestureListener:
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onScale(float,float,float) -> onScale
